{"data":{"site":{"siteMetadata":{"title":"Joel's dev blog","author":"Joel Mun","siteUrl":"https://9oelm.github.io"}},"markdownRemark":{"id":"4e7d366b-b8f0-5fa7-a158-a1620e658e5f","excerpt":"Getting the hang of it function   has a closure over the scope of the function  . Nothing really special is going on here. And here are some important points…","html":"<h2>Getting the hang of it</h2>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">function</span> <span class=\"token function\">myModule</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n    \n    <span class=\"token keyword\">var</span> testString <span class=\"token operator\">=</span> <span class=\"token string\">\"im testing\"</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">var</span> hi <span class=\"token operator\">=</span> <span class=\"token string\">\"hi\"</span><span class=\"token punctuation\">;</span>\n    \n    <span class=\"token keyword\">function</span> <span class=\"token function\">test</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n        console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>testString<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n    \n    <span class=\"token keyword\">function</span> <span class=\"token function\">hi</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n        console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>hi<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n    <span class=\"token comment\">// more functions...</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>function <code class=\"language-text\">test</code> has a closure over the scope of the function <code class=\"language-text\">myModule</code>. Nothing really special is going on here.</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">function</span> <span class=\"token function\">myModule</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n    \n    <span class=\"token keyword\">var</span> testString <span class=\"token operator\">=</span> <span class=\"token string\">\"im testing\"</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">var</span> hi <span class=\"token operator\">=</span> <span class=\"token string\">\"hi\"</span><span class=\"token punctuation\">;</span>\n    \n    <span class=\"token keyword\">function</span> <span class=\"token function\">test</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n        console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>testString<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n    \n    <span class=\"token keyword\">function</span> <span class=\"token function\">hi</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n        console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>hi<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n    \n    <span class=\"token keyword\">return</span> <span class=\"token punctuation\">{</span>\n        test<span class=\"token punctuation\">:</span> test<span class=\"token punctuation\">;</span>\n        hi<span class=\"token punctuation\">:</span> hi<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n    <span class=\"token comment\">// more functions...</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">var</span> moduleTest <span class=\"token operator\">=</span> <span class=\"token function\">myModule</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nmoduleTest<span class=\"token punctuation\">.</span><span class=\"token function\">test</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nmoduleTest<span class=\"token punctuation\">.</span><span class=\"token function\">hi</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>And here are some important points:</p>\n<ol>\n<li><code class=\"language-text\">test()</code> and <code class=\"language-text\">hi()</code> cannot be invoked without invoking <code class=\"language-text\">myModule()</code>. Without it, the creation of the inner scope and the closures would not occur.</li>\n<li>The object we return has references on it to our inner functions, <strong>but not to our inner data variables.</strong> We keep those hidden and private.</li>\n<li><strong>It is not required that we return an actual object (literal) from our module. We could just <em>return back an inner function</em> directly.</strong></li>\n</ol>\n<p>And from this we can deduce two important conditions for a module:\n1 There must be an <strong>outer enclosing function</strong>, and it must be invoked at least once (each time creates a new module instance).</p>\n<ol start=\"2\">\n<li><strong>The enclosing function must return back at least one inner function</strong>, so that this inner function has closure over the private scope, and can access and/or modify that private state.</li>\n</ol>\n<h2>Modules with IIFE</h2>\n<p>You can enclose the module to give it a truly private scope. This means you could invoke the module multiple times and you don’t have a confusion in the references of variables. </p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">var</span> moduleTest <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span> <span class=\"token function\">myModule</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n    \n    <span class=\"token keyword\">var</span> testString <span class=\"token operator\">=</span> <span class=\"token string\">\"im testing\"</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">var</span> hi <span class=\"token operator\">=</span> <span class=\"token string\">\"hi\"</span><span class=\"token punctuation\">;</span>\n    \n    <span class=\"token keyword\">function</span> <span class=\"token function\">test</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n        console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>testString<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n    \n    <span class=\"token keyword\">function</span> <span class=\"token function\">hi</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n        console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>hi<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n    \n    <span class=\"token keyword\">return</span> <span class=\"token punctuation\">{</span>\n        test<span class=\"token punctuation\">:</span> test<span class=\"token punctuation\">;</span>\n        hi<span class=\"token punctuation\">:</span> hi<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n    <span class=\"token comment\">// more functions...</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// you could pass parameters down if you want</span>\n\nmoduleTest<span class=\"token punctuation\">.</span><span class=\"token function\">test</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nmoduleTest<span class=\"token punctuation\">.</span><span class=\"token function\">hi</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<h2>Modules in ES6</h2>\n<ol>\n<li>In ES6, each file is a separate module. </li>\n<li>ES6 modules do not have an “inline” format, they must be defined in separate files (one per module). </li>\n<li><strong>The contents inside the module file are treated as if enclosed in a scope closure</strong>, just like with the function-closure modules seen earlier.</li>\n</ol>\n<p><code class=\"language-text\">testString.js</code></p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">function</span> <span class=\"token function\">test</span><span class=\"token punctuation\">(</span>testString<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>testString<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token keyword\">export</span> test<span class=\"token punctuation\">;</span> <span class=\"token comment\">// export functionName</span></code></pre></div>\n<p><code class=\"language-text\">hi.js</code></p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">function</span> <span class=\"token function\">hi</span><span class=\"token punctuation\">(</span>hi<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">let</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> <span class=\"token number\">3</span><span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span>\n        console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>hi<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token keyword\">export</span> hi<span class=\"token punctuation\">;</span></code></pre></div>\n<p><code class=\"language-text\">output.js</code></p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">import</span> test <span class=\"token keyword\">from</span> <span class=\"token string\">\"testString\"</span> \n<span class=\"token comment\">// import arbitraryNameForObject from fileNameWithoutExtension</span>\n<span class=\"token comment\">// used when you want to import selective functions from a module</span>\nmodule hiMachine <span class=\"token keyword\">from</span> <span class=\"token string\">\"hi\"</span> \n<span class=\"token comment\">// module arbitraryNameForObject from fileNameWithoutExtension</span>\n<span class=\"token comment\">// used when you want to import the whole module</span>\n\n<span class=\"token function\">test</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"I'm just testing\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// logs \"I'm just testing\"</span>\n\nhiMachine<span class=\"token punctuation\">.</span><span class=\"token function\">hi</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"hey\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// logs \"hi hi hi\"</span></code></pre></div>\n<h3>For more</h3>\n<p>see <a href=\"https://developer.mozilla.org/ko/docs/Web/JavaScript/Reference/Statements/import\">Mozila</a> for help. In fact, these are all the possible ways to import (copied from this link):</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">import</span> name <span class=\"token keyword\">from</span> <span class=\"token string\">\"module-name\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token operator\">*</span> <span class=\"token keyword\">as</span> name <span class=\"token keyword\">from</span> <span class=\"token string\">\"module-name\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> member <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"module-name\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> member <span class=\"token keyword\">as</span> alias <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"module-name\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> member1 <span class=\"token punctuation\">,</span> member2 <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"module-name\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> member1 <span class=\"token punctuation\">,</span> member2 <span class=\"token keyword\">as</span> alias2 <span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span><span class=\"token operator\">...</span><span class=\"token punctuation\">]</span> <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"module-name\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> defaultMember<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span> member <span class=\"token punctuation\">[</span> <span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span><span class=\"token operator\">...</span><span class=\"token punctuation\">]</span> <span class=\"token punctuation\">]</span> <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"module-name\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> defaultMember<span class=\"token punctuation\">,</span> <span class=\"token operator\">*</span> <span class=\"token keyword\">as</span> alias <span class=\"token keyword\">from</span> <span class=\"token string\">\"module-name\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> defaultMember <span class=\"token keyword\">from</span> <span class=\"token string\">\"module-name\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token string\">\"module-name\"</span><span class=\"token punctuation\">;</span></code></pre></div>","frontmatter":{"title":"Scope and closure (5): modules","date":"April 07, 2018"}}},"pageContext":{"slug":"/2018-04-07--Scope-and-closure-(5):-modules/","previous":{"fields":{"slug":"/2018-04-07--Time-Complexity/"},"frontmatter":{"title":"Time Complexity"}},"next":{"fields":{"slug":"/2018-04-07--How-does-a-file-get-compressed/"},"frontmatter":{"title":"How does a file get compressed?"}}}}