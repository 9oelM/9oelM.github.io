{"data":{"site":{"siteMetadata":{"title":"Joel's dev blog","author":"Joel Mun","siteUrl":"https://9oelm.github.io"}},"markdownRemark":{"id":"d6b6bc3a-10a3-5889-b62b-42e543f2f4ab","excerpt":"What it is Socket.io  is “a library that enables real-time, bidirectional and event-based communication between the browser and the server.” Judging from the…","html":"<h1>What it is</h1>\n<p><a href=\"https://socket.io/docs/\">Socket.io</a> is “a library that enables real-time, bidirectional and event-based communication between the browser and the server.”</p>\n<p>Judging from the explanation, I think it dramatically eases polling for changes and maintaining the connection.</p>\n<h1>So let’s try it</h1>\n<p>You need Nodejs installed beforehand, of course. </p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">npm install --save socket.io socket.io-client express</code></pre></div>\n<p>and make <code class=\"language-text\">index.js</code> to just check if express is running well:</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">var</span> app <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'express'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">var</span> http <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'http'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">Server</span><span class=\"token punctuation\">(</span>app<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\napp<span class=\"token punctuation\">.</span><span class=\"token keyword\">get</span><span class=\"token punctuation\">(</span><span class=\"token string\">'/'</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span>req<span class=\"token punctuation\">,</span> res<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n  res<span class=\"token punctuation\">.</span><span class=\"token function\">send</span><span class=\"token punctuation\">(</span><span class=\"token string\">'&lt;h1>Hello world&lt;/h1>'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\nhttp<span class=\"token punctuation\">.</span><span class=\"token function\">listen</span><span class=\"token punctuation\">(</span><span class=\"token number\">3000</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n  console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'listening on *:3000'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>and then run <code class=\"language-text\">node index.js</code> on your terminal. You should be able to access the Hello World page on <code class=\"language-text\">localhost:3000</code>.</p>\n<h1>Ok. But with <code class=\"language-text\">React</code>?</h1>\n<p>It’s just about using proxy (for development only)</p>\n<h2>Sources</h2>\n<ul>\n<li><a href=\"https://daveceddia.com/create-react-app-express-backend/\">daveceddia.com</a></li>\n<li><a href=\"https://medium.freecodecamp.org/how-to-make-create-react-app-work-with-a-node-backend-api-7c5c48acb1b0\">freecodecamp</a></li>\n</ul>\n<h2>First things</h2>\n<p>Ok. Let’s start again from scratch.</p>\n<p>First, get <code class=\"language-text\">create-react-app</code>.</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">npm install -g create-react-app</code></pre></div>\n<p>And then do <code class=\"language-text\">create-react-app your-app</code>, where <code class=\"language-text\">your-app</code> is going to be the root directory for your repository.</p>\n<p>And if for some reason, especially on Windows environment, <a href=\"https://github.com/facebook/react/issues/11933\">installing <code class=\"language-text\">create-react-app</code> fails for some reason</a> with an error output saying <code class=\"language-text\">npm install --save --save-exact --loglevel error react react-dom react-scripts has failed</code>, switch to <code class=\"language-text\">yarn</code>:</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">npm install -g yarn\n\nyarn global add create-react-app\n\ncreate-react-app my-app</code></pre></div>\n<p>boom! done. </p>\n<h2>Project structure</h2>\n<p>Now, move the codes produced by <code class=\"language-text\">create-react-app</code> into <code class=\"language-text\">client</code> directory that you need to create.</p>\n<p>And install a few things as below:</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">npm install -g yarn nodemon\nnpm install --save socket.io socket.io-client express\nnpm install --save-dev concurrently</code></pre></div>\n<p>and then fill up your <code class=\"language-text\">package.json</code> as follows:</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">{\n  &quot;name&quot;: &quot;chat&quot;,\n  &quot;version&quot;: &quot;1.0.0&quot;,\n  &quot;scripts&quot;: {\n    &quot;client&quot;: &quot;cd client &amp;&amp; yarn start&quot;,\n    &quot;server&quot;: &quot;nodemon server.js&quot;,\n    &quot;dev&quot;: &quot;concurrently --kill-others-on-fail \\&quot;PORT=8080 yarn server\\&quot; \\&quot;PORT=8081 yarn client\\&quot;&quot;\n  },\n  &quot;dependencies&quot;: {\n    &quot;express&quot;: &quot;^4.16.3&quot;,\n    &quot;socket.io&quot;: &quot;^2.1.1&quot;,\n    &quot;socket.io-client&quot;: &quot;^2.1.1&quot;\n  },\n  &quot;devDependencies&quot;: {\n    &quot;concurrently&quot;: &quot;^4.0.1&quot;\n  }\n}</code></pre></div>\n<p>and run <code class=\"language-text\">yarn</code> to keep it up to date with the <code class=\"language-text\">lock</code> file.</p>\n<p>create <code class=\"language-text\">server.js</code> as below:</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">const</span> express <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'express'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> app <span class=\"token operator\">=</span> <span class=\"token function\">express</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> port <span class=\"token operator\">=</span> process<span class=\"token punctuation\">.</span>env<span class=\"token punctuation\">.</span><span class=\"token constant\">PORT</span> <span class=\"token operator\">||</span> <span class=\"token number\">5000</span><span class=\"token punctuation\">;</span>\n\napp<span class=\"token punctuation\">.</span><span class=\"token keyword\">get</span><span class=\"token punctuation\">(</span><span class=\"token string\">'/api/hello'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span>req<span class=\"token punctuation\">,</span> res<span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  res<span class=\"token punctuation\">.</span><span class=\"token function\">send</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> express<span class=\"token punctuation\">:</span> <span class=\"token string\">'Hello From Express'</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\napp<span class=\"token punctuation\">.</span><span class=\"token function\">listen</span><span class=\"token punctuation\">(</span>port<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token template-string\"><span class=\"token string\">`Listening on port </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>port<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">`</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>and if you open up on your browser <code class=\"language-text\">localhost:8080/api/hello</code>, </p>\n<p>you are going to see:</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">{&quot;express&quot;:&quot;Hello From Express&quot;}</code></pre></div>\n<p>on your browser. </p>\n<h2>So far</h2>\n<p>So far, this has been the project structure:</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">j031:~/workspace/chat $ tree -L 4 -I node_modules\n.\n├── client\n│   ├── README.md\n│   ├── package-lock.json\n│   ├── package.json\n│   ├── public\n│   │   ├── favicon.ico\n│   │   ├── index.html\n│   │   └── manifest.json\n│   └── src\n│       ├── App.css\n│       ├── App.js\n│       ├── App.test.js\n│       ├── index.css\n│       ├── index.js\n│       ├── logo.svg\n│       └── serviceWorker.js\n├── package-lock.json\n├── package.json\n└── server.js\n\n3 directories, 16 files</code></pre></div>\n<h2>Add proxy</h2>\n<p>Add this line to <code class=\"language-text\">package.json</code> inside <code class=\"language-text\">client</code> folder:</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">&quot;proxy&quot;: &quot;http://localhost:8080/&quot;</code></pre></div>\n<p>This tells the <code class=\"language-text\">create-react-app</code> development server to proxy our API requests to the express server.</p>\n<p>We are going to use the port 8080 for the <code class=\"language-text\">express</code> server, and 8081 for <code class=\"language-text\">create-react-app</code> server.</p>\n<p>Now you are good to go!</p>\n<p>Check out on <code class=\"language-text\">http://localhost:8081</code>!</p>","frontmatter":{"title":"Using React and Express together","date":"October 07, 2018"}}},"pageContext":{"slug":"/2018-10-07--Using-React-and-Express-Together/","previous":{"fields":{"slug":"/2018-09-18--Controlled-youtube-(2):-adding-tests/"},"frontmatter":{"title":"Controlled youtube (2): adding tests"}},"next":{"fields":{"slug":"/2018-10-07--Chatting-app-with-express-+-react-+-socket.io-+-etc/"},"frontmatter":{"title":"Chatting app with express + react + socket.io + etc"}}}}