{"data":{"site":{"siteMetadata":{"title":"Joel's dev blog","author":"Joel Mun","siteUrl":"https://9oelm.github.io"}},"markdownRemark":{"id":"f4a48f00-62ba-5252-a15d-beae744f47d8","excerpt":"Rationale I had no choice. I needed go explore full-stack. I could not just stay as a front-end developer. Code So I just cloned  this well-made boilerplate…","html":"<h1>Rationale</h1>\n<p>I had no choice. I needed go explore full-stack. I could not just stay as a front-end developer.</p>\n<h1>Code</h1>\n<p>So I just cloned <a href=\"https://github.com/crsandeep/simple-react-full-stack\">this well-made boilerplate repo</a> and wrote my codes onto it, <a href=\"https://github.com/9oelM/chatt\">in this repo</a>.</p>\n<h1>Brute-forcing this education process</h1>\n<p>And I just looked for resources to educate myself. I decided to make a simple working chat app.</p>\n<h2>Sources on creating a simple chatting app</h2>\n<ul>\n<li><a href=\"https://blog.slatepeak.com/creating-a-real-time-chat-api-with-node-express-socket-io-and-mongodb/\">slatepeak</a></li>\n<li><a href=\"https://www.djamware.com/post/5b6a681f80aca76a2cbd98fb/mongodb-express-vuejs-2-nodejs-mevn-and-socketio-chat-app\">djamware</a></li>\n</ul>\n<h2>Sources on Mongoose &#x26; MongoDB</h2>\n<ul>\n<li><a href=\"https://mongoosejs.com/docs/guide.html\">Mongoose homepage</a></li>\n<li><a href=\"https://velopert.com/436\">Velopert 1</a></li>\n<li><a href=\"https://velopert.com/594\">Velopert 2</a></li>\n</ul>\n<h1>What the heck is <code class=\"language-text\">mongodb</code></h1>\n<ul>\n<li>The most popular NoSQL database.</li>\n<li>A record in MongoDB is called a <strong>document</strong>, which is a data structure composed of field and value pairs (just like Javascript objects that are key-value pairs). </li>\n</ul>\n<h1>MongoDB Atlas</h1>\n<p>MongoDB Atlas is a cloud-hosted service for provisioning, running, monitoring, and maintaining MongoDB deployments. It is a fast, easy, and free way to get started with MongoDB.</p>\n<p>Yeah. So I signed up for it. I just followed instructions <a href=\"https://docs.mongodb.com/manual/tutorial/atlas-free-tier-setup/#create-free-tier-manual\">here</a>.</p>\n<h1>Trying</h1>\n<p>Install <code class=\"language-text\">mongodb</code></p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">sudo apt-get install -y mongodb-org</code></pre></div>\n<p>Run <code class=\"language-text\">mongodb</code></p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">mongod --nojournal\n\n\n2018-10-07T18:07:06.550+0000 [initandlisten] MongoDB starting : pid=5025 port=27017 dbpath=/data/db 64-bit host=j031-testt-6450328\n2018-10-07T18:07:06.550+0000 [initandlisten] db version v2.6.12\n2018-10-07T18:07:06.550+0000 [initandlisten] git version: d73c92b1c85703828b55c2916a5dd4ad46535f6a\n2018-10-07T18:07:06.550+0000 [initandlisten] build info: Linux build5.ny.cbi.10gen.cc 2.6.32-431.3.1.el6.x86_64 #1 SMP Fri Jan 3 21:39:27 UTC 2014 x86_64 BOOST_LIB_VERSION=1_49\n2018-10-07T18:07:06.550+0000 [initandlisten] allocator: tcmalloc\n2018-10-07T18:07:06.550+0000 [initandlisten] options: { storage: { journal: { enabled: false } } }\n2018-10-07T18:07:06.557+0000 [initandlisten] allocating new ns file /data/db/local.ns, filling with zeroes...\n2018-10-07T18:07:06.628+0000 [FileAllocator] allocating new datafile /data/db/local.0, filling with zeroes...\n2018-10-07T18:07:06.628+0000 [FileAllocator] creating directory /data/db/_tmp\n2018-10-07T18:07:06.635+0000 [FileAllocator] done allocating datafile /data/db/local.0, size: 64MB,  took 0.002 secs\n2018-10-07T18:07:06.636+0000 [initandlisten] build index on: local.startup_log properties: { v: 1, key: { _id: 1 }, name: &quot;_id_&quot;, ns: &quot;local.startup_log&quot; }\n2018-10-07T18:07:06.636+0000 [initandlisten]     added index to empty collection\n2018-10-07T18:07:06.637+0000 [initandlisten] waiting for connections on port 27017\n^C2018-10-07T18:07:22.593+0000 [signalProcessingThread] got signal 2 (Interrupt), will terminate after current cmd ends\n2018-10-07T18:07:22.593+0000 [signalProcessingThread] now exiting\n2018-10-07T18:07:22.593+0000 [signalProcessingThread] dbexit: \n2018-10-07T18:07:22.593+0000 [signalProcessingThread] shutdown: going to close listening sockets...\n2018-10-07T18:07:22.593+0000 [signalProcessingThread] closing listening socket: 5\n2018-10-07T18:07:22.593+0000 [signalProcessingThread] closing listening socket: 6\n2018-10-07T18:07:22.593+0000 [signalProcessingThread] removing socket file: /tmp/mongodb-27017.sock\n2018-10-07T18:07:22.593+0000 [signalProcessingThread] shutdown: going to flush diaglog...\n2018-10-07T18:07:22.594+0000 [signalProcessingThread] shutdown: going to close sockets...\n2018-10-07T18:07:22.594+0000 [signalProcessingThread] shutdown: waiting for fs preallocator...\n2018-10-07T18:07:22.594+0000 [signalProcessingThread] shutdown: closing all files...\n2018-10-07T18:07:22.594+0000 [signalProcessingThread] closeAllFiles() finished\n2018-10-07T18:07:22.594+0000 [signalProcessingThread] shutdown: removing fs lock...\n2018-10-07T18:07:22.594+0000 [signalProcessingThread] dbexit: really exiting now</code></pre></div>\n<p>on c9, you won’t have enough spaces, so append this <code class=\"language-text\">--nojournal</code> option.</p>\n<h2>Doing things with <code class=\"language-text\">mongo</code> to manipulate database</h2>\n<p>First, launch up <code class=\"language-text\">mongod</code> again and then start console with <code class=\"language-text\">mongo</code>.</p>\n<h3><code class=\"language-text\">use databaseName</code></h3>\n<p>If <code class=\"language-text\">databaseName</code> exists, switch to this database. Otherwise create and switch to <code class=\"language-text\">databaseName</code>.</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">&gt; use test\nswitched to db test</code></pre></div>\n<h3><code class=\"language-text\">db</code></h3>\n<p>Check which database I’m on. <code class=\"language-text\">db</code> also refers to the database you are on when used in combination with other commands. </p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">&gt; db\ntest</code></pre></div>\n<h3><code class=\"language-text\">show dbs</code></h3>\n<p>Check the list of databases.</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">&gt; show dbs\nadmin  (empty)\nlocal  0.078GB</code></pre></div>\n<h3>Delete database</h3>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">1. `use databaseName`\n2. `db.dropDatabase();`</code></pre></div>\n<h3>Create collection</h3>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">db.createCollection(name, [options])</code></pre></div>\n<p>But you could also implicitly create collection by inserting into a collection that has not yet been made:</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">&gt; db.users.insert({&quot;username&quot;: &quot;joel&quot;})\nWriteResult({ &quot;nInserted&quot; : 1 })</code></pre></div>\n<h3><code class=\"language-text\">show collections</code></h3>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">&gt; show collections\nsystem.indexes\nusers</code></pre></div>\n<p>Check collection with this command.</p>\n<p>I mean, you got it right? Other commands follow the same logic. Now I just need to search for APIs when I need other commands.</p>","frontmatter":{"title":"Chatting app with express + react + socket.io + etc","date":"October 07, 2018"}}},"pageContext":{"slug":"/2018-10-07--Chatting-app-with-express-+-react-+-socket.io-+-etc/","previous":{"fields":{"slug":"/2018-10-07--Using-React-and-Express-Together/"},"frontmatter":{"title":"Using React and Express together"}},"next":{"fields":{"slug":"/2018-10-19--Starting-Vue-from-scratch-(5)---Using-Element-UI/"},"frontmatter":{"title":"Starting Vue from scratch (5) - Using Element UI"}}}}