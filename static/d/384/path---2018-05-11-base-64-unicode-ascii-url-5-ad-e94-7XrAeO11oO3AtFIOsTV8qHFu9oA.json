{"data":{"site":{"siteMetadata":{"title":"Joel's dev blog","author":"Joel Mun"}},"markdownRemark":{"id":"356eeb48-358a-5080-a6f9-27f27c3997d7","excerpt":"Base64 Sources lifewire mozilla oracle base64 helper Definition “Base64 is a group of similar binary-to-text encoding schemes that represent binary data in an…","html":"<h2>Base64</h2>\n<h3>Sources</h3>\n<ul>\n<li><a href=\"https://www.lifewire.com/base64-encoding-overview-1166412\">lifewire</a></li>\n<li><a href=\"https://developer.mozilla.org/en-US/docs/Web/API/WindowBase64/Base64_encoding_and_decoding\">mozilla</a></li>\n<li><a href=\"https://blogs.oracle.com/rammenon/base64-explained\">oracle</a></li>\n<li><a href=\"https://www.base64encode.org/\">base64 helper</a></li>\n</ul>\n<h3>Definition</h3>\n<blockquote>\n<p>“Base64 is a group of similar binary-to-text encoding schemes that represent binary data in an ASCII string format by translating it into a radix-64 representation.”</p>\n</blockquote>\n<h3>Conversion table (value to encoding char)</h3>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">0\tA\t16\tQ\t32\tg\t48\tw\n1\tB\t17\tR\t33\th\t49\tx\n2\tC\t18\tS\t34\ti\t50\ty\n3\tD\t19\tT\t35\tj\t51\tz\n4\tE\t20\tU\t36\tk\t52\t0\n5\tF\t21\tV\t37\tl\t53\t1\n6\tG\t22\tW\t38\tm\t54\t2\n7\tH\t23\tX\t39\tn\t55\t3\n8\tI\t24\tY\t40\to\t56\t4\n9\tJ\t25\tZ\t41\tp\t57\t5\n10\tK\t26\ta\t42\tq\t58\t6\n11\tL\t27\tb\t43\tr\t59\t7\n12\tM\t28\tc\t44\ts\t60\t8\n13\tN\t29\td\t45\tt\t61\t9\n14\tO\t30\te\t46\tu\t62\t+\n15\tP\t31\tf\t47\tv\t63\t/\n                        padding =</code></pre></div>\n<h3>Relation to ASCII</h3>\n<blockquote>\n<p>The following is the character subset of US-ASCII that is used for Base64.</p>\n</blockquote>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">[a-z] – 26 characters           \n[A-Z] – 26 characters         \n[0-9] – 10 characters          \n[+]  - 1 character [filler character]\n[/]   - 1 character [filler character]\n[=]  - Used for Padding purposes, as explained later.&quot;</code></pre></div>\n<h3>The padding’s use</h3>\n<blockquote>\n<p>“If the modified input data contains any octets that contain only padded zeroes, replace each of those octets with the padding character “=”.”</p>\n</blockquote>\n<h3>Bits</h3>\n<p>Base64 only uses 6 bits to represent one character because only 2^6 = 64 characters are used.</p>\n<h3>Conversion</h3>\n<p>Here’s how you could convert some data to base64:</p>\n<ol>\n<li>Take in 3 bytes (24 bits) *reminder: a byte can hold (unsigned) numbers from 0 through 255.</li>\n</ol>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">211 19 46</code></pre></div>\n<ol start=\"2\">\n<li>List them as if they are just one number in binary format. </li>\n</ol>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">11010011 00010011 00110001, so:\n\n110100110001001100110001</code></pre></div>\n<ol start=\"3\">\n<li>Dissect them again into 4 segments of 6 bits (because base64 uses 6 bits to represent one character). </li>\n</ol>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">110100 110001 001100 110001</code></pre></div>\n<ol start=\"4\">\n<li>Get the decimal values of these 6 bit numbers.</li>\n</ol>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">110100 110001 001100 110001\n52 49 12 49</code></pre></div>\n<ol start=\"5\">\n<li>Refer to the encoding table to find the matches. Padded zeros at the end become <code class=\"language-text\">=</code>, the padding.</li>\n</ol>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">w5MTLg==</code></pre></div>\n<p>Another example for an ASCII string</p>\n<ol>\n<li>Data</li>\n</ol>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">Hello</code></pre></div>\n<ol start=\"2\">\n<li>Break it down into bits (refer to ASCII table)</li>\n</ol>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">01001000 01100101 01101100 01101100 01101111 00001010 </code></pre></div>\n<ol start=\"3\">\n<li>Get them into 6 bits each</li>\n</ol>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">010010 000110 010101 101100 011011 000110 111100 001010 </code></pre></div>\n<ol start=\"4\">\n<li>Get decimal values of these numbers.</li>\n</ol>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">18 6 21 44 27 6 60 10</code></pre></div>\n<ol start=\"5\">\n<li>Get the encoding from the table</li>\n</ol>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">SGVsbG8=</code></pre></div>\n<h2>ASCII</h2>\n<h3>Sources</h3>\n<ul>\n<li><a href=\"https://stackoverflow.com/questions/19212306/whats-the-difference-between-ascii-and-unicode\">stackoverflow</a></li>\n<li><a href=\"https://www.cs.cmu.edu/~pattis/15-1XX/common/handouts/ascii.html\">Carnegie mellon</a></li>\n</ul>\n<h3>Definition</h3>\n<p>American Standard Code for Information Interchange. Each character is represented by 7-bit number, defining 128 characters only. </p>\n<h3>Conversion table</h3>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">Dec  Char                           Dec  Char     Dec  Char     Dec  Char\n---------                           ---------     ---------     ----------\n  0  NUL (null)                      32  SPACE     64  @         96  `\n  1  SOH (start of heading)          33  !         65  A         97  a\n  2  STX (start of text)             34  &quot;         66  B         98  b\n  3  ETX (end of text)               35  #         67  C         99  c\n  4  EOT (end of transmission)       36  $         68  D        100  d\n  5  ENQ (enquiry)                   37  %         69  E        101  e\n  6  ACK (acknowledge)               38  &amp;         70  F        102  f\n  7  BEL (bell)                      39  &#39;         71  G        103  g\n  8  BS  (backspace)                 40  (         72  H        104  h\n  9  TAB (horizontal tab)            41  )         73  I        105  i\n 10  LF  (NL line feed, new line)    42  *         74  J        106  j\n 11  VT  (vertical tab)              43  +         75  K        107  k\n 12  FF  (NP form feed, new page)    44  ,         76  L        108  l\n 13  CR  (carriage return)           45  -         77  M        109  m\n 14  SO  (shift out)                 46  .         78  N        110  n\n 15  SI  (shift in)                  47  /         79  O        111  o\n 16  DLE (data link escape)          48  0         80  P        112  p\n 17  DC1 (device control 1)          49  1         81  Q        113  q\n 18  DC2 (device control 2)          50  2         82  R        114  r\n 19  DC3 (device control 3)          51  3         83  S        115  s\n 20  DC4 (device control 4)          52  4         84  T        116  t\n 21  NAK (negative acknowledge)      53  5         85  U        117  u\n 22  SYN (synchronous idle)          54  6         86  V        118  v\n 23  ETB (end of trans. block)       55  7         87  W        119  w\n 24  CAN (cancel)                    56  8         88  X        120  x\n 25  EM  (end of medium)             57  9         89  Y        121  y\n 26  SUB (substitute)                58  :         90  Z        122  z\n 27  ESC (escape)                    59  ;         91  [        123  {\n 28  FS  (file separator)            60  &lt;         92  \\        124  |\n 29  GS  (group separator)           61  =         93  ]        125  }\n 30  RS  (record separator)          62  &gt;         94  ^        126  ~\n 31  US  (unit separator)            63  ?         95  _        127  DEL</code></pre></div>\n<h3>Note on characters</h3>\n<ul>\n<li>Control characters are from <code class=\"language-text\">0</code> to <code class=\"language-text\">31</code>, and <code class=\"language-text\">127</code>.</li>\n<li>Printable characters are from <code class=\"language-text\">32</code> to <code class=\"language-text\">126</code>.</li>\n</ul>\n<h3>Extended ASCII</h3>\n<p>It has 8 bits, thus allowing a room for 256 characters. It just has some special characters and weird looking characters like Ã. </p>\n<h2>Unicode</h2>\n<h3>Sources</h3>\n<ul>\n<li><a href=\"https://stackoverflow.com/questions/22404493/is-there-a-drastic-difference-between-utf-8-and-utf-16/22404874#22404874\">stackoverflow</a></li>\n</ul>\n<h3>Notes on Unicode</h3>\n<blockquote>\n<p>“Unicode is a superset of ASCII, and the numbers 0–128 have the same meaning in ASCII as they have in Unicode. For example, the number 65 means Latin capital ‘A’.”</p>\n</blockquote>\n<p>So obviously if you were Chinese or Korean, you would not be able to express characters in your language using ASCII. So this is where Unicode kicks in.</p>\n<h3>Different number of bits</h3>\n<p>UTF is a short for Unicode Transformation Format.</p>\n<ul>\n<li>UTF-8: minimum 8 bits. <strong>Only this</strong> uses first 128 characters as those in ASCII.</li>\n<li>UTF-16: minimum 16 bits.</li>\n<li>UTF-32: minimum and maximum 32 bits.</li>\n</ul>\n<h2>URL Encoding</h2>\n<h3>Sources</h3>\n<ul>\n<li><a href=\"https://www.url-encode-decode.com/\">Dan’s tools</a></li>\n</ul>\n<h3>Definition</h3>\n<blockquote>\n<p>“URL encoding stands for encoding certain characters in a URL by replacing them with one or more character triplets that consist of the percent character ”%” followed by two hexadecimal digits. The two hexadecimal digits of the triplet(s) represent the numeric value of the replaced character.”</p>\n</blockquote>\n<p>This concept may also in fact be applied to URN and URI. Same thing for them.</p>\n<h3>Why.</h3>\n<blockquote>\n<p>“The characters allowed in a URI are <strong>either reserved or unreserved</strong> (or a percent character as part of a percent-encoding). </p>\n</blockquote>\n<blockquote>\n<p><strong>Unreserved characters</strong> have no such meaning:”</p>\n</blockquote>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">A B C D E F G H I J K L M N O P Q R S T U V W X Y Z\na b c d e f g h i j k l m n o p q r s t u v w x y z\n0 1 2 3 4 5 6 7 8 9 - _ . ~</code></pre></div>\n<blockquote>\n<p>The unreserved characters can be encoded, but should not be encoded.</p>\n</blockquote>\n<blockquote>\n<p>”<strong>Reserved characters</strong> are those characters that sometimes have special meaning:”</p>\n</blockquote>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">! * &#39; ( ) ; : @ &amp; = + $ , / ? % # [ ]</code></pre></div>\n<blockquote>\n<p>The reserved characters have to be encoded only under certain circumstances. </p>\n</blockquote>\n<p>And percent encoding is used to represent the characters that do not belong to neither of these groups of characters—for example, a Korean character <code class=\"language-text\">안녕</code>. </p>\n<h3>Conversion</h3>\n<ol>\n<li>Convert the character string into a sequence of bytes using the UTF-8 encoding</li>\n<li>Convert each byte that is not an ASCII letter or digit to %HH, where HH is the hexadecimal value of the byte</li>\n</ol>\n<p>Example</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">안녕 in text.\n\n\\xec\\x95\\x88\\xeb\\x85\\x95 in UTF-8.\n\n%ec%95%88%eb%85%95 in percent encoding.</code></pre></div>","frontmatter":{"title":"Base64, Unicode, ASCII, URL","date":"May 11, 2018"}}},"pageContext":{"slug":"/2018-05-11--Base64,-Unicode,-ASCII,-URL/","previous":{"fields":{"slug":"/2018-05-08--Forensic-tools/"},"frontmatter":{"title":"Forensic tools"}},"next":{"fields":{"slug":"/2018-05-12--Windows-Registry/"},"frontmatter":{"title":"Windows Registry"}}}}