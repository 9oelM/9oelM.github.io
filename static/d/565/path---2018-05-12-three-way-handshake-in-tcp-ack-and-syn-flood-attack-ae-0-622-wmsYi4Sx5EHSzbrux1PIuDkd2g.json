{"data":{"site":{"siteMetadata":{"title":"Joel's dev blog","author":"Joel Mun"}},"markdownRemark":{"id":"e3d1b29a-bc77-5914-9c7c-7496d203428a","excerpt":"Sources mazebolt microsoft geeksforgeeks ddosguard flowguard wikipedia Three-way handshake: how does it work When is it used TCP three-way handshake occurs…","html":"<h2>Sources</h2>\n<ul>\n<li><a href=\"https://kb.mazebolt.com/knowledgebase/ack-flood/\">mazebolt</a></li>\n<li><a href=\"https://support.microsoft.com/en-gb/help/172983/explanation-of-the-three-way-handshake-via-tcp-ip\">microsoft</a></li>\n<li><a href=\"https://www.geeksforgeeks.org/computer-network-tcp-3-way-handshake-process/\">geeksforgeeks</a></li>\n<li><a href=\"https://ddos-guard.net/en/terminology/ack-push-ack-flood\">ddosguard</a></li>\n<li><a href=\"https://www.flowguard.io/about-ddos/types-of-ddos/ack-flood-attack\">flowguard</a></li>\n<li><a href=\"https://en.wikipedia.org/wiki/SYN_flood\">wikipedia</a></li>\n</ul>\n<h2>Three-way handshake: how does it work</h2>\n<h3>When is it used</h3>\n<p>TCP three-way handshake occurs between a client and server when initiating or terminating a TCP connection.</p>\n<h3>Expalined in detail</h3>\n<ol>\n<li>\n<p>So let’s say client A and B are trying to make a connection over TCP.</p>\n</li>\n<li>\n<p><code class=\"language-text\">A</code> will send a <code class=\"language-text\">SYN</code>(chronize) packet to <code class=\"language-text\">B</code> with a sequence number that tells where the segment will begin from.</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">A   --SYN (seq = x)--&gt;  B\n\nnote: x is n + 1 where n is previous sequence number it just had.</code></pre></div>\n</li>\n<li>\n<p><code class=\"language-text\">B</code> receives a frame from <code class=\"language-text\">A</code> and will send a <code class=\"language-text\">SYN + ACK</code> frame as a reply. <code class=\"language-text\">SYN</code> is to start the conversation and <code class=\"language-text\">ACK</code> is just proof to the client that the ACK is specific to the SYN the client initiated. </p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">A   &lt;--SYN + ACK (seq = y, ack = x + 1)--   B</code></pre></div>\n</li>\n<li>\n<p><code class=\"language-text\">A</code> sends back an <code class=\"language-text\">ACK</code> frame to <code class=\"language-text\">B</code> to acknowledge the request from <code class=\"language-text\">B</code> for synchronization.</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">A   --ACK (ack = y + 1)--&gt;  B</code></pre></div>\n</li>\n</ol>\n<h2>SYN Flood</h2>\n<ol>\n<li>You send many <code class=\"language-text\">SYN</code> packets to the victim to seem to be establishing a connection with it. </li>\n<li>But you never receive <code class=\"language-text\">SYN + ACK</code> packet back from the victim. The connection is therefore half-opened.</li>\n<li>The victim (probably a server) will be loaded up with many <code class=\"language-text\">SYN</code> requests, unable to process innocent <code class=\"language-text\">SYN</code> requests because of overload. </li>\n</ol>\n<h2>ACK Flood</h2>\n<blockquote>\n<p>“An ACK flood is designed to disrupt network activity by saturating bandwidth and resources on stateful devices in its path.”</p>\n</blockquote>\n<ol>\n<li>\n<p>You will send thousands of fake ACK packets that do not belong to any of the sessions on the server’s list of transmissions.</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">You -- Many random ACK&#39;s --&gt; victim</code></pre></div>\n</li>\n<li>\n<p>The victim will send <code class=\"language-text\">RST</code>(reset) packet because it never saw corresponding sequence of three-way handshake.</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">You &lt;-- RST -- victim</code></pre></div>\n</li>\n<li>“Generally what is seen is a high rate of ACK packets (not preceded by a TCP handshake) and a slightly lesser rate of RST packets coming from the targeted server.”</li>\n<li>As a result, system resources are depleted to evaluate incoming packets and consequently reduce performance or cause a complete crash.</li>\n</ol>\n<h3>On wireshark</h3>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">tcp.flags.ack == 1 </code></pre></div>\n<p>to see ack packets.</p>","frontmatter":{"title":"Three-way handshake in TCP & ACK and SYN flood attack","date":"May 12, 2018"}}},"pageContext":{"slug":"/2018-05-12--Three-way-handshake-in-TCP-&-ACK-and-SYN-flood-attack/","previous":{"fields":{"slug":"/2018-05-12--MD5-and-SHA/"},"frontmatter":{"title":"MD5 and SHA"}},"next":{"fields":{"slug":"/2018-05-19--Using-foresic-tools-(1):-process-explorer,-process-monitor,-and-autoruns/"},"frontmatter":{"title":"Using foresic tools (1): process explorer, process monitor, and autoruns"}}}}