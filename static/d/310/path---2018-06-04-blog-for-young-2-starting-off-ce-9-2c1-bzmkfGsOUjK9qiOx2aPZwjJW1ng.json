{"data":{"site":{"siteMetadata":{"title":null,"author":null}},"markdownRemark":{"id":"4f185c19-8f0d-50cf-bcdc-7b328851c670","excerpt":"Set up basic things ( see previous post on basic things with next.js ) Install next, react, react-dom & grommet command line tools and grommet Create   inside…","html":"<h2>Set up basic things (<a href=\"https://9oelm.github.io/development/2018/06/01/Next.js-(1)-Basic-setup-and-understanding.html\">see previous post on basic things with next.js</a>)</h2>\n<h3>Install next, react, react-dom &#x26; grommet command line tools and grommet</h3>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">npm init\n\nnpm install --save next react react-dom\n\nnpm install --save grommet</code></pre></div>\n<h3>Create <code class=\"language-text\">_document.js</code> inside <code class=\"language-text\">pages</code></h3>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">j031:~/workspace $ tree -L 2 -I node_modules\n.\n├── README.md\n├── package.json\n└── pages\n    └── _document.js</code></pre></div>\n<p>Why <code class=\"language-text\">_document.js</code>? </p>\n<blockquote>\n<p>Pages in Next.js skip the definition of the surrounding document’s markup. For example, you never include <html>, <body>, etc. <strong>To override that default behavior, you must create a file at ./pages/_document.js</strong>, where you can extend the Document class.</p>\n</blockquote>\n<p><code class=\"language-text\">_document.js</code></p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token comment\">// pages/_document.js</span>\n<span class=\"token keyword\">import</span> Document<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span> Head<span class=\"token punctuation\">,</span> Main<span class=\"token punctuation\">,</span> NextScript <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'next/document'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">CustomDocument</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">Document</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">render</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n      <span class=\"token operator\">&lt;</span>html<span class=\"token operator\">></span>\n        <span class=\"token operator\">&lt;</span>Head<span class=\"token operator\">></span>\n        <span class=\"token comment\">/* This is going to be your global head */</span>\n          <span class=\"token punctuation\">{</span> <span class=\"token punctuation\">}</span>\n        <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>Head<span class=\"token operator\">></span>\n        <span class=\"token operator\">&lt;</span>body<span class=\"token operator\">></span>\n          <span class=\"token operator\">&lt;</span>Main <span class=\"token operator\">/</span><span class=\"token operator\">></span> <span class=\"token comment\">/* each routed page will go inside here */</span>\n          <span class=\"token operator\">&lt;</span>NextScript <span class=\"token operator\">/</span><span class=\"token operator\">></span> <span class=\"token comment\">/* You don't have to care about this. */</span>\n        <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>body<span class=\"token operator\">></span>\n      <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>html<span class=\"token operator\">></span>\n    <span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<h3>Make <code class=\"language-text\">pages/index.js</code></h3>\n<p><code class=\"language-text\">index.js</code> will be <code class=\"language-text\">/</code> if you were entering the website with an URL.</p>\n<h3>Make <code class=\"language-text\">pages/_error.js</code></h3>\n<p>This page will be shown if there is an error. This is a custom error page. </p>\n<h3>Make <code class=\"language-text\">/next.config.js</code></h3>\n<p>This is going to contain your settings.</p>\n<h3>Make <code class=\"language-text\">components</code> folder and put components inside it.</h3>\n<h3>Make <code class=\"language-text\">static</code> folder and put static assets inside it.</h3>\n<h2>So far</h2>\n<p>Directory structure</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">j031:~/workspace $ tree -L 2 -I node_modules                                                                                   \n.\n├── README.md\n├── components\n├── next.config.js\n├── package.json\n└── pages\n    ├── _document.js\n    ├── _error.js\n    └── index.js\n    \n+ node_modules ofc</code></pre></div>\n<h3>Include CSS</h3>\n<p>I’m using sass.</p>\n<p>First, get the loader for sass (<code class=\"language-text\">node-sass</code> is a peer)</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">npm install --save @zeit/next-sass node-sass</code></pre></div>\n<p>And edit <code class=\"language-text\">next.config.js</code> to apply the changes</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">const</span> withSass <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'@zeit/next-sass'</span><span class=\"token punctuation\">)</span>\n\nmodule<span class=\"token punctuation\">.</span>exports <span class=\"token operator\">=</span> <span class=\"token function\">withSass</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n  <span class=\"token function\">webpack</span><span class=\"token punctuation\">(</span>config<span class=\"token punctuation\">,</span> options<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// Further custom configuration here</span>\n    <span class=\"token keyword\">return</span> config\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span></code></pre></div>\n<blockquote>\n<p>The stylesheet is compiled to .next/static/style.css. You have to include it into the page using a custom <em>document.js. The file will be served from **`/</em>next/static/style.css`**</p>\n</blockquote>\n<p>There will be only one stylesheet (<code class=\"language-text\">/_next/static/style.css</code>)in the end no matter how many stylesheets you import inside <code class=\"language-text\">/pages</code>. </p>\n<h2>Darn it. it’s hard. I got it launched up finally:</h2>\n<p><img src=\"https://i.imgur.com/t5EFRrR.jpg\" alt=\"Website launched\"></p>\n<h2>And this is what we’ve got so far:</h2>\n<h3>Structure</h3>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">j031:~/workspace $ tree -L 2 -I node_modules                                    \n.\n├── README.md\n├── components\n├── next.config.js\n├── npm-debug.log\n├── package.json\n├── pages\n│   ├── _document.js\n│   ├── _error.js\n│   └── index.js\n└── static\n    └── styles.scss\n\n3 directories, 8 files</code></pre></div>\n<h3><code class=\"language-text\">/next.config.js</code></h3>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">const</span> withSass <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'@zeit/next-sass'</span><span class=\"token punctuation\">)</span>\n\nmodule<span class=\"token punctuation\">.</span>exports <span class=\"token operator\">=</span> <span class=\"token function\">withSass</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n  <span class=\"token function\">webpack</span><span class=\"token punctuation\">(</span>config<span class=\"token punctuation\">,</span> options<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// Further custom configuration here</span>\n    <span class=\"token keyword\">return</span> config\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span></code></pre></div>\n<h3><code class=\"language-text\">/pages/_document.js</code></h3>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token comment\">// _document.js</span>\n<span class=\"token comment\">// pages/_document.js</span>\n<span class=\"token keyword\">import</span> Document<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span> Head<span class=\"token punctuation\">,</span> Main<span class=\"token punctuation\">,</span> NextScript <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'next/document'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">CustomDocument</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">Document</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">render</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n      <span class=\"token operator\">&lt;</span>html<span class=\"token operator\">></span>\n        <span class=\"token operator\">&lt;</span>Head<span class=\"token operator\">></span>\n        <span class=\"token punctuation\">{</span><span class=\"token comment\">/* This is going to be your global head */</span><span class=\"token punctuation\">}</span>\n          <span class=\"token operator\">&lt;</span>link rel<span class=\"token operator\">=</span><span class=\"token string\">\"stylesheet\"</span> href<span class=\"token operator\">=</span><span class=\"token string\">\"/_next/static/style.css\"</span> <span class=\"token operator\">/</span><span class=\"token operator\">></span>\n        <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>Head<span class=\"token operator\">></span>\n        <span class=\"token operator\">&lt;</span>body<span class=\"token operator\">></span>\n          <span class=\"token operator\">&lt;</span>Main <span class=\"token operator\">/</span><span class=\"token operator\">></span> <span class=\"token punctuation\">{</span><span class=\"token comment\">/* each routed page will go inside here */</span><span class=\"token punctuation\">}</span>\n          <span class=\"token operator\">&lt;</span>NextScript <span class=\"token operator\">/</span><span class=\"token operator\">></span> <span class=\"token punctuation\">{</span><span class=\"token comment\">/* You don't have to care about this. */</span><span class=\"token punctuation\">}</span>\n        <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>body<span class=\"token operator\">></span>\n      <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>html<span class=\"token operator\">></span>\n    <span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<h3><code class=\"language-text\">/pages/_error.js</code></h3>\n<p>run </p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">npm install --save isomorphic-unfetch</code></pre></div>\n<p>to get the dependency first.</p>\n<p>then</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">import</span> React <span class=\"token keyword\">from</span> <span class=\"token string\">'react'</span>\n<span class=\"token keyword\">import</span> Error <span class=\"token keyword\">from</span> <span class=\"token string\">'next/error'</span>\n<span class=\"token keyword\">import</span> fetch <span class=\"token keyword\">from</span> <span class=\"token string\">'isomorphic-unfetch'</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">Page</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">React<span class=\"token punctuation\">.</span>Component</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">static</span> <span class=\"token keyword\">async</span> <span class=\"token function\">getInitialProps</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">const</span> res <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> <span class=\"token function\">fetch</span><span class=\"token punctuation\">(</span><span class=\"token string\">'https://api.github.com/repos/zeit/next.js'</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">const</span> statusCode <span class=\"token operator\">=</span> res<span class=\"token punctuation\">.</span>statusCode <span class=\"token operator\">></span> <span class=\"token number\">200</span> <span class=\"token operator\">?</span> res<span class=\"token punctuation\">.</span>statusCode <span class=\"token punctuation\">:</span> <span class=\"token boolean\">false</span>\n    <span class=\"token keyword\">const</span> json <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> res<span class=\"token punctuation\">.</span><span class=\"token function\">json</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\n    <span class=\"token keyword\">return</span> <span class=\"token punctuation\">{</span> statusCode<span class=\"token punctuation\">,</span> stars<span class=\"token punctuation\">:</span> json<span class=\"token punctuation\">.</span>stargazers_count <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token function\">render</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>props<span class=\"token punctuation\">.</span>statusCode<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">return</span> <span class=\"token operator\">&lt;</span>Error statusCode<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>props<span class=\"token punctuation\">.</span>statusCode<span class=\"token punctuation\">}</span> <span class=\"token operator\">/</span><span class=\"token operator\">></span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n      <span class=\"token operator\">&lt;</span>div<span class=\"token operator\">></span>\n        Next stars<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>props<span class=\"token punctuation\">.</span>stars<span class=\"token punctuation\">}</span>\n      <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>div<span class=\"token operator\">></span>\n    <span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<h3><code class=\"language-text\">/pages/index.js</code></h3>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">import</span> <span class=\"token string\">\"../static/styles.scss\"</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token operator\">&lt;</span>div className<span class=\"token operator\">=</span><span class=\"token string\">\"example\"</span><span class=\"token operator\">></span>Hello World<span class=\"token operator\">!</span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>div<span class=\"token operator\">></span></code></pre></div>\n<h3><code class=\"language-text\">/static/styles.scss</code></h3>\n<div class=\"gatsby-highlight\" data-language=\"css\"><pre class=\"language-css\"><code class=\"language-css\">$<span class=\"token property\">font-size</span><span class=\"token punctuation\">:</span> 50px<span class=\"token selector\">;\n.example</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token property\">font-size</span><span class=\"token punctuation\">:</span> $font-size<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<h2>Why are the styles not being applied?</h2>\n<p>This was my <code class=\"language-text\">index.js</code> and the styles for the website were not being applied. I did not know why. </p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">import</span> Layout <span class=\"token keyword\">from</span> <span class=\"token string\">\"../components/layout\"</span>\n<span class=\"token keyword\">import</span> Card <span class=\"token keyword\">from</span> <span class=\"token string\">'grommet/components/Card'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">(</span>\n    <span class=\"token operator\">&lt;</span>Layout<span class=\"token operator\">></span>\n        <span class=\"token operator\">&lt;</span>Card thumbnail<span class=\"token operator\">=</span><span class=\"token string\">'http://grommet.io/img/carousel-1.png'</span>\n          label<span class=\"token operator\">=</span><span class=\"token string\">'Sample Label'</span>\n          heading<span class=\"token operator\">=</span><span class=\"token string\">'Sample Heading'</span>\n          description<span class=\"token operator\">=</span><span class=\"token string\">'Sample description providing more details.'</span>\n           <span class=\"token operator\">/</span><span class=\"token operator\">></span>\n    <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>Layout<span class=\"token operator\">></span>\n<span class=\"token punctuation\">)</span></code></pre></div>\n<p>After a tiring length of search for the answer on Google, I found the <a href=\"https://github.com/grommet/grommet/issues/640\">answer</a>: <code class=\"language-text\">&lt;Grommet.App&gt;</code>.</p>\n<p>I needed to wrap the components inside <code class=\"language-text\">&lt;Grommet.App&gt;</code>. It was that simple.</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">import</span> Layout <span class=\"token keyword\">from</span> <span class=\"token string\">\"../components/layout\"</span>\n<span class=\"token keyword\">import</span> Card <span class=\"token keyword\">from</span> <span class=\"token string\">'grommet/components/Card'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> Grommet <span class=\"token keyword\">from</span> <span class=\"token string\">'grommet'</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">(</span>\n    <span class=\"token operator\">&lt;</span>Grommet<span class=\"token punctuation\">.</span>App<span class=\"token operator\">></span>\n    <span class=\"token operator\">&lt;</span>Layout<span class=\"token operator\">></span>\n        <span class=\"token operator\">&lt;</span>Card thumbnail<span class=\"token operator\">=</span><span class=\"token string\">'http://grommet.io/img/carousel-1.png'</span>\n          label<span class=\"token operator\">=</span><span class=\"token string\">'Sample Label'</span>\n          heading<span class=\"token operator\">=</span><span class=\"token string\">'Sample Heading'</span>\n          description<span class=\"token operator\">=</span><span class=\"token string\">'Sample description providing more details.'</span>\n           <span class=\"token operator\">/</span><span class=\"token operator\">></span>\n    <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>Layout<span class=\"token operator\">></span>\n    <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>Grommet<span class=\"token punctuation\">.</span>App<span class=\"token operator\">></span>\n<span class=\"token punctuation\">)</span></code></pre></div>\n<p>And now the styling works. And also, you need to add the core element cdn to make styling work:</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token comment\">// _document.js</span>\n<span class=\"token keyword\">import</span> Document<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span> Head<span class=\"token punctuation\">,</span> Main<span class=\"token punctuation\">,</span> NextScript <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'next/document'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">CustomDocument</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">Document</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">render</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n      <span class=\"token operator\">&lt;</span>html<span class=\"token operator\">></span>\n        <span class=\"token operator\">&lt;</span>Head<span class=\"token operator\">></span>\n        <span class=\"token punctuation\">{</span><span class=\"token comment\">/* This is going to be your global head */</span><span class=\"token punctuation\">}</span>\n          <span class=\"token operator\">&lt;</span>link rel<span class=\"token operator\">=</span><span class=\"token string\">\"stylesheet\"</span> href<span class=\"token operator\">=</span><span class=\"token string\">\"https://cdnjs.cloudflare.com/ajax/libs/grommet/1.10.1/grommet.min.css\"</span> <span class=\"token operator\">/</span><span class=\"token operator\">></span>\n          <span class=\"token operator\">&lt;</span>script src <span class=\"token operator\">=</span> <span class=\"token string\">\"https://cdnjs.cloudflare.com/ajax/libs/grommet/1.10.1/grommet.min.js\"</span><span class=\"token operator\">></span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>script<span class=\"token operator\">></span>\n        <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>Head<span class=\"token operator\">></span>\n        <span class=\"token operator\">&lt;</span>body<span class=\"token operator\">></span>\n          <span class=\"token operator\">&lt;</span>Main <span class=\"token operator\">/</span><span class=\"token operator\">></span> <span class=\"token punctuation\">{</span><span class=\"token comment\">/* each routed page will go inside here */</span><span class=\"token punctuation\">}</span>\n          <span class=\"token operator\">&lt;</span>NextScript <span class=\"token operator\">/</span><span class=\"token operator\">></span> <span class=\"token punctuation\">{</span><span class=\"token comment\">/* You don't have to care about this. */</span><span class=\"token punctuation\">}</span>\n        <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>body<span class=\"token operator\">></span>\n      <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>html<span class=\"token operator\">></span>\n    <span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<h2>Troubleshooting</h2>\n<p>Now I had to convert the theme of the blog to <code class=\"language-text\">dxc</code>. To do that I had to <code class=\"language-text\">import &quot;grommet/grommet-dxc.min.css&quot;;</code> But this kept throwing me an error:</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\"> ERROR  Failed to compile with 1 errors                                                                                                                                                     10:12:43 AM\n\n error  in ./node_modules/grommet/grommet-dxc.min.css\n\nModule parse failed: Unexpected character &#39;@&#39; (5:3)\nYou may need an appropriate loader to handle this file type.\n|  *\n|  * github.com/inuitcss | inuitcss.com\n|  */@-webkit-keyframes fadein{from{opacity:0}to{opacity:1}}@keyframes fadein{from{opacity:0}to{opacity:1}}/*!\n|  * inuitcss, by @csswizardry\n|  *</code></pre></div>\n<p>Webpack does not support css loaders by default so you have to install it.</p>\n<p>And a few searches revealed to me that this is a webpack config problem.</p>\n<p>Ok so <a href=\"https://webpack.js.org/concepts/#loaders\">webpack.js.org says:</a></p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token comment\">//At a high level, loaders have two purposes in your webpack configuration:</span>\n\n<span class=\"token comment\">//The test property identifies which file or files should be transformed.</span>\n<span class=\"token comment\">//The use property indicates which loader should be used to do the transforming.</span>\n\n<span class=\"token keyword\">const</span> path <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'path'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> config <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n  output<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span>\n    filename<span class=\"token punctuation\">:</span> <span class=\"token string\">'my-first-webpack.bundle.js'</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  module<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span>\n    rules<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span>\n      <span class=\"token punctuation\">{</span> test<span class=\"token punctuation\">:</span> <span class=\"token regex\">/\\.txt$/</span><span class=\"token punctuation\">,</span> use<span class=\"token punctuation\">:</span> <span class=\"token string\">'raw-loader'</span> <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">]</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\nmodule<span class=\"token punctuation\">.</span>exports <span class=\"token operator\">=</span> config<span class=\"token punctuation\">;</span></code></pre></div>\n<p>So I went ahead to make few changes:</p>\n<p><code class=\"language-text\">/static/styles.scss</code></p>\n<div class=\"gatsby-highlight\" data-language=\"css\"><pre class=\"language-css\"><code class=\"language-css\"><span class=\"token atrule\"><span class=\"token rule\">@import</span> <span class=\"token string\">\"grommet/grommet-dxc.min.css\"</span><span class=\"token punctuation\">;</span></span></code></pre></div>\n<p><code class=\"language-text\">next.config.js</code></p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">const</span> withCss <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'@zeit/next-css'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nmodule<span class=\"token punctuation\">.</span>exports <span class=\"token operator\">=</span> <span class=\"token function\">withCss</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> <span class=\"token comment\">/* extra optional config */</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span></code></pre></div>\n<p>And now the website works.</p>\n<h3>Before</h3>\n<p><img src=\"https://i.imgur.com/KpUR0E7.jpg\" alt=\"Before\"></p>\n<h3>After</h3>\n<p><img src=\"https://i.imgur.com/u5OGkIM.jpg\" alt=\"After\"></p>","frontmatter":{"title":"Blog for Young (1): Starting off","date":"June 04, 2018"}}},"pageContext":{"slug":"/2018-06-04--Blog-for-Young-(2):-Starting-off/","previous":{"fields":{"slug":"/2018-06-01--Next.js-(1):-Basic-setup-and-understanding/"},"frontmatter":{"title":"Next.js (1): Basic setup and understanding"}},"next":{"fields":{"slug":"/2018-06-05--Creating-music-player-(1):-setting-up/"},"frontmatter":{"title":"Creating music player (1): setting up"}}}}