{"data":{"site":{"siteMetadata":{"title":"Joel's dev blog","author":"Joel Mun","siteUrl":"https://9oelm.github.io"}},"markdownRemark":{"id":"230ac766-551d-54a4-b7bc-5eae2f2b2181","excerpt":"Make the hot reloading work just following the simple steps at  here  made it work! Adding redux to the project Sources: redux homepage todo example naver d2…","html":"<h2>Make the hot reloading work</h2>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">npm install --save-dev react-app-rewired react-app-rewire-hot-loader react-hot-loader</code></pre></div>\n<p>just following the simple steps at <a href=\"https://daveceddia.com/hot-reloading-create-react-app/\">here</a> made it work!</p>\n<h2>Adding redux to the project</h2>\n<p>Sources:</p>\n<ul>\n<li><a href=\"https://redux.js.org/basics/example-todo-list\">redux homepage todo example</a></li>\n<li><a href=\"https://d2.naver.com/helloworld/1848131\">naver d2</a></li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">npm install --save react-redux redux</code></pre></div>\n<h3>1. Edit the entry point for the use of redux</h3>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">import</span> React <span class=\"token keyword\">from</span> <span class=\"token string\">'react'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> ReactDOM <span class=\"token keyword\">from</span> <span class=\"token string\">'react-dom'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> App <span class=\"token keyword\">from</span> <span class=\"token string\">'./App'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> registerServiceWorker <span class=\"token keyword\">from</span> <span class=\"token string\">'./registerServiceWorker'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token string\">\"./styles/customStyles.css\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> AppContainer <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'react-hot-loader'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> Provider <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'react-redux'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> createStore <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'redux'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> rootReducer <span class=\"token keyword\">from</span> <span class=\"token string\">'./reducer'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> store <span class=\"token operator\">=</span> <span class=\"token function\">createStore</span><span class=\"token punctuation\">(</span>rootReducer<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> <span class=\"token function-variable function\">render</span> <span class=\"token operator\">=</span> Component <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  ReactDOM<span class=\"token punctuation\">.</span><span class=\"token function\">render</span><span class=\"token punctuation\">(</span>\n    <span class=\"token comment\">// Wrap App inside AppContainer</span>\n    <span class=\"token operator\">&lt;</span>AppContainer<span class=\"token operator\">></span>\n    <span class=\"token operator\">&lt;</span>Provider store<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span>store<span class=\"token punctuation\">}</span><span class=\"token operator\">></span>\n      <span class=\"token operator\">&lt;</span>App <span class=\"token operator\">/</span><span class=\"token operator\">></span>\n    <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>Provider<span class=\"token operator\">></span>\n    <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>AppContainer<span class=\"token operator\">></span><span class=\"token punctuation\">,</span>\n    document<span class=\"token punctuation\">.</span><span class=\"token function\">getElementById</span><span class=\"token punctuation\">(</span><span class=\"token string\">'root'</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token function\">registerServiceWorker</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token function\">render</span><span class=\"token punctuation\">(</span>App<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// Webpack Hot Module Replacement API</span>\n<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>module<span class=\"token punctuation\">.</span>hot<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  module<span class=\"token punctuation\">.</span>hot<span class=\"token punctuation\">.</span><span class=\"token function\">accept</span><span class=\"token punctuation\">(</span><span class=\"token string\">'./App'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token function\">render</span><span class=\"token punctuation\">(</span>App<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p><code class=\"language-text\">AppContainer</code> is just for the hot reloading. <code class=\"language-text\">Provider</code> is to make it easy to set the context for all children elements. If you add Provider once at the top, children elements can access the store through the context.  </p>\n<h3>2. Project structure</h3>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">j031:~/workspace/7omp (add4-addRedux) $ tree -L 3 -I node_modules\n.\n├── README.md\n├── config-overrides.js\n├── package.json\n├── public\n│   ├── favicon.ico\n│   ├── index.html\n│   └── manifest.json\n└── src\n    ├── App.js\n    ├── __test__\n    │   ├── App.test.js\n    │   └── theme.test.js\n    ├── actions ---------------------------&gt; for redux actions\n    │   ├── constants.js\n    │   └── index.js\n    ├── components\n    │   ├── Layout.js\n    │   ├── LowerAppBar.js\n    │   ├── MainContainer.js\n    │   ├── Player.js\n    │   └── UpperAppBar.js\n    ├── index.js ---------------------------&gt; redux entry point\n    ├── logo.svg\n    ├── reducers ---------------------------&gt; for redux reducers\n    │   └── reducers.js\n    ├── registerServiceWorker.js\n    ├── store ---------------------------&gt; for redux store\n    │   └── index.js\n    └── styles\n        ├── customStyles.css\n        ├── customStyles.sass\n        └── muiTheme.js\n\n8 directories, 24 files</code></pre></div>\n<h3>3. Make actions</h3>\n<p><code class=\"language-text\">actions/index.js</code></p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token comment\">// Import constants (action types)</span>\n<span class=\"token keyword\">import</span> <span class=\"token constant\">C</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"./constants\"</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// Action creators</span>\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">const</span> <span class=\"token function-variable function\">toggleSearchButton</span> <span class=\"token operator\">=</span> searchOn <span class=\"token operator\">=></span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n  type<span class=\"token punctuation\">:</span> <span class=\"token constant\">C</span><span class=\"token punctuation\">.</span><span class=\"token constant\">TOGGLE_SEARCH_BUTTON</span><span class=\"token punctuation\">,</span>\n  searchOn <span class=\"token comment\">// Boolean</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span></code></pre></div>\n<p>Action creators just literally return actions. That’s it.\nBut they’ve gotta have their types.</p>\n<p>To make it easy for the type, I created a file called <code class=\"language-text\">constants</code>:\n<code class=\"language-text\">actions/constants.js</code></p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">const</span> <span class=\"token constant\">C</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token constant\">TOGGLE_SEARCH_BUTTON</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'TOGGLE_SEARCH_BUTTON'</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> <span class=\"token constant\">C</span></code></pre></div>\n<h3>4. Make reducers</h3>\n<p><code class=\"language-text\">reducers/reducers.js</code></p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> combineReducers <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'redux'</span>\n\n<span class=\"token comment\">/*\nReducers specify how the application's state changes in response to actions sent to the store. Remember that actions only describe what happened, but don't describe how the application's state changes.\n*/</span>\n\n<span class=\"token keyword\">import</span> <span class=\"token constant\">C</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'../actions/constants'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> initialState <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n    searchOn<span class=\"token punctuation\">:</span> <span class=\"token boolean\">false</span> <span class=\"token comment\">// search button is not clicked yet</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\">// This reducer is only for storing information on user interactions in the app</span>\n<span class=\"token comment\">// the state would be undefined for the first time, so fill it with initialState instead</span>\n<span class=\"token keyword\">function</span> <span class=\"token function\">jompAppView</span><span class=\"token punctuation\">(</span>state <span class=\"token operator\">=</span> initialState<span class=\"token punctuation\">,</span> action<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">switch</span><span class=\"token punctuation\">(</span>action<span class=\"token punctuation\">.</span>type<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n        <span class=\"token comment\">// return new objects instead of modifying them</span>\n        <span class=\"token keyword\">case</span> <span class=\"token constant\">C</span><span class=\"token punctuation\">.</span><span class=\"token constant\">TOGGLE_SEARCH_BUTTON</span><span class=\"token punctuation\">:</span>\n            <span class=\"token keyword\">return</span> Object<span class=\"token punctuation\">.</span><span class=\"token function\">assign</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> state<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span>\n                searchOn<span class=\"token punctuation\">:</span> <span class=\"token operator\">!</span>state<span class=\"token punctuation\">.</span>searchOn\n            <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">default</span><span class=\"token punctuation\">:</span> \n            <span class=\"token keyword\">return</span> state<span class=\"token punctuation\">;</span>\n        <span class=\"token comment\">/*\n        It's important to return the previous state for any unknown action.\n        */</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\">/* state shape\n{\n    searchOn: false\n}\n*/</span>\n\n<span class=\"token comment\">/*\n    Finally, combine reducers\n*/</span>\n<span class=\"token keyword\">const</span> jompApp <span class=\"token operator\">=</span> <span class=\"token function\">combineReducers</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n    jompAppView<span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> jompApp</code></pre></div>\n<p>This is the reducer. For now, there is only one reducer function, <code class=\"language-text\">jompAppView</code>. But in the future, there will be more reducer functions, and that is why you do <code class=\"language-text\">combineReducers</code> at the end. </p>\n<h3>5. Store</h3>\n<p><code class=\"language-text\">store/index.js</code> is empty for now. Additional configuration will require some content in this file. </p>\n<p><code class=\"language-text\">index.js</code></p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">import</span> React <span class=\"token keyword\">from</span> <span class=\"token string\">'react'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> ReactDOM <span class=\"token keyword\">from</span> <span class=\"token string\">'react-dom'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> App <span class=\"token keyword\">from</span> <span class=\"token string\">'./App'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> registerServiceWorker <span class=\"token keyword\">from</span> <span class=\"token string\">'./registerServiceWorker'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token string\">\"./styles/customStyles.css\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> AppContainer <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'react-hot-loader'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> Provider <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'react-redux'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> createStore <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'redux'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> reducers <span class=\"token keyword\">from</span> <span class=\"token string\">'./reducers/reducers'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> toggleSearchButton <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'./actions/index'</span>\n\n<span class=\"token keyword\">const</span> store <span class=\"token operator\">=</span> <span class=\"token function\">createStore</span><span class=\"token punctuation\">(</span>reducers<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> <span class=\"token function-variable function\">render</span> <span class=\"token operator\">=</span> Component <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  ReactDOM<span class=\"token punctuation\">.</span><span class=\"token function\">render</span><span class=\"token punctuation\">(</span>\n    <span class=\"token comment\">// Wrap App inside AppContainer</span>\n    <span class=\"token operator\">&lt;</span>AppContainer<span class=\"token operator\">></span>\n    <span class=\"token operator\">&lt;</span>Provider store<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span>store<span class=\"token punctuation\">}</span><span class=\"token operator\">></span>\n      <span class=\"token operator\">&lt;</span>App <span class=\"token operator\">/</span><span class=\"token operator\">></span>\n    <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>Provider<span class=\"token operator\">></span>\n    <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>AppContainer<span class=\"token operator\">></span><span class=\"token punctuation\">,</span>\n    document<span class=\"token punctuation\">.</span><span class=\"token function\">getElementById</span><span class=\"token punctuation\">(</span><span class=\"token string\">'root'</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>store<span class=\"token punctuation\">.</span><span class=\"token function\">getState</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">// Every time the state changes, log it</span>\n<span class=\"token comment\">// Note that subscribe() returns a function for unregistering the listener</span>\n<span class=\"token keyword\">const</span> unsubscribe <span class=\"token operator\">=</span> store<span class=\"token punctuation\">.</span><span class=\"token function\">subscribe</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span>\n  console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>store<span class=\"token punctuation\">.</span><span class=\"token function\">getState</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">)</span>\n\nstore<span class=\"token punctuation\">.</span><span class=\"token function\">dispatch</span><span class=\"token punctuation\">(</span><span class=\"token function\">toggleSearchButton</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\nstore<span class=\"token punctuation\">.</span><span class=\"token function\">dispatch</span><span class=\"token punctuation\">(</span><span class=\"token function\">toggleSearchButton</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\nstore<span class=\"token punctuation\">.</span><span class=\"token function\">dispatch</span><span class=\"token punctuation\">(</span><span class=\"token function\">toggleSearchButton</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\nstore<span class=\"token punctuation\">.</span><span class=\"token function\">dispatch</span><span class=\"token punctuation\">(</span><span class=\"token function\">toggleSearchButton</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token function\">registerServiceWorker</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token function\">render</span><span class=\"token punctuation\">(</span>App<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// Webpack Hot Module Replacement API</span>\n<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>module<span class=\"token punctuation\">.</span>hot<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  module<span class=\"token punctuation\">.</span>hot<span class=\"token punctuation\">.</span><span class=\"token function\">accept</span><span class=\"token punctuation\">(</span><span class=\"token string\">'./App'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token function\">render</span><span class=\"token punctuation\">(</span>App<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<ol>\n<li>\n<p>You create the store with reducers first</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">const</span> store <span class=\"token operator\">=</span> <span class=\"token function\">createStore</span><span class=\"token punctuation\">(</span>reducers<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n</li>\n<li>\n<p>Pass that store as a <code class=\"language-text\">store</code> <code class=\"language-text\">prop</code> into that app, wrapping it with <code class=\"language-text\">Provider</code> Element.</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token operator\">&lt;</span>Provider store<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span>store<span class=\"token punctuation\">}</span><span class=\"token operator\">></span>\n      <span class=\"token operator\">&lt;</span>App <span class=\"token operator\">/</span><span class=\"token operator\">></span>\n<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>Provider<span class=\"token operator\">></span></code></pre></div>\n</li>\n<li>\n<p>To see if the store is working well, log the state changes:</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\">console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>store<span class=\"token punctuation\">.</span><span class=\"token function\">getState</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">// Every time the state changes, log it</span>\n<span class=\"token comment\">// Note that subscribe() returns a function for unregistering the listener</span>\n<span class=\"token keyword\">const</span> unsubscribe <span class=\"token operator\">=</span> store<span class=\"token punctuation\">.</span><span class=\"token function\">subscribe</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span>\n  console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>store<span class=\"token punctuation\">.</span><span class=\"token function\">getState</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">)</span>\n\nstore<span class=\"token punctuation\">.</span><span class=\"token function\">dispatch</span><span class=\"token punctuation\">(</span><span class=\"token function\">toggleSearchButton</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\nstore<span class=\"token punctuation\">.</span><span class=\"token function\">dispatch</span><span class=\"token punctuation\">(</span><span class=\"token function\">toggleSearchButton</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\nstore<span class=\"token punctuation\">.</span><span class=\"token function\">dispatch</span><span class=\"token punctuation\">(</span><span class=\"token function\">toggleSearchButton</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\nstore<span class=\"token punctuation\">.</span><span class=\"token function\">dispatch</span><span class=\"token punctuation\">(</span><span class=\"token function\">toggleSearchButton</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></code></pre></div>\n</li>\n<li>\n<p>Look into the app\nIn the javascript console on the browser, you’ve gotta see this:</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\">index<span class=\"token punctuation\">.</span>js<span class=\"token punctuation\">:</span><span class=\"token number\">29</span> <span class=\"token punctuation\">{</span>jompAppView<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span>…<span class=\"token punctuation\">}</span><span class=\"token punctuation\">}</span>jompAppView<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span>searchOn<span class=\"token punctuation\">:</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">}</span>__proto__<span class=\"token punctuation\">:</span> Object\nindex<span class=\"token punctuation\">.</span>js<span class=\"token punctuation\">:</span><span class=\"token number\">29</span> <span class=\"token punctuation\">{</span>jompAppView<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span>…<span class=\"token punctuation\">}</span><span class=\"token punctuation\">}</span>jompAppView<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span>searchOn<span class=\"token punctuation\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">}</span>__proto__<span class=\"token punctuation\">:</span> Object\nindex<span class=\"token punctuation\">.</span>js<span class=\"token punctuation\">:</span><span class=\"token number\">29</span> <span class=\"token punctuation\">{</span>jompAppView<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span>…<span class=\"token punctuation\">}</span><span class=\"token punctuation\">}</span>jompAppView<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span>searchOn<span class=\"token punctuation\">:</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">}</span>__proto__<span class=\"token punctuation\">:</span> Object\nindex<span class=\"token punctuation\">.</span>js<span class=\"token punctuation\">:</span><span class=\"token number\">29</span> <span class=\"token punctuation\">{</span>jompAppView<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span>…<span class=\"token punctuation\">}</span><span class=\"token punctuation\">}</span>jompAppView<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span>searchOn<span class=\"token punctuation\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">}</span>__proto__<span class=\"token punctuation\">:</span> Object\nindex<span class=\"token punctuation\">.</span>js<span class=\"token punctuation\">:</span><span class=\"token number\">29</span> <span class=\"token punctuation\">{</span>jompAppView<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span>…<span class=\"token punctuation\">}</span><span class=\"token punctuation\">}</span>jompAppView<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span>searchOn<span class=\"token punctuation\">:</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">}</span>__proto__<span class=\"token punctuation\">:</span> Object</code></pre></div>\n</li>\n</ol>\n<p>You can see that searchOn is being switched from false and true, and vice versa. This is because of <code class=\"language-text\">store.dispatch</code> that triggerred the actions. </p>\n<h2>What the heck is <code class=\"language-text\">withstyles</code></h2>\n<p>Mui supports something called <code class=\"language-text\">withstyles</code>.</p>\n<p>See:</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> withStyles <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'@material-ui/core/styles'</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>and do something like</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">const</span> <span class=\"token function-variable function\">styles</span> <span class=\"token operator\">=</span> theme <span class=\"token operator\">=></span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n  card<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span>\n    display<span class=\"token punctuation\">:</span> <span class=\"token string\">'flex'</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  details<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span>\n    display<span class=\"token punctuation\">:</span> <span class=\"token string\">'flex'</span><span class=\"token punctuation\">,</span>\n    flexDirection<span class=\"token punctuation\">:</span> <span class=\"token string\">'column'</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  content<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span>\n    flex<span class=\"token punctuation\">:</span> <span class=\"token string\">'1 0 auto'</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  cover<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span>\n    width<span class=\"token punctuation\">:</span> <span class=\"token number\">151</span><span class=\"token punctuation\">,</span>\n    height<span class=\"token punctuation\">:</span> <span class=\"token number\">151</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  controls<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span>\n    display<span class=\"token punctuation\">:</span> <span class=\"token string\">'flex'</span><span class=\"token punctuation\">,</span>\n    alignItems<span class=\"token punctuation\">:</span> <span class=\"token string\">'center'</span><span class=\"token punctuation\">,</span>\n    paddingLeft<span class=\"token punctuation\">:</span> theme<span class=\"token punctuation\">.</span>spacing<span class=\"token punctuation\">.</span>unit<span class=\"token punctuation\">,</span>\n    paddingBottom<span class=\"token punctuation\">:</span> theme<span class=\"token punctuation\">.</span>spacing<span class=\"token punctuation\">.</span>unit<span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  playIcon<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span>\n    height<span class=\"token punctuation\">:</span> <span class=\"token number\">38</span><span class=\"token punctuation\">,</span>\n    width<span class=\"token punctuation\">:</span> <span class=\"token number\">38</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>But I did not quite get the hang of how it works and how it actually gets applied to React. So I finally found the <a href=\"https://material-ui.com/customization/css-in-js/\">API</a>.</p>","frontmatter":{"title":"Creating music player (2): Specifics","date":"June 13, 2018"}}},"pageContext":{"slug":"/2018-06-13--Creating-music-player-(2):-Specifics/","previous":{"fields":{"slug":"/2018-06-09--Blog-for-Young-(4):-Lifting-it-up-with-tests/"},"frontmatter":{"title":"Blog for Young (3): Lifting it up with tests"}},"next":{"fields":{"slug":"/2018-06-16--Creating-music-player-(3):-Digging-redux-+-react/"},"frontmatter":{"title":"Creating music player (3): Digging redux + react"}}}}