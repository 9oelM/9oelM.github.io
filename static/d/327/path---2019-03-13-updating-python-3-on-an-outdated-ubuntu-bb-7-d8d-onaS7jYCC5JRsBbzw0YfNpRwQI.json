{"data":{"site":{"siteMetadata":{"title":"Joel's dev blog","author":"Joel Mun","siteUrl":"https://9oelm.github.io"}},"markdownRemark":{"id":"2ec57b9b-f273-5cb3-a8b5-67936c73b6fd","excerpt":"The problem Sometimes you cannot easily change the version of Ubuntu  and  python if you are running them on cloud. I am using  cloud9 , as you might have…","html":"<h1>The problem</h1>\n<p>Sometimes you cannot easily change the version of Ubuntu <em>and</em> python if you are running them on cloud. I am using <a href=\"c9.io\">cloud9</a>, as you might have expected, because I’m still in the Navy, without any personal devices. I cannot go home to open up my laptop to do anything better.</p>\n<p>The version of Ubuntu and <code class=\"language-text\">python</code> were both too not satisfiable. I had to update the version of <code class=\"language-text\">python</code> on Ubuntu 14.04.5:</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">$ lsb_release -a\nNo LSB modules are available.\nDistributor ID: Ubuntu\nDescription:    Ubuntu 14.04.5 LTS\nRelease:        14.04\nCodename:       trusty\n\n$ python3 --version\nPython 3.4.3</code></pre></div>\n<p>The python version was not enough for me to do some works on Jupyter notebook. I needed <code class=\"language-text\">python^3.7</code>. </p>\n<p>and below command did not work at all for me:</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">$ sudo apt-get update\n\n$ sudo apt-get upgrade\n\n$ sudo apt-get install python3.7\nReading package lists... Done\nBuilding dependency tree       \nReading state information... Done\nE: Unable to locate package python3.7\nE: Couldn&#39;t find any package by regex &#39;python3.7&#39;</code></pre></div>\n<p>same for <code class=\"language-text\">python3.6</code>.</p>\n<p>So <a href=\"https://docs.python-guide.org/starting/install3/linux/\">I searched up</a> and I think I found a solution.</p>\n<h1>Solution</h1>\n<h2>use the python distribution from deadsnakes’ PPA</h2>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">$ sudo apt-get install software-properties-common\n$ sudo add-apt-repository ppa:deadsnakes/ppa\n$ sudo apt-get update\n$ sudo apt-get install python3.7</code></pre></div>\n<p>These lines of commands worked for me!</p>\n<h2>PPA</h2>\n<p>But what’s PPA in linux? <a href=\"https://itsfoss.com/ppa-guide/\">Again I searched</a>.</p>\n<blockquote>\n<p>PPA stands for Personal Package Archive.</p>\n</blockquote>\n<p>Ubuntu controls software and its version too. But a new release of software does not of course get immediately reflected by Ubuntu (for stability, safety, etc). But if you really want to get it, you then get to use <strong>PPA</strong>!</p>\n<p>Therefore, PPA’s not official, it’s personal to the developer. </p>\n<blockquote>\n<p>Ubuntu provides <a href=\"https://launchpad.net/ubuntu\">a platform called Launchpad</a> that enables software developers to create their own repositories.</p>\n</blockquote>\n<p>Yeah. So even <em>you</em> can add a repo to Launchpad.</p>\n<p>So this is what you actually did:</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">$ sudo apt-get install software-properties-common # ?\n$ sudo add-apt-repository ppa:deadsnakes/ppa # adds the PPA repository to the list.\n$ sudo apt-get update\n$ sudo apt-get install python3.7 # installs the package</code></pre></div>\n<h2><a href=\"https://askubuntu.com/questions/1000118/what-is-software-properties-common\"><code class=\"language-text\">software-properties-common</code></a></h2>\n<p>Then what’s <code class=\"language-text\">software-properties-common</code>?</p>\n<blockquote>\n<p>This software provides an abstraction of the used apt repositories. It allows you to easily manage your distribution and independent software vendor software sources.</p>\n</blockquote>\n<blockquote>\n<p>Without it, you would need to add and remove repositories (such as <strong>PPAs</strong>) manually by editing /etc/apt/sources.list and/or any subsidiary files in /etc/apt/sources.list.d</p>\n</blockquote>\n<p>Yes. Yeap. In short, it provides an easy and useful mechanism for you to add/remove PPAs. So you need them.</p>\n<h1>Switching <code class=\"language-text\">python</code> version</h1>\n<p>But if I enter <code class=\"language-text\">python3 --version</code>, it would show me:</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">Python 3.4.3</code></pre></div>\n<p>So how do I get it pointed to <code class=\"language-text\">python3.7</code> I have just newly installed?</p>\n<h1>Get <code class=\"language-text\">python3.7</code> kernel on Jupyter notebook</h1>\n<ul>\n<li>ref: <a href=\"https://ipython.readthedocs.io/en/latest/install/kernel_install.html\">IPython docs</a></li>\n</ul>\n<blockquote>\n<p>The Jupyter team maintains the IPython kernel since the Jupyter notebook server depends on the IPython kernel functionality.</p>\n</blockquote>\n<p>So in fact I didn’t actually need to upgrade python version on Ubuntu. But anyways, that was a good piece of knowledge.</p>\n<p>Then how do I get it on my Jupyter.</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">python3 -m pip install ipykernel\npython3 -m ipykernel install --user</code></pre></div>\n<p>Ahh. Another error came up!!!!</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">$ sudo python3.7 -m pip install ipykernel                                                                                         \nTraceback (most recent call last):\n  File &quot;/usr/lib/python3.7/runpy.py&quot;, line 183, in _run_module_as_main\n    mod_name, mod_spec, code = _get_module_details(mod_name, _Error)\n  File &quot;/usr/lib/python3.7/runpy.py&quot;, line 142, in _get_module_details\n    return _get_module_details(pkg_main_name, error)\n  File &quot;/usr/lib/python3.7/runpy.py&quot;, line 109, in _get_module_details\n    __import__(pkg_name)\n  File &quot;/usr/lib/python3/dist-packages/pip/__init__.py&quot;, line 59, in &lt;module&gt;\n    from pip.log import logger\n  File &quot;/usr/lib/python3/dist-packages/pip/log.py&quot;, line 9, in &lt;module&gt;\n    import colorama, pkg_resources\n  File &quot;&lt;frozen importlib._bootstrap&gt;&quot;, line 983, in _find_and_load\n  File &quot;&lt;frozen importlib._bootstrap&gt;&quot;, line 967, in _find_and_load_unlocked\n  File &quot;&lt;frozen importlib._bootstrap&gt;&quot;, line 668, in _load_unlocked\n  File &quot;&lt;frozen importlib._bootstrap&gt;&quot;, line 638, in _load_backward_compatible\n  File &quot;/usr/share/python-wheels/setuptools-3.3-py2.py3-none-any.whl/pkg_resources.py&quot;, line 1479, in &lt;module&gt;\n    register_loader_type(importlib_bootstrap.SourceFileLoader, DefaultProvider)\nAttributeError: module &#39;importlib._bootstrap&#39; has no attribute &#39;SourceFileLoader&#39;</code></pre></div>\n<p>Now I’m fully exhausted. Returning next time to solve this problem. At least I got <code class=\"language-text\">python3.7</code> working on Ubuntu. I wish if I could use my laptop to just create an environment with <code class=\"language-text\">conda</code> or <code class=\"language-text\">virtualenv</code> to setup a project with a dedicated python version… or <code class=\"language-text\">docker</code> or whatever. </p>","frontmatter":{"title":"Updating python 3 on an outdated Ubuntu","date":"March 13, 2019"}}},"pageContext":{"slug":"/2019-03-13--Updating-python3-on-an-outdated-ubuntu/","previous":{"fields":{"slug":"/2019-03-13--100BooksProject-(2):Crossroads-(갈림길)/"},"frontmatter":{"title":"100 Books Project (2): Crossroads (갈림길)"}},"next":{"fields":{"slug":"/2019-03-17--deploying-a-serverless-crawler-with-python-+-lambda+dynamoDB/"},"frontmatter":{"title":"Deploying a serverless crawler with python + lambda"}}}}