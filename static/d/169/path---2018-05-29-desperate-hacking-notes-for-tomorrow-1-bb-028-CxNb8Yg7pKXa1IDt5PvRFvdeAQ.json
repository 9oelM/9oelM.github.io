{"data":{"site":{"siteMetadata":{"title":"Joel's dev blog","author":"Joel Mun"}},"markdownRemark":{"id":"8c253a15-083a-5589-9fc9-a633e9deb720","excerpt":"detecting security incidents event logs by SANS Regular Expressions “. APPCRASH. ” Application 1001\n“. he protected system file. ” Application 64004\n“. EMET_DLL…","html":"<p><a href=\"https://www.sans.org/reading-room/whitepapers/logging/detecting-security-incidents-windows-workstation-event-logs-34262\">detecting security incidents event logs by SANS</a></p>\n<h2>Regular Expressions</h2>\n<p>“.<em>APPCRASH.</em>” Application 1001\n“.<em>he protected system file.</em>” Application 64004\n“.<em>EMET_DLL Module logged the following event:.</em>” Application 2\n.<em>your virus/spyware.</em> Application Varies\n“.<em>A new process has been created..</em>” Security 4688\n“.<em>A service was installed in the system..</em>” Security 4697\n“.<em>A scheduled task was created..</em>” Security 4698\n“.<em>Logon Type:[\\W]</em>(3|10).<em>” Security 4624, 4625\n“.</em>\\Software\\Microsoft\\Windows\\CurrentVersion\\Run.<em>” Security 4657\n“.</em>service terminated unexpectedly..<em>” System 7034\n“.</em>service was successfully sent a.<em>” System 7035\n“.</em>service entered the.<em>” System 7036\n“.</em>service was changed from.*” System 7040</p>\n<p>• Create and install a new service. (EventID 601|4697 )\n• Create a new scheduled task. (EventID 602|4698 )\n• Modify the registry keys so the service is started at boot. (EventID 567|4657 ) </p>\n<p>• The <protection mechanism service > terminated unexpectedly.* (EventID 7034)\n• The <protection mechanism service > was successfully sent a .* (EventID 7035)\n• The <protection mechanism service > entered the stopped state.* (EventID 7036)\n• The <protection mechanism service >service was change from.* (EventID 7040)</p>\n<h2>Keys to Check</h2>\n<p>• HKLM\\Software\\Microsoft\\Windows\\CurrentVersion\\Run\n• HKLM\\Software\\Microsoft\\Windows\\CurrentVersion\\Runonce\n• HKLM\\Software\\Microsoft\\Windows\\CurrentVersion\\RunonceEx\n• HKCU\\Software\\Microsoft\\Windows\\CurrentVersion\\Run\n• HKCU\\Software\\Microsoft\\Windows\\CurrentVersion\\Runonce\n• HKCU\\Software\\Microsoft\\Windows\\CurrentVersion\\RunonceEx</p>\n<h2>Domain controller</h2>\n<p><a href=\"https://docs.microsoft.com/en-us/windows-server/identity/ad-ds/plan/security-best-practices/monitoring-active-directory-for-signs-of-compromise\">Monitoring Active Directory for signs of compromise</a></p>\n<p>Check current audit settings (off, on, …)</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">auditpol /get /category:\\*</code></pre></div>\n<h2>Maltego</h2>\n<p>Try to use maltego on kali?</p>\n<h2>Nmap</h2>\n<ul>\n<li><a href=\"https://nmap.org/book/vscan.html\">nmap website</a></li>\n<li><a href=\"https://www.packtpub.com/mapt/book/networking_and_servers/9781784392918/2/ch02lvl1sec18/scanning-and-identifying-services-with-nmap\">nmap kind instruction</a></li>\n<li><a href=\"https://medium.com/@avirj/nmap-tcp-syn-scan-50106f818bf1\">nmap tcp SYN connection</a></li>\n<li><a href=\"https://nmap.org/book/man-port-scanning-techniques.html\">nmap tcp port scanning techniques</a></li>\n</ul>\n<p>Maybe use <code class=\"language-text\">nmap</code> again?</p>\n<p>Scan to detect service and version on all ports</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">nmap -sV --allports [ip]</code></pre></div>\n<p>Version detection</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">nmap -sV -T4 -F insecure.org\n\nStarting Nmap ( http://nmap.org )\nNmap scan report for insecure.org (74.207.254.18)\nHost is up (0.016s latency).\nrDNS record for 74.207.254.18: web.insecure.org\nNot shown: 95 filtered ports\nPORT    STATE  SERVICE  VERSION\n22/tcp  open   ssh      OpenSSH 4.3 (protocol 2.0)\n25/tcp  open   smtp     Postfix smtpd\n80/tcp  open   http     Apache httpd 2.2.3 ((CentOS))\n113/tcp closed auth\n443/tcp open   ssl/http Apache httpd 2.2.3 ((CentOS))\nService Info: Host:  web.insecure.org\n\nNmap done: 1 IP address (1 host up) scanned in 14.82 seconds</code></pre></div>\n<p>tcp SYN scan</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">nmap -sS -p[port1, port2, port3..] ipaddress</code></pre></div>\n<p>tcp connect scan</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">nmap -sT -p[port1, port2, port3..] ipaddress</code></pre></div>\n<p>udp scan</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">nmap -sU ipaddress</code></pre></div>\n<p>Complex version detection</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\"># nmap -A -T4 localhost \n\nStarting Nmap ( http://nmap.org )\nNmap scan report for felix (127.0.0.1)\n(The 1640 ports scanned but not shown below are in state: closed)\nPORT     STATE SERVICE    VERSION\n21/tcp   open  ftp        WU-FTPD wu-2.6.1-20\n22/tcp   open  ssh        OpenSSH 3.1p1 (protocol 1.99)\n53/tcp   open  domain     ISC BIND 9.2.1\n79/tcp   open  finger     Linux fingerd\n111/tcp  open  rpcbind    2 (rpc #100000)\n443/tcp  open  ssl/http   Apache httpd 2.0.39 ((Unix) mod_perl/1.99_04-dev)\n515/tcp  open  printer\n631/tcp  open  ipp        CUPS 1.1\n953/tcp  open  rndc?\n5000/tcp open  ssl/ftp    WU-FTPD wu-2.6.1-20\n5001/tcp open  ssl/ssh    OpenSSH 3.1p1 (protocol 1.99)\n5002/tcp open  ssl/domain ISC BIND 9.2.1\n5003/tcp open  ssl/finger Linux fingerd\n6000/tcp open  X11        (access denied)\n8000/tcp open  http-proxy Junkbuster webproxy\n8080/tcp open  http       Apache httpd 2.0.39 ((Unix) mod_perl/1.99_04-dev)\n8081/tcp open  http       Apache httpd 2.0.39 ((Unix) mod_perl/1.99_04-dev)\nDevice type: general purpose\nRunning: Linux 2.4.X|2.5.X\nOS details: Linux Kernel 2.4.0 - 2.5.20\n\nNmap finished: 1 IP address (1 host up) scanned in 42.494 seconds</code></pre></div>\n<p>save to a file </p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">nmap -oN outputfile.txt 192.168.1.1 (Save default output to file)</code></pre></div>\n<h2>netstat</h2>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">netstat –antp\n\n-a all\n-n show ip instead of host names\n-t show only tcp connections\n-p show process id/name</code></pre></div>\n<h2>General guide to finding rootkit, malware and backdoor</h2>\n<ul>\n<li><a href=\"https://askubuntu.com/questions/325929/malware-and-backdoor-detection-shell-script\">askubuntu</a></li>\n<li><a href=\"https://security.stackexchange.com/questions/126399/finding-a-backdoor-on-a-server\">stackexchange</a></li>\n</ul>\n<h2>Don’t forget the basics: just simple network commands</h2>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">route print\narp -a\nnslookup\nipconfig /displaydns</code></pre></div>\n<h2>iptables</h2>\n<ul>\n<li><a href=\"https://www.digitalocean.com/community/tutorials/iptables-essentials-common-firewall-rules-and-commands\">iptables guide</a></li>\n<li><a href=\"https://www.howtogeek.com/177621/the-beginners-guide-to-iptables-the-linux-firewall/\">howtogeekguide</a></li>\n</ul>\n<h3>Understanding the concept</h3>\n<p>There are 3 types of chains (directly copied from howtogeek):</p>\n<ul>\n<li><strong>Input</strong> – This chain is used to control the behavior for incoming connections. For example, if a user attempts to SSH into your PC/server, iptables will attempt to match the IP address and port to a rule in the input chain.</li>\n<li><strong>Forward</strong> – This chain is used for incoming connections that aren’t actually being delivered locally. <strong>Think of a router</strong> – data is always being sent to it but rarely actually destined for the router itself; the data is just forwarded to its target. Unless you’re doing some kind of routing, NATing, or something else on your system that requires forwarding, you won’t even use this chain.</li>\n<li><strong>Output</strong> - This chain is used for outgoing connections. For example, if you try to ping howtogeek.com, iptables will check its output chain to see what the rules are regarding ping and howtogeek.com before making a decision to allow or deny the connection attempt.</li>\n</ul>\n<h4>Check if your computer is forwarding something</h4>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">iptables -L -v</code></pre></div>\n<p><img src=\"https://www.howtogeek.com/wp-content/uploads/2013/12/x2-packets-processed.jpg.pagespeed.gp+jp+jw+pj+ws+js+rj+rp+rw+ri+cp+md.ic.lkpdv2BXzd.jpg\" alt=\"result\"></p>\n<p>If <code class=\"language-text\">Chain forward</code> shows nothing, you are good to go to close <code class=\"language-text\">forward</code> chain down. </p>\n<h4>Syntax to block an IP address</h4>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">iptables -A INPUT -s IP-ADDRESS -j DROP</code></pre></div>\n<h4>Syntax to block by port</h4>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">iptables -A INPUT -j DROP -p tcp --destination-port [port number] -i [if any interface related]</code></pre></div>\n<h3>What to do (priority from top to bottom)</h3>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">It is advisable to use iptables in Linux to enforce firewall policies. \nSince the range is a private network, it does need to have firewall policies that would block all connections in and out from unrecognized hosts. Moreover, HBSS and McAfee (or any other antivirus) not installed and network IDS down. This is a perfect reason to set up iptables policy locally on linux computers (rha and rhb). Commenting is done after &quot;#&quot; for convenience. \n\nThis is how:\n\n# Accept INPUT packets from and OUTPUT packets to devices inside the subnet only\niptables -A INPUT -s 10.98.10.0/24 -j ACCEPT\niptables -A OUTPUT -s 10.98.10.0/24 -j ACCEPT\n\n# Only accept the necessary ports that are being used for the server\n# For example, to allow http by any chance:\niptables -A OUTPUT -j ACCEPT -p tcp --destination-port 80\n\n... there would be other specific rules on the allowed ports, in accordance with the services being run on the computer. For now, we just get the idea of allowing ports on specific services. ...\n\n# Drop all packets on all ports processed by OUTPUT. This would protect the machine from being compromised to keep persistence.\n\niptables -A OUTPUT -p udp --match multiport --dports 0:65535 -j DROP\niptables -A OUTPUT -p tcp --match multiport --dports 0:65535 -j DROP\n\n# Drop all packets processed by INPUT, FORWARD, OUTPUT by default.\n# This would include, for example, blocking an icmp packet from an unknown host from any hosts outside of the subnet.\niptables -P INPUT DROP\niptables -P FORWARD DROP\niptables -P OUTPUT DROP\n\n# After that, save configurations\nsudo service iptables save</code></pre></div>\n<h2>C$, print$, Admin$, IPC$</h2>\n<h2>Using metaexploit to audit</h2>\n<h3>Search</h3>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">msf &gt; help search\nUsage: search [keywords]\n\nKeywords:\n  app       :  Modules that are client or server attacks\n  author    :  Modules written by this author\n  bid       :  Modules with a matching Bugtraq ID\n  cve       :  Modules with a matching CVE ID\n  edb       :  Modules with a matching Exploit-DB ID\n  name      :  Modules with a matching descriptive name\n  platform  :  Modules affecting this platform\n  ref       :  Modules with a matching ref\n  type      :  Modules of a specific type (exploit, auxiliary, or post)\n\nExamples:\n\nsearch cve:2009 type:exploit app:client\n\nsearch name:[name of exploit, e.g smb/rpc/http] type:[exploit/payload/auxillary] platform:[windows/linux etc.]\n\nand I believe search port: is also available?</code></pre></div>\n<h2>Syslog format</h2>\n<h2>Others</h2>\n<p>also look at</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">/var/log/secure</code></pre></div>\n<p>and check user permissions using</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">&quot;AccessChk&quot; and &quot;AccessEnum&quot;</code></pre></div>\n<p>helpful links for windows domain controller security</p>\n<ul>\n<li><a href=\"https://docs.microsoft.com/en-us/windows-server/identity/ad-ds/plan/security-best-practices/monitoring-active-directory-for-signs-of-compromise\">Monitoring Active Directory for Signs of Compromise</a></li>\n</ul>","frontmatter":{"title":"Desperate hacking notes for tomorrow","date":"May 29, 2018"}}},"pageContext":{"slug":"/2018-05-29--Desperate-hacking-notes-for-tomorrow/","previous":{"fields":{"slug":"/2018-05-19--Using-foresic-tools-(1):-process-explorer,-process-monitor,-and-autoruns/"},"frontmatter":{"title":"Using foresic tools (1): process explorer, process monitor, and autoruns"}},"next":{"fields":{"slug":"/2018-06-01--Next.js-(1):-Basic-setup-and-understanding/"},"frontmatter":{"title":"Next.js (1): Basic setup and understanding"}}}}