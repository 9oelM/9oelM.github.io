{"version":3,"sources":["webpack:///./src/components/Navigation.js","webpack:///./src/components/LandingPageBioDetails.js","webpack:///./src/components/shared.js","webpack:///./src/pages/index.js"],"names":["Navigation","map","tabName","tabPath","key","style","display","cursor","href","LandingPageBioDetails","SF","darkText","ContentsListing","data","location","title","siteTitle","site","siteMetadata","contents","allMarkdownRemark","edges","isJournalsPage","pathname","keywords","width","index","node","frontmatter","fields","slug","marginBottom","rhythm","boxShadow","to","date","dangerouslySetInnerHTML","__html","description","excerpt"],"mappings":"6FAAA,uEAGaA,EAAa,WACtB,MAAO,CAAC,CAAC,QAAD,KAAgB,CAAC,WAAD,aAA2B,CAAC,OAAD,UAAmBC,KAAI,YAAyB,IAAvBC,EAAsB,KAAbC,EAAa,KAC9F,OAAO,kBAAC,OAAD,CACPC,IAAKF,EACLG,MAAO,CACLC,QAAS,QACTC,OAAO,WAMTC,KAAML,GACND,Q,4LCNOO,EAPe,WAC5B,OAAO,6BACPJ,MAAOK,IAAGC,Y,YCICC,EAAkB,SAAC,GAA+B,IAA7BC,EAA4B,EAA5BA,KAAMC,EAAsB,EAAtBA,SAAUC,EAAY,EAAZA,MACxCC,EAAYD,GAAgBF,EAAKI,KAAKC,aAAaH,MACnDI,EAAWN,EAAKO,kBAAkBC,MAElCC,EAAiB,cAAAR,EAASS,UAA4B,eAAAT,EAASS,SAErE,OACE,kBAAC,IAAD,CAAQT,SAAUA,EAAUC,MAAOC,GACjC,kBAAC,IAAD,CACED,MAAM,kBACNS,SAAU,CAAC,OAAD,qCAEZ,kBAAC,IAAD,MACA,kBAAC,EAAD,MACA,6BACEnB,MAAO,CACLoB,MAAM,SAIR,kBAACzB,EAAA,EAAD,OAEDmB,EAASlB,KAAI,WAAWyB,GAAW,IAAnBC,EAAkB,EAAlBA,KACTZ,EAAQY,EAAKC,YAAYb,OAASY,EAAKE,OAAOC,KACpD,OACE,yBAAK1B,IAAKsB,GACR,wBACErB,MAAO,CACL0B,aAAcC,YAAO,EAAI,KAG3B,kBAAC,OAAD,CAAM3B,MAAO,CAAE4B,UAAU,QAAWC,GAAIZ,EAAc,YAAeK,EAAKE,OAAOC,KAASH,EAAKE,OAAOC,MACnGf,IAGL,+BAAQY,EAAKC,YAAYO,MACzB,uBACEC,wBAAyB,CACvBC,OAAQV,EAAKC,YAAYU,aAAeX,EAAKY,kB,kCC/C/D,2CAMe3B,YAAf","file":"component---src-pages-index-js-d49c3290f166b87829d1.js","sourcesContent":["import React from 'react'\nimport { Link } from 'gatsby'\n\nexport const Navigation = () => {\n    return [[`Posts`, `/`], [`Journals`, `/journals`], [`Tags`, `/tags`]].map(([tabName, tabPath]) => {\n        return <Link\n        key={tabName}\n        style={{\n          display: 'block',\n          cursor: `pointer`\n        }}\n        // style={{ \n        //   ...SF.button,\n        //   padding: `${rhythm(0.3)} ${rhythm(0.8)}`,\n        // }}\n        href={tabPath}\n      >{tabName}</Link>\n      })\n}","import React from 'react';\nimport { SF } from '../styles/theme';\n\nconst LandingPageBioDetails = () => {\n  return <section\n  style={SF.darkText}\n  >\n  </section>  \n}\n\nexport default LandingPageBioDetails\n","import React from 'react'\nimport { Link } from 'gatsby' \nimport Bio from \"./bio\"\nimport Layout from \"./layout\"\nimport { Navigation } from \"./Navigation\"\nimport SEO from \"./seo\"\nimport LandingPageBioDetails from \"./LandingPageBioDetails\";\nimport { rhythm } from \"../utils/typography\"\n\nexport const ContentsListing = ({ data, location, title }) => {\n    const siteTitle = title ? title : data.site.siteMetadata.title\n    const contents = data.allMarkdownRemark.edges\n\n    const isJournalsPage = location.pathname === `/journals` || location.pathname === `/journals/`\n\n    return (\n      <Layout location={location} title={siteTitle}>\n        <SEO\n          title=\"Joel's dev blog\"\n          keywords={[`blog`, `javascript`, `typescript`, `react`]}\n        />\n        <Bio />\n        <LandingPageBioDetails />\n        <section\n          style={{\n            width: `100%`,\n          }}\n        >\n          {/* <h3 style={{ margin: 0, padding: 0, marginTop: rhythm(1) }}>See</h3> */}\n          <Navigation />\n        </section>\n        {contents.map(({ node }, index) => {\n          const title = node.frontmatter.title || node.fields.slug\n          return (\n            <div key={index}>\n              <h3\n                style={{\n                  marginBottom: rhythm(1 / 4),\n                }}\n              >\n                <Link style={{ boxShadow: `none` }} to={isJournalsPage ? `/journals${node.fields.slug}` : node.fields.slug}>\n                  {title}\n                </Link>\n              </h3>\n              <small>{node.frontmatter.date}</small>\n              <p\n                dangerouslySetInnerHTML={{\n                  __html: node.frontmatter.description || node.excerpt,\n                }}\n              />\n              {/* {node.frontmatter.tags.map((tag) => <Link href={`/tags/${tag}`}></Link>)} */}\n            </div>\n          )\n        })}\n      </Layout>\n    )\n}","import React from \"react\"\nimport { graphql } from \"gatsby\"\n\nimport './index.css'\nimport { ContentsListing } from \"../components/shared\"\n\nexport default ContentsListing\n\nexport const pageQuery = graphql`\n  query {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n    allMarkdownRemark(\n      sort: { fields: [frontmatter___date], order: DESC }\n      filter: { frontmatter: { tab: { eq: \"post\" } } }\n    ) {\n      edges {\n        node {\n          excerpt\n          fields {\n            slug\n          }\n          frontmatter {\n            date(formatString: \"MMMM DD, YYYY\")\n            title\n            tab\n          }\n        }\n      }\n    }\n  }\n`\n"],"sourceRoot":""}