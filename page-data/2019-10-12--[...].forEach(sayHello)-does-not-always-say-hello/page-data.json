{"componentChunkName":"component---src-templates-blog-post-js","path":"/2019-10-12--[...].forEach(sayHello)-does-not-always-say-hello/","result":{"data":{"site":{"siteMetadata":{"title":"Joel's dev blog","author":"Joel Mun","siteUrl":"https://9oelm.github.io"}},"markdownRemark":{"id":"1f7923ae-9234-5fae-adcb-c35d389e9413","excerpt":"The first encounter with the problem I was coding as usual.  And I faced an odd encounter with how  works.  Here goes the code to give an example of that…","html":"<h2 id=\"the-first-encounter-with-the-problem\" style=\"position:relative;\">The first encounter with the problem<a href=\"#the-first-encounter-with-the-problem\" aria-label=\"the first encounter with the problem permalink\" class=\"anchor after\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a></h2>\n<p>I was coding as usual. </p>\n<p>And I faced an odd encounter with how <code class=\"language-text\">forEach</code> works. </p>\n<p>Here goes the code to give an example of that. Imagine the code below is the code from one of the libaries I was using:</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">interface</span> <span class=\"token class-name\">IWalkingDead</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function-variable function\">saveFromZombies</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">name<span class=\"token operator\">:</span> string</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">void</span><span class=\"token punctuation\">;</span>\n  possibility<span class=\"token operator\">:</span> number<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> walkingDead<span class=\"token operator\">:</span> IWalkingDead <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function-variable function\">saveFromZombies</span><span class=\"token operator\">:</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">name</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span> \n    <span class=\"token keyword\">const</span> msg <span class=\"token operator\">=</span> Math<span class=\"token punctuation\">.</span><span class=\"token function\">random</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>possibility <span class=\"token operator\">?</span> \n      <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>name<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\"> was succesfully saved by the chance of </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>possibility<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token template-punctuation string\">`</span></span> <span class=\"token operator\">:</span> \n      <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">R.I.P </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>name<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\"> - by the chance of </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>possibility<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">;</span>\n        console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>msg<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> \n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  possibility<span class=\"token operator\">:</span> <span class=\"token number\">0.5</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>And I spotted the code in my company’s app that was kind of doing:</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token operator\">></span> walkingDead<span class=\"token punctuation\">.</span><span class=\"token function\">saveFromZombies</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Glenn'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 'R.I.P Glenn - by the chance of 0.5'</span>\n<span class=\"token operator\">></span> walkingDead<span class=\"token punctuation\">.</span><span class=\"token function\">saveFromZombies</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Shane'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 'Shane was succesfully saved by the chance of 0.5'</span>\n<span class=\"token operator\">></span> walkingDead<span class=\"token punctuation\">.</span><span class=\"token function\">saveFromZombies</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Lori'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  <span class=\"token comment\">// 'R.I.P Lori - by the chance of 0.5'</span>\n<span class=\"token operator\">></span> walkingDead<span class=\"token punctuation\">.</span><span class=\"token function\">saveFromZombies</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Daryl'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 'Daryl was succesfully saved by the chance of 0.5'</span></code></pre></div>\n<p>Of course, I did not want this. It’s against DRY principle. So I refactored the code to:</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">const</span> survivors<span class=\"token operator\">:</span> Array<span class=\"token operator\">&lt;</span>string<span class=\"token operator\">></span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'Glenn'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'Shane'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'Lori'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'Daryl'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\nsurvivors<span class=\"token punctuation\">.</span><span class=\"token function\">forEach</span><span class=\"token punctuation\">(</span>options<span class=\"token punctuation\">.</span>saveFromZombies<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>Cooler and more succinct. </p>\n<p>But I was very well tricked into thinking that this would just work. See what this code gave:</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token comment\">// survivors.forEach(options.saveFromZombies) outputs:</span>\n<span class=\"token string\">'R.I.P Glenn - by the chance of undefined'</span><span class=\"token punctuation\">,</span>\n<span class=\"token string\">'R.I.P Shane - by the chance of undefined'</span><span class=\"token punctuation\">,</span>\n<span class=\"token string\">'R.I.P Lori - by the chance of undefined'</span><span class=\"token punctuation\">,</span>\n<span class=\"token string\">'R.I.P Daryl - by the chance of undefined'</span></code></pre></div>\n<p>Oops. Everybody’s dead. Ok. Now you are starting to get a grasp of why.</p>\n<p>It’s the <em><code class=\"language-text\">this</code></em> binding. Let’s check what <code class=\"language-text\">this</code> is actually doing inside our code:</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">const</span> walkingDead<span class=\"token operator\">:</span> IWalkingDead <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function-variable function\">saveFromZombies</span><span class=\"token operator\">:</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">name</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span> \n    <span class=\"token keyword\">const</span> msg <span class=\"token operator\">=</span> Math<span class=\"token punctuation\">.</span><span class=\"token function\">random</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>possibility <span class=\"token operator\">?</span> \n      <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>name<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\"> was succesfully saved by the chance of </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>possibility<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token template-punctuation string\">`</span></span> <span class=\"token operator\">:</span> \n      <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">R.I.P </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>name<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\"> - by the chance of </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>possibility<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">;</span>\n      console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>msg<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// &lt;----- just added this line to check what `this` is doing</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  possibility<span class=\"token operator\">:</span> <span class=\"token number\">0.5</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>Well, no surprise. It outputs: </p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token operator\">...</span>\n\n<span class=\"token constant\">R</span><span class=\"token punctuation\">.</span><span class=\"token constant\">I</span><span class=\"token punctuation\">.</span><span class=\"token constant\">P</span> Daryl <span class=\"token operator\">-</span> by the chance <span class=\"token keyword\">of</span> <span class=\"token keyword\">undefined</span>\nObject <span class=\"token punctuation\">[</span>global<span class=\"token punctuation\">]</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token constant\">DTRACE_NET_SERVER_CONNECTION</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>Function<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n  <span class=\"token constant\">DTRACE_NET_STREAM_END</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>Function<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n  <span class=\"token constant\">DTRACE_HTTP_SERVER_REQUEST</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>Function<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n  <span class=\"token constant\">DTRACE_HTTP_SERVER_RESPONSE</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>Function<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n  <span class=\"token constant\">DTRACE_HTTP_CLIENT_REQUEST</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>Function<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n  <span class=\"token constant\">DTRACE_HTTP_CLIENT_RESPONSE</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>Function<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n  global<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>Circular<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n  process<span class=\"token operator\">:</span>\n   process <span class=\"token punctuation\">{</span>\n     title<span class=\"token operator\">:</span> <span class=\"token string\">'node'</span><span class=\"token punctuation\">,</span>\n     version<span class=\"token operator\">:</span> <span class=\"token string\">'v10.16.0'</span><span class=\"token punctuation\">,</span>\n     versions<span class=\"token operator\">:</span>\n      <span class=\"token punctuation\">{</span> http_parser<span class=\"token operator\">:</span> <span class=\"token string\">'2.8.0'</span><span class=\"token punctuation\">,</span>\n        node<span class=\"token operator\">:</span> <span class=\"token string\">'10.16.0'</span><span class=\"token punctuation\">,</span>\n        v8<span class=\"token operator\">:</span> <span class=\"token string\">'6.8.275.32-node.52'</span><span class=\"token punctuation\">,</span>\n        uv<span class=\"token operator\">:</span> <span class=\"token string\">'1.28.0'</span><span class=\"token punctuation\">,</span>\n        zlib<span class=\"token operator\">:</span> <span class=\"token string\">'1.2.11'</span><span class=\"token punctuation\">,</span>\n        brotli<span class=\"token operator\">:</span> <span class=\"token string\">'1.0.7'</span><span class=\"token punctuation\">,</span>\n        ares<span class=\"token operator\">:</span> <span class=\"token string\">'1.15.0'</span><span class=\"token punctuation\">,</span>\n        modules<span class=\"token operator\">:</span> <span class=\"token string\">'64'</span><span class=\"token punctuation\">,</span>\n        nghttp2<span class=\"token operator\">:</span> <span class=\"token string\">'1.34.0'</span><span class=\"token punctuation\">,</span>\n        \n<span class=\"token operator\">...</span><span class=\"token punctuation\">.</span></code></pre></div>\n<p>Ok. So here’s the main point of this article: </p>\n<blockquote>\n<p><strong>Just passing in the reference of a function that uses <code class=\"language-text\">this</code> referring to somewhere else than a <code class=\"language-text\">globalThis</code>, into a <code class=\"language-text\">forEach</code> might cause an error in javascript because <code class=\"language-text\">this</code> will point to a global <code class=\"language-text\">this</code>.</strong></p>\n</blockquote>\n<p>So what do we do? Here are some things to let you know:</p>\n<h2 id=\"1-explicitly-call-the-function\" style=\"position:relative;\">1. Explicitly call the function<a href=\"#1-explicitly-call-the-function\" aria-label=\"1 explicitly call the function permalink\" class=\"anchor after\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a></h2>\n<p>Yeah this works. This will save some of the guys’ lives. </p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">const</span> survivors<span class=\"token operator\">:</span> Array<span class=\"token operator\">&lt;</span>string<span class=\"token operator\">></span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'Glenn'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'Shane'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'Lori'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'Daryl'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\nsurvivors<span class=\"token punctuation\">.</span><span class=\"token function\">forEach</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">survivor<span class=\"token operator\">:</span> string</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> options<span class=\"token punctuation\">.</span><span class=\"token function\">saveFromZombies</span><span class=\"token punctuation\">(</span>survivor<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// outputs:</span>\n<span class=\"token comment\">// R.I.P Glenn - by the chance of 0.5</span>\n<span class=\"token comment\">// ...</span></code></pre></div>\n<p>Same for the normal <code class=\"language-text\">function</code> as well:</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">const</span> survivors<span class=\"token operator\">:</span> Array<span class=\"token operator\">&lt;</span>string<span class=\"token operator\">></span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'Glenn'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'Shane'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'Lori'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'Daryl'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\nsurvivors<span class=\"token punctuation\">.</span><span class=\"token function\">forEach</span><span class=\"token punctuation\">(</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">survivor<span class=\"token operator\">:</span> string</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span> walkingDead<span class=\"token punctuation\">.</span><span class=\"token function\">saveFromZombies</span><span class=\"token punctuation\">(</span>survivor<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">// outputs:</span>\n<span class=\"token comment\">// R.I.P Glenn - by the chance of 0.5</span>\n<span class=\"token comment\">// ...</span></code></pre></div>\n<h2 id=\"2-pass-thisarg-as-an-argument\" style=\"position:relative;\">2. <a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/forEach#Syntax\">Pass <code class=\"language-text\">thisArg</code> as an argument</a><a href=\"#2-pass-thisarg-as-an-argument\" aria-label=\"2 pass thisarg as an argument permalink\" class=\"anchor after\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a></h2>\n<p>These are the parameters for <code class=\"language-text\">forEach</code>:</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\">arr<span class=\"token punctuation\">.</span><span class=\"token function\">forEach</span><span class=\"token punctuation\">(</span><span class=\"token function\">callback</span><span class=\"token punctuation\">(</span>currentValue <span class=\"token punctuation\">[</span><span class=\"token punctuation\">,</span> index <span class=\"token punctuation\">[</span><span class=\"token punctuation\">,</span> array<span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">,</span> thisArg<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>You can put in the object to be pointed to as <code class=\"language-text\">this</code> inside <code class=\"language-text\">saveFromZombies</code>. </p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">const</span> survivors<span class=\"token operator\">:</span> Array<span class=\"token operator\">&lt;</span>string<span class=\"token operator\">></span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'Glenn'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'Shane'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'Lori'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'Daryl'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\nsurvivors<span class=\"token punctuation\">.</span><span class=\"token function\">forEach</span><span class=\"token punctuation\">(</span>options<span class=\"token punctuation\">.</span>saveFromZombies<span class=\"token punctuation\">,</span> walkingDead<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// outputs:</span>\n<span class=\"token comment\">// Glenn was succesfully saved by the chance of 0.5</span>\n<span class=\"token comment\">// ...</span></code></pre></div>\n<h2 id=\"3-use-bind\" style=\"position:relative;\">3. Use <code class=\"language-text\">bind</code><a href=\"#3-use-bind\" aria-label=\"3 use bind permalink\" class=\"anchor after\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a></h2>\n<p>This is an explicit binding. You tell the javascript engine that you want <code class=\"language-text\">saveFromZombies</code> to be bound to <code class=\"language-text\">walkingDead</code> object. </p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">const</span> survivors<span class=\"token operator\">:</span> Array<span class=\"token operator\">&lt;</span>string<span class=\"token operator\">></span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'Glenn'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'Shane'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'Lori'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'Daryl'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\nsurvivors<span class=\"token punctuation\">.</span><span class=\"token function\">forEach</span><span class=\"token punctuation\">(</span>walkingDead<span class=\"token punctuation\">.</span><span class=\"token function\">saveFromZombies</span><span class=\"token punctuation\">.</span><span class=\"token function\">bind</span><span class=\"token punctuation\">(</span>walkingDead<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// outputs:</span>\n<span class=\"token comment\">// R.I.P Glenn - by the chance of 0.5</span>\n<span class=\"token comment\">// ...</span></code></pre></div>\n<h2 id=\"further\" style=\"position:relative;\">Further..<a href=\"#further\" aria-label=\"further permalink\" class=\"anchor after\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a></h2>\n<p>Of course, we can, and should apply the same principle when dealing with <code class=\"language-text\">map</code>, <code class=\"language-text\">filter</code>, … and more. </p>\n<h2 id=\"summary\" style=\"position:relative;\">Summary<a href=\"#summary\" aria-label=\"summary permalink\" class=\"anchor after\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a></h2>\n<ul>\n<li>We have looked at how <code class=\"language-text\">this</code> might lose context when we put a reference of a function as a callback to <code class=\"language-text\">forEach</code>. </li>\n<li>The solutions are: (1) Explicitly call the function, (2) Pass <code class=\"language-text\">thisArg</code> as an argument, and (3) Use <code class=\"language-text\">bind</code>.</li>\n</ul>\n<p>Happy <code class=\"language-text\">forEach</code> coding! </p>","frontmatter":{"title":"[...].forEach(saveFromZombies) does not always save people","date":"October 12, 2019"}}},"pageContext":{"slug":"/2019-10-12--[...].forEach(sayHello)-does-not-always-say-hello/","previous":{"fields":{"slug":"/2019-10-02--Making-stupid-react-smart-in-re-rendering/"},"frontmatter":{"title":"Making stupid react smart in re-rendering","tab":"post"}},"next":{"fields":{"slug":"/2019-12-07--The-rise-of-low-level-prograamming-(Feat.-WebAssembly)/"},"frontmatter":{"title":"The rise of low-level programming (feat. WebAssembly)","tab":"post"}}}},"staticQueryHashes":["3128451518","426816048"]}