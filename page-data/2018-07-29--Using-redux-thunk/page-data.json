{"componentChunkName":"component---src-templates-blog-post-js","path":"/2018-07-29--Using-redux-thunk/","result":{"data":{"site":{"siteMetadata":{"title":"Joel's dev blog","author":"Joel Mun","siteUrl":"https://9oelm.github.io"}},"markdownRemark":{"id":"30507019-5813-5d2d-bf23-3095fda3e55d","excerpt":"The problem So I have been building the app Youtube-Lite, and I finally have faced the moment where I need asynchronous function working with . So I had to dig…","html":"<h1 id=\"the-problem\" style=\"position:relative;\">The problem<a href=\"#the-problem\" aria-label=\"the problem permalink\" class=\"anchor after\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a></h1>\n<p>So I have been building the app <a href=\"https://github.com/9oelM/Youtube-Lite\">Youtube-Lite</a>, and I finally have faced the moment where I need asynchronous function working with <code class=\"language-text\">redux</code>. So I had to dig into this. </p>\n<h2 id=\"ref\" style=\"position:relative;\">Ref<a href=\"#ref\" aria-label=\"ref permalink\" class=\"anchor after\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a></h2>\n<p>I mainly referred to the articles from <a href=\"https://redux.js.org/advanced/asyncactions\">redux.js.org</a> for this post. </p>\n<p>… and, also <a href=\"https://velopert.com/3401\">velopert’s blog</a>.</p>\n<h2 id=\"so-what-the-heck-is-redux-thunk\" style=\"position:relative;\">So what the heck is <code class=\"language-text\">redux-thunk</code><a href=\"#so-what-the-heck-is-redux-thunk\" aria-label=\"so what the heck is redux thunk permalink\" class=\"anchor after\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a></h2>\n<h3 id=\"its-a-middleware\" style=\"position:relative;\">It’s a <strong>middleware</strong><a href=\"#its-a-middleware\" aria-label=\"its a middleware permalink\" class=\"anchor after\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a></h3>\n<p>A middleware is like a bridge from action to reducer.\nYou can do additional things in between them, such as <a href=\"https://github.com/evgenyrodionov/redux-logger\">logging</a>.</p>\n<p>How do you add a middleware to your react-redux application? Like this, using <code class=\"language-text\">applyMiddleware</code>:</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> createStore<span class=\"token punctuation\">,</span> applyMiddleware <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'redux'</span>\n<span class=\"token keyword\">import</span> reducers <span class=\"token keyword\">from</span> <span class=\"token string\">'../reducers/index'</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> createMiddleware <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'my-middleware'</span>\n\n<span class=\"token keyword\">const</span> mw <span class=\"token operator\">=</span> <span class=\"token function\">createMiddleware</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">const</span> store <span class=\"token operator\">=</span> <span class=\"token function\">createStore</span><span class=\"token punctuation\">(</span>reducers<span class=\"token punctuation\">,</span> <span class=\"token function\">applyMiddleware</span><span class=\"token punctuation\">(</span>mw<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> store<span class=\"token punctuation\">;</span></code></pre></div>\n<p>And so obviously, as we could expect, <code class=\"language-text\">redux-thunk</code> is a type of middleware as well. </p>\n<h3 id=\"redux-thunk\" style=\"position:relative;\"><code class=\"language-text\">redux-thunk</code><a href=\"#redux-thunk\" aria-label=\"redux thunk permalink\" class=\"anchor after\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a></h3>\n<p>Well, <a href=\"https://github.com/reduxjs/redux-thunk#whats-a-thunk\">a thunk is a function that wraps an expression to delay its evaluation</a>.</p>\n<p>So <code class=\"language-text\">redux-thunk</code> allows some kind of data from an asynchronous operation or the asynchronous operation itself to be made use of with <code class=\"language-text\">redux</code>.</p>\n<h2 id=\"lets-apply-this-to-my-app\" style=\"position:relative;\">Let’s apply this to my app<a href=\"#lets-apply-this-to-my-app\" aria-label=\"lets apply this to my app permalink\" class=\"anchor after\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a></h2>\n<h3 id=\"1-apply-middleware-in-storeindexjs\" style=\"position:relative;\">1. Apply middleware in <code class=\"language-text\">store/index.js</code><a href=\"#1-apply-middleware-in-storeindexjs\" aria-label=\"1 apply middleware in storeindexjs permalink\" class=\"anchor after\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a></h3>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">npm --save-dev install redux-thunk</code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> createStore<span class=\"token punctuation\">,</span> applyMiddleware <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'redux'</span>\n<span class=\"token keyword\">import</span> thunk <span class=\"token keyword\">from</span> <span class=\"token string\">'redux-thunk'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> reducers <span class=\"token keyword\">from</span> <span class=\"token string\">'../reducers/reducers'</span>\n\n<span class=\"token keyword\">const</span> store <span class=\"token operator\">=</span> <span class=\"token function\">createStore</span><span class=\"token punctuation\">(</span>\n  reducers<span class=\"token punctuation\">,</span> <span class=\"token function\">applyMiddleware</span><span class=\"token punctuation\">(</span>thunk<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n  window<span class=\"token punctuation\">.</span>__REDUX_DEVTOOLS_EXTENSION__ <span class=\"token operator\">&amp;&amp;</span> window<span class=\"token punctuation\">.</span><span class=\"token function\">__REDUX_DEVTOOLS_EXTENSION__</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> store</code></pre></div>\n<h3 id=\"2-get-reducers-right-according-to-the-asynchronous-actions-request_search-and-receive_search\" style=\"position:relative;\">2. Get reducers right according to the asynchronous actions (<code class=\"language-text\">REQUEST_SEARCH</code> and <code class=\"language-text\">RECEIVE_SEARCH</code>)<a href=\"#2-get-reducers-right-according-to-the-asynchronous-actions-request_search-and-receive_search\" aria-label=\"2 get reducers right according to the asynchronous actions request_search and receive_search permalink\" class=\"anchor after\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a></h3>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> combineReducers <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'redux'</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token constant\">REQUEST_SEARCH</span><span class=\"token punctuation\">,</span>\n  <span class=\"token constant\">RECEIVE_SEARCH</span><span class=\"token punctuation\">,</span>\n  <span class=\"token constant\">TOGGLE_DRAWER</span>\n<span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'../actions/constants'</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">viewReducer</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">state <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n  isDrawerOpen<span class=\"token operator\">:</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> action</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">switch</span> <span class=\"token punctuation\">(</span>action<span class=\"token punctuation\">.</span>type<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">case</span> <span class=\"token constant\">TOGGLE_DRAWER</span><span class=\"token operator\">:</span>\n      <span class=\"token keyword\">return</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token operator\">...</span>state<span class=\"token punctuation\">,</span>\n        isDrawerOpen<span class=\"token operator\">:</span> <span class=\"token operator\">!</span>state<span class=\"token punctuation\">.</span>isDrawerOpen<span class=\"token punctuation\">,</span>\n      <span class=\"token punctuation\">}</span>\n    <span class=\"token keyword\">default</span><span class=\"token operator\">:</span>\n      <span class=\"token keyword\">return</span> state\n    <span class=\"token comment\">/*\n        It's important to return the previous state for any unknown action.\n        */</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">searchReducer</span><span class=\"token punctuation\">(</span>state <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n  searchResults<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token comment\">// nothing is received as a result yet</span>\n  isFetching<span class=\"token operator\">:</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">,</span>\n  searchWord<span class=\"token operator\">:</span> <span class=\"token string\">''</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> action<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">switch</span><span class=\"token punctuation\">(</span>action<span class=\"token punctuation\">.</span>type<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// return new objects instead of modifying them</span>\n    <span class=\"token keyword\">case</span> <span class=\"token constant\">REQUEST_SEARCH</span><span class=\"token operator\">:</span>\n      <span class=\"token keyword\">return</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token operator\">...</span>state<span class=\"token punctuation\">,</span>\n        isFetching<span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span>\n        searchWord<span class=\"token operator\">:</span> action<span class=\"token punctuation\">.</span>searchWord\n      <span class=\"token punctuation\">}</span>\n    <span class=\"token keyword\">case</span> <span class=\"token constant\">RECEIVE_SEARCH</span><span class=\"token operator\">:</span>\n      <span class=\"token keyword\">return</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token operator\">...</span>state<span class=\"token punctuation\">,</span>\n        isFetching<span class=\"token operator\">:</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">,</span>\n        searchResults<span class=\"token operator\">:</span> action<span class=\"token punctuation\">.</span>searchResults\n      <span class=\"token punctuation\">}</span>\n    <span class=\"token keyword\">default</span><span class=\"token operator\">:</span>\n      <span class=\"token keyword\">return</span> state\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token keyword\">const</span> rootReducer <span class=\"token operator\">=</span> <span class=\"token function\">combineReducers</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n  viewReducer<span class=\"token punctuation\">,</span>\n  searchReducer\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> rootReducer</code></pre></div>\n<h3 id=\"3-create-thunk-action-creator\" style=\"position:relative;\">3. Create thunk action creator!<a href=\"#3-create-thunk-action-creator\" aria-label=\"3 create thunk action creator permalink\" class=\"anchor after\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a></h3>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">import</span> <span class=\"token constant\">C</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'./constants'</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">const</span> <span class=\"token function-variable function\">requestSearch</span> <span class=\"token operator\">=</span> <span class=\"token parameter\">searchWord</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n  type<span class=\"token operator\">:</span> <span class=\"token constant\">C</span><span class=\"token punctuation\">.</span><span class=\"token constant\">REQUEST_SEARCH</span><span class=\"token punctuation\">,</span>\n  searchWord<span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">const</span> <span class=\"token function-variable function\">receiveSearch</span> <span class=\"token operator\">=</span> <span class=\"token parameter\">searchResults</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n  type<span class=\"token operator\">:</span> <span class=\"token constant\">C</span><span class=\"token punctuation\">.</span><span class=\"token constant\">RECEIVE_SEARCH</span><span class=\"token punctuation\">,</span>\n  searchResults<span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">const</span> <span class=\"token function-variable function\">toggleDrawer</span> <span class=\"token operator\">=</span> <span class=\"token parameter\">isDrawerOpen</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n  type<span class=\"token operator\">:</span> <span class=\"token constant\">C</span><span class=\"token punctuation\">.</span><span class=\"token constant\">TOGGLE_DRAWER</span><span class=\"token punctuation\">,</span>\n  isDrawerOpen<span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\">// Thunk action creator</span>\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">function</span> <span class=\"token function\">fetchSearchResults</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">searchWord</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">dispatch</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token function\">dispatch</span><span class=\"token punctuation\">(</span><span class=\"token function\">requestSearch</span><span class=\"token punctuation\">(</span>searchWord<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n    <span class=\"token comment\">/*\n      your code for requesting the search results\n      that would return searchResults. (fetch, ajax, whatever)\n    */</span>\n    <span class=\"token function\">dispatch</span><span class=\"token punctuation\">(</span><span class=\"token function\">receiveSearch</span><span class=\"token punctuation\">(</span>searchResults<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>As you see, we now have this thunk action creator which would have <code class=\"language-text\">dispatch</code> function inside, so that you could dispatch actions internally whenever you want to based on situations. </p>","frontmatter":{"title":"Using redux-thunk","date":"July 29, 2018"}}},"pageContext":{"slug":"/2018-07-29--Using-redux-thunk/","previous":{"fields":{"slug":"/2018-06-30--This-&-Object-prototypes-(2):-this-All-Makes-Sense-Now!/"},"frontmatter":{"title":"This & Object prototypes (2): this All Makes Sense Now!"}},"next":{"fields":{"slug":"/2018-08-11--Page-transition-in-React/"},"frontmatter":{"title":"Page transition in React"}}}},"staticQueryHashes":["3128451518","426816048"]}