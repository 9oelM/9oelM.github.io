{"componentChunkName":"component---src-templates-blog-post-js","path":"/2018-03-24--Scope-and-closure-(3):-hoisting/","result":{"data":{"site":{"siteMetadata":{"title":"Joel's dev blog","author":"Joel Mun","siteUrl":"https://9oelm.github.io"}},"markdownRemark":{"id":"e69481bb-4e53-51fc-835a-b211c41428ef","excerpt":"FYI Notes made with You don’t know JS. Important points on hoisting Hoisting is just basic. Just remember hoisting happens per scope and only on variable and…","html":"<h2>FYI</h2>\n<p>Notes made with <a href=\"https://github.com/getify/You-Dont-Know-JS/blob/master/scope%20%26%20closures/ch4.md\">You don’t know JS</a>.</p>\n<h3>Important points on hoisting</h3>\n<ul>\n<li>Hoisting is just basic. Just remember hoisting happens <strong>per scope</strong> and only on variable and function <strong>declarations</strong>, not assignments or reference.</li>\n<li>Also remember <strong>functions are hoisted first, and then variables.</strong></li>\n<li><strong>The hoisted functions or variables will override any other functions or variables that have the same name.</strong></li>\n<li>Function declarations that appear inside of normal blocks like <code class=\"language-text\">if</code> typically hoist to the enclosing (outer) scope.</li>\n</ul>","frontmatter":{"title":"Scope and closure (3): hoisting","date":"March 24, 2018"}}},"pageContext":{"slug":"/2018-03-24--Scope-and-closure-(3):-hoisting/","previous":{"fields":{"slug":"/2018-03-24--Scope-and-closure-(2):-writing-good-codes/"},"frontmatter":{"title":"Scope and closure (2): writing good codes"}},"next":{"fields":{"slug":"/2018-03-31--Scope-and-closure-(4):-closure/"},"frontmatter":{"title":"Scope and closure (4): closure"}}}},"staticQueryHashes":["3128451518","426816048"]}