{"componentChunkName":"component---src-templates-blog-post-js","path":"/2018-10-19--Vue/","result":{"data":{"site":{"siteMetadata":{"title":"Joel's dev blog","author":"Joel Mun","siteUrl":"https://9oelm.github.io"}},"markdownRemark":{"id":"c7e73f5a-010a-5059-8df1-8cdf4dd9bf7d","excerpt":"No time Really, I’ve got no time to learn Vue. I need to get basic concepts in the shortest length of time. Vue Cli 3.0 We are going to use Vue Cli@3.0. Initial…","html":"<h1>No time</h1>\n<p>Really, I’ve got no time to learn Vue. I need to get basic concepts in the shortest length of time.</p>\n<h1>Vue Cli 3.0</h1>\n<p>We are going to use Vue Cli@3.0.</p>\n<h2>Initial settings</h2>\n<p>Update <code class=\"language-text\">nvm</code> and <code class=\"language-text\">npm</code> to an appropriate version</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">j031:~/workspace $ nvm install 8.9\nDownloading https://nodejs.org/dist/v8.9.4/node-v8.9.4-linux-x64.tar.xz...\n######################################################################## 100.0%\nNow using node v8.9.4 (npm v5.6.0)\nj031:~/workspace $ npm --version\n5.6.0\nj031:~/workspace $ node --version\nv8.9.4\nj031:~/workspace $ </code></pre></div>\n<p>then install vue cli</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">npm install -g @vue/cli</code></pre></div>\n<p>and check:</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">j031:~/workspace $ vue --version\n3.0.5</code></pre></div>\n<h1>Enable instant prototyping</h1>\n<p>Install:</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">npm install -g @vue/cli-service-global</code></pre></div>\n<p>And just load up your component file:</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">vue serve App.vue</code></pre></div>\n<p>And now if you are running your app on a container, it may show some error saying something like “invalid host error”. This is how you solve it:</p>\n<p>Make <code class=\"language-text\">vue.config.js</code> in the project root:</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token comment\">// vue.config.js</span>\nmodule<span class=\"token punctuation\">.</span>exports <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n  devServer<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    host<span class=\"token operator\">:</span> <span class=\"token string\">'0.0.0.0'</span><span class=\"token punctuation\">,</span>\n    port<span class=\"token operator\">:</span> <span class=\"token number\">8080</span><span class=\"token punctuation\">,</span>\n    disableHostCheck<span class=\"token operator\">:</span> <span class=\"token boolean\">true</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>Then you are good to go. You will see your vue file loaded on the webpage.\nFor more troubleshotting, see:</p>\n<ul>\n<li><a href=\"https://github.com/vuejs/vue-cli/issues/828\">#828</a></li>\n<li><a href=\"https://github.com/vuejs/vue-cli/issues/1616\">#1616</a></li>\n<li><a href=\"https://webpack.js.org/configuration/dev-server/#devserver-disablehostcheck\">Webpack documentation</a></li>\n<li><a href=\"http://blog.naver.com/PostView.nhn?blogId=1231jjong&#x26;logNo=221278068483&#x26;categoryNo=0&#x26;parentCategoryNo=0&#x26;viewDate=&#x26;currentPage=1&#x26;postListTopCurrentPage=1&#x26;from=postView&#x26;userTopListOpen=true&#x26;userTopListCount=20&#x26;userTopListManageOpen=false&#x26;userTopListCurrentPage=1\">Naver blog post</a></li>\n<li><a href=\"https://cli.vuejs.org/guide/webpack.html#simple-configuration\">vue-cli documentation</a></li>\n</ul>\n<h1>Go further</h1>\n<p>You can point to the entry file and Vue Cli will automatically bundle things up for you.</p>\n<h1>Create a project</h1>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">vue create test</code></pre></div>\n<p>It will go over interactive prompts and select things as you would like them to be!</p>\n<p>After then, it will initialize project files automatically. Beautiful! <strong>You don’t need to create a boilerplate for your Vue project right?</strong></p>\n<h1>Props</h1>\n<p>Just like <code class=\"language-text\">react</code> you can put in props like:</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token operator\">&lt;</span>template<span class=\"token operator\">></span>\n  <span class=\"token operator\">&lt;</span>div <span class=\"token keyword\">class</span><span class=\"token operator\">=</span><span class=\"token string\">\"home\"</span><span class=\"token operator\">></span>\n    <span class=\"token operator\">&lt;</span>img alt<span class=\"token operator\">=</span><span class=\"token string\">\"Vue logo\"</span> src<span class=\"token operator\">=</span><span class=\"token string\">\"../assets/logo.png\"</span><span class=\"token operator\">></span>\n    <span class=\"token operator\">&lt;</span>HelloWorld msg<span class=\"token operator\">=</span><span class=\"token string\">\"Welcome to Your Vue.js App\"</span><span class=\"token operator\">/</span><span class=\"token operator\">></span>\n  <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>div<span class=\"token operator\">></span>\n<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>template<span class=\"token operator\">></span>\n\n<span class=\"token operator\">&lt;</span>script<span class=\"token operator\">></span>\n<span class=\"token comment\">// @ is an alias to /src</span>\n\n<span class=\"token keyword\">import</span> HelloWorld <span class=\"token keyword\">from</span> <span class=\"token string\">\"@/components/HelloWorld.vue\"</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> <span class=\"token punctuation\">{</span>\n  name<span class=\"token operator\">:</span> <span class=\"token string\">\"home\"</span><span class=\"token punctuation\">,</span>\n  components<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    HelloWorld\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>script<span class=\"token operator\">></span></code></pre></div>\n<ul>\n<li>See <code class=\"language-text\">msg</code> prop of <code class=\"language-text\">HelloWorld</code> component. You just specify them inline. Same as <code class=\"language-text\">react</code>, right?</li>\n<li>You import the component inside the <code class=\"language-text\">script</code> tag. </li>\n<li>You specify the imported component inside the <code class=\"language-text\">components</code> key of the option object.</li>\n</ul>\n<h1>Directives</h1>\n<p>Directives start with <code class=\"language-text\">v-</code>.</p>\n<blockquote>\n<p>they apply special reactive behavior to the rendered DOM. </p>\n</blockquote>\n<h2>Example with <code class=\"language-text\">v-if</code></h2>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token operator\">&lt;</span>template<span class=\"token operator\">></span>\n  <span class=\"token operator\">&lt;</span>div <span class=\"token keyword\">class</span><span class=\"token operator\">=</span><span class=\"token string\">\"home\"</span><span class=\"token operator\">></span>\n    <span class=\"token operator\">&lt;</span>img alt<span class=\"token operator\">=</span><span class=\"token string\">\"Vue logo\"</span> src<span class=\"token operator\">=</span><span class=\"token string\">\"../assets/logo.png\"</span><span class=\"token operator\">></span>\n    <span class=\"token operator\">&lt;</span>HelloWorld v<span class=\"token operator\">-</span><span class=\"token keyword\">if</span><span class=\"token operator\">=</span><span class=\"token string\">\"seen\"</span> msg<span class=\"token operator\">=</span><span class=\"token string\">\"Welcome to Your Vue.js App\"</span><span class=\"token operator\">/</span><span class=\"token operator\">></span>\n  <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>div<span class=\"token operator\">></span>\n<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>template<span class=\"token operator\">></span>\n\n<span class=\"token operator\">&lt;</span>script<span class=\"token operator\">></span>\n<span class=\"token comment\">// @ is an alias to /src</span>\n<span class=\"token keyword\">import</span> HelloWorld <span class=\"token keyword\">from</span> <span class=\"token string\">\"@/components/HelloWorld.vue\"</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> <span class=\"token punctuation\">{</span>\n  name<span class=\"token operator\">:</span> <span class=\"token string\">\"home\"</span><span class=\"token punctuation\">,</span>\n  <span class=\"token function-variable function\">data</span><span class=\"token operator\">:</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> <span class=\"token punctuation\">{</span> seen<span class=\"token operator\">:</span> <span class=\"token boolean\">true</span> <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  components<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    HelloWorld\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>script<span class=\"token operator\">></span></code></pre></div>\n<p><code class=\"language-text\">v-if</code>’s <code class=\"language-text\">seen</code> is like a state in <code class=\"language-text\">react</code>, I think.\nSo If you set <code class=\"language-text\">seen</code> as <code class=\"language-text\">true</code>, <code class=\"language-text\">HelloWorld</code> component will be visible. However, if you write:</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token function-variable function\">data</span><span class=\"token operator\">:</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> <span class=\"token punctuation\">{</span> seen<span class=\"token operator\">:</span> <span class=\"token boolean\">false</span> <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span></code></pre></div>\n<p><code class=\"language-text\">HelloWorld</code> will not be visible. </p>\n<p><strong>So what does <code class=\"language-text\">name</code> key do?</strong> I suppose it’s used for the name when you <code class=\"language-text\">import</code> the component.</p>\n<h2>Another example with <code class=\"language-text\">v-on</code></h2>\n<p><code class=\"language-text\">HiButton.vue</code></p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token operator\">&lt;</span>template<span class=\"token operator\">></span>\n    <span class=\"token operator\">&lt;</span>button v<span class=\"token operator\">-</span>on<span class=\"token operator\">:</span>click<span class=\"token operator\">=</span><span class=\"token string\">\"sayHi\"</span><span class=\"token operator\">></span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>button<span class=\"token operator\">></span>\n<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>template<span class=\"token operator\">></span>\n<span class=\"token operator\">&lt;</span>script<span class=\"token operator\">></span>\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> <span class=\"token punctuation\">{</span>\n  name<span class=\"token operator\">:</span> <span class=\"token string\">\"HiButton\"</span><span class=\"token punctuation\">,</span>\n  methods<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token function-variable function\">sayHi</span><span class=\"token operator\">:</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token function\">alert</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"hi\"</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>script<span class=\"token operator\">></span>\n<span class=\"token operator\">&lt;</span>style lang<span class=\"token operator\">=</span><span class=\"token string\">\"sass\"</span> scoped<span class=\"token operator\">></span>\n    button\n        background<span class=\"token operator\">:</span> #<span class=\"token constant\">FB1134</span>\n        height<span class=\"token operator\">:</span> <span class=\"token number\">100</span>px\n        width<span class=\"token operator\">:</span> <span class=\"token number\">100</span>px\n<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>style<span class=\"token operator\">></span></code></pre></div>\n<p>Look at the code above. <code class=\"language-text\">v-on:click</code> is like <code class=\"language-text\">onClick</code> in <code class=\"language-text\">react</code>. And intuition tells us that you can put any various user interactions after <code class=\"language-text\">on:</code>, like <code class=\"language-text\">submit</code>. Same as react, you are passing a reference to the function <code class=\"language-text\">sayHi</code> to <code class=\"language-text\">button</code>. And in <code class=\"language-text\">methods</code> option, you specify the job you wanna do with <code class=\"language-text\">sayHi</code>.</p>\n<p>The <code class=\"language-text\">scoped</code> styling works with <code class=\"language-text\">div[attr]</code> form. Vue makes the styling unique to the element, for example, by rendering the button with:</p>\n<p><strong>html</strong></p>\n<div class=\"gatsby-highlight\" data-language=\"html\"><pre class=\"language-html\"><code class=\"language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>button</span> <span class=\"token attr-name\">data-v-340c8b7a</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span><span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>button</span><span class=\"token punctuation\">></span></span></code></pre></div>\n<p><strong>css</strong></p>\n<div class=\"gatsby-highlight\" data-language=\"css\"><pre class=\"language-css\"><code class=\"language-css\"><span class=\"token selector\">button[data-v-340c8b7a]</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token property\">background</span><span class=\"token punctuation\">:</span> #FB1134<span class=\"token punctuation\">;</span>\n    <span class=\"token property\">height</span><span class=\"token punctuation\">:</span> 100px<span class=\"token punctuation\">;</span>\n    <span class=\"token property\">width</span><span class=\"token punctuation\">:</span> 100px<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>And here’s <code class=\"language-text\">Home.vue</code>: </p>\n<p><code class=\"language-text\">Home.vue</code></p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token operator\">&lt;</span>template<span class=\"token operator\">></span>\n  <span class=\"token operator\">&lt;</span>div <span class=\"token keyword\">class</span><span class=\"token operator\">=</span><span class=\"token string\">\"home\"</span><span class=\"token operator\">></span>\n    <span class=\"token operator\">&lt;</span>img alt<span class=\"token operator\">=</span><span class=\"token string\">\"Vue logo\"</span> src<span class=\"token operator\">=</span><span class=\"token string\">\"../assets/logo.png\"</span><span class=\"token operator\">></span>\n    <span class=\"token operator\">&lt;</span>HelloWorld v<span class=\"token operator\">-</span><span class=\"token keyword\">if</span><span class=\"token operator\">=</span><span class=\"token string\">\"seen\"</span> msg<span class=\"token operator\">=</span><span class=\"token string\">\"Welcome to Your Vue.js App\"</span><span class=\"token operator\">/</span><span class=\"token operator\">></span>\n    <span class=\"token operator\">&lt;</span>HiButton <span class=\"token operator\">/</span><span class=\"token operator\">></span>\n  <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>div<span class=\"token operator\">></span>\n<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>template<span class=\"token operator\">></span>\n\n<span class=\"token operator\">&lt;</span>script<span class=\"token operator\">></span>\n<span class=\"token comment\">// @ is an alias to /src</span>\n<span class=\"token keyword\">import</span> HelloWorld <span class=\"token keyword\">from</span> <span class=\"token string\">\"@/components/HelloWorld.vue\"</span>\n<span class=\"token keyword\">import</span> HiButton <span class=\"token keyword\">from</span> <span class=\"token string\">\"@/components/HiButton.vue\"</span>\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> <span class=\"token punctuation\">{</span>\n  name<span class=\"token operator\">:</span> <span class=\"token string\">\"home\"</span><span class=\"token punctuation\">,</span>\n  <span class=\"token function-variable function\">data</span><span class=\"token operator\">:</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> <span class=\"token punctuation\">{</span>\n      seen<span class=\"token operator\">:</span> <span class=\"token boolean\">true</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  components<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    HelloWorld<span class=\"token punctuation\">,</span>\n    HiButton\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>script<span class=\"token operator\">></span></code></pre></div>\n<h1>How can I insert a custom prettier config</h1>\n<p>In the boilerplate created by Vue Cli, open <code class=\"language-text\">eslintrc.js</code>, and add <code class=\"language-text\">&quot;prettier/pretter&quot;</code> key to <code class=\"language-text\">rules</code> like this, if you were to disable semicolons in your javascript files:</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\">module<span class=\"token punctuation\">.</span>exports <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n  root<span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span>\n  env<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    node<span class=\"token operator\">:</span> <span class=\"token boolean\">true</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token keyword\">extends</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string\">\"plugin:vue/essential\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"@vue/prettier\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n  rules<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token string\">\"no-console\"</span><span class=\"token operator\">:</span> process<span class=\"token punctuation\">.</span>env<span class=\"token punctuation\">.</span><span class=\"token constant\">NODE_ENV</span> <span class=\"token operator\">===</span> <span class=\"token string\">\"production\"</span> <span class=\"token operator\">?</span> <span class=\"token string\">\"error\"</span> <span class=\"token operator\">:</span> <span class=\"token string\">\"off\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token string\">\"no-debugger\"</span><span class=\"token operator\">:</span> process<span class=\"token punctuation\">.</span>env<span class=\"token punctuation\">.</span><span class=\"token constant\">NODE_ENV</span> <span class=\"token operator\">===</span> <span class=\"token string\">\"production\"</span> <span class=\"token operator\">?</span> <span class=\"token string\">\"error\"</span> <span class=\"token operator\">:</span> <span class=\"token string\">\"off\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token string\">\"prettier/prettier\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>\n      <span class=\"token string\">\"warn\"</span><span class=\"token punctuation\">,</span>\n      <span class=\"token punctuation\">{</span>\n        semi<span class=\"token operator\">:</span> <span class=\"token boolean\">false</span>\n      <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">]</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  parserOptions<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    parser<span class=\"token operator\">:</span> <span class=\"token string\">\"babel-eslint\"</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>Then, <code class=\"language-text\">npm run lint</code> to check. Done!</p>\n<h1>Components</h1>\n<p>In Vue, you can declare components in a few ways:</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\">Vue<span class=\"token punctuation\">.</span><span class=\"token function\">component</span><span class=\"token punctuation\">(</span><span class=\"token string\">'todo-item'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span>\n  props<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'todo'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n  template<span class=\"token operator\">:</span> <span class=\"token string\">'&lt;li>{{ todo.text }}&lt;/li>'</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span></code></pre></div>\n<p>This is just another way of writing:</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token operator\">&lt;</span>template<span class=\"token operator\">></span>\n    <span class=\"token operator\">&lt;</span>li<span class=\"token operator\">></span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">{</span> todo<span class=\"token punctuation\">.</span>text <span class=\"token punctuation\">}</span><span class=\"token punctuation\">}</span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>li<span class=\"token operator\">></span>\n<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>template<span class=\"token operator\">></span>\n<span class=\"token operator\">&lt;</span>script<span class=\"token operator\">></span>\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> <span class=\"token punctuation\">{</span>\n    name<span class=\"token operator\">:</span> <span class=\"token string\">'todo-item'</span><span class=\"token punctuation\">,</span>\n    props<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'todo'</span><span class=\"token punctuation\">]</span> <span class=\"token comment\">// props specified inside an array</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>script<span class=\"token operator\">></span></code></pre></div>\n<p>And you already know that the object being exported inside the script tag is going to be spread over to the root Vue instance. </p>\n<h1>Data</h1>\n<p>Data are just like states in <code class=\"language-text\">react</code>. You give <code class=\"language-text\">data</code> property in the Vue instance. </p>\n<p>One thing to remember is that <code class=\"language-text\">data</code> needs to be function inside template components.</p>\n<h1>Instance lifecycle hooks</h1>\n<p>Just like react. right? <a href=\"https://vuejs.org/v2/guide/instance.html#Lifecycle-Diagram\">Just look at the API and find out what you need</a>. </p>\n<p>Lifecycle functions are also inside the vue instance, like:</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">let</span> vm <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Vue</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n    <span class=\"token function-variable function\">created</span><span class=\"token operator\">:</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n        console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"I was just created\"</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span></code></pre></div>\n<h1>Note on arrow functions: do not use it</h1>\n<p>Arrow functions would be bound to the parent context (think about arrow functions used as member functions inside the class, making it needless to <code class=\"language-text\">bind</code> it to the class manually). So you <strong>should not</strong> use arrow functions because <code class=\"language-text\">this</code> will not be bound to the Vue instance but something else that a function finds as a parent.</p>\n<h1>Directive shorthands</h1>\n<p><code class=\"language-text\">v-on</code></p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token operator\">&lt;</span>button @click<span class=\"token operator\">=</span><span class=\"token string\">\"sayHi\"</span><span class=\"token operator\">></span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>button<span class=\"token operator\">></span></code></pre></div>\n<p><code class=\"language-text\">v-bind</code></p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token operator\">&lt;</span>a <span class=\"token operator\">:</span>href<span class=\"token operator\">=</span><span class=\"token string\">\"url\"</span><span class=\"token operator\">></span> <span class=\"token operator\">...</span> <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>a<span class=\"token operator\">></span></code></pre></div>\n<h1>What is <code class=\"language-text\">v-bind</code> used for</h1>\n<p>It is used for manipulating attribute values inside html tags with data in Vue. </p>\n<h2><code class=\"language-text\">class</code></h2>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token operator\">&lt;</span>div <span class=\"token keyword\">class</span><span class=\"token operator\">=</span><span class=\"token string\">\"static\"</span>\n     v<span class=\"token operator\">-</span>bind<span class=\"token operator\">:</span><span class=\"token keyword\">class</span><span class=\"token operator\">=</span><span class=\"token string\">\"{ active: isActive, 'text-danger': hasError }\"</span><span class=\"token operator\">></span>\n<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>div<span class=\"token operator\">></span></code></pre></div>\n<p>classes named <code class=\"language-text\">active</code> and <code class=\"language-text\">text-danger</code> will only render depending on bools <code class=\"language-text\">isActive</code> and <code class=\"language-text\">hasError</code>:</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\">data<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n  isActive<span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span>\n  hasError<span class=\"token operator\">:</span> <span class=\"token boolean\">false</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>or, if you want to make it even simpler:</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token operator\">&lt;</span>template<span class=\"token operator\">></span>\n<span class=\"token operator\">&lt;</span>div <span class=\"token keyword\">class</span><span class=\"token operator\">=</span><span class=\"token string\">\"static\"</span>\n     <span class=\"token operator\">:</span><span class=\"token keyword\">class</span><span class=\"token operator\">=</span><span class=\"token string\">\"classObject\"</span><span class=\"token operator\">></span>\n<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>div<span class=\"token operator\">></span>\n<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>template<span class=\"token operator\">></span>\n<span class=\"token operator\">&lt;</span>script<span class=\"token operator\">></span>\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> <span class=\"token punctuation\">{</span>\n    data<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n      classObject<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n        active<span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span>\n        <span class=\"token string\">'text-danger'</span><span class=\"token operator\">:</span> <span class=\"token boolean\">false</span>\n      <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token comment\">// or use a computed property</span>\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> <span class=\"token punctuation\">{</span>\n    data<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n        isActive<span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span>\n        error<span class=\"token operator\">:</span> <span class=\"token keyword\">null</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    computed<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token function-variable function\">classObject</span><span class=\"token operator\">:</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">return</span> <span class=\"token punctuation\">{</span>\n          active<span class=\"token operator\">:</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>isActive <span class=\"token operator\">&amp;&amp;</span> <span class=\"token operator\">!</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>error<span class=\"token punctuation\">,</span>\n          <span class=\"token string\">'text-danger'</span><span class=\"token operator\">:</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>error <span class=\"token operator\">&amp;&amp;</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>error<span class=\"token punctuation\">.</span>type <span class=\"token operator\">===</span> <span class=\"token string\">'fatal'</span>\n        <span class=\"token punctuation\">}</span>\n      <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>script<span class=\"token operator\">></span></code></pre></div>\n<h2><code class=\"language-text\">style</code></h2>\n<p>It’s pretty much the same.</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token operator\">&lt;</span>div v<span class=\"token operator\">-</span>bind<span class=\"token operator\">:</span>style<span class=\"token operator\">=</span><span class=\"token string\">\"styleObject\"</span><span class=\"token operator\">></span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>div<span class=\"token operator\">></span>\n<span class=\"token comment\">// ...</span>\ndata<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n  styleObject<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    color<span class=\"token operator\">:</span> <span class=\"token string\">'red'</span><span class=\"token punctuation\">,</span>\n    fontSize<span class=\"token operator\">:</span> <span class=\"token string\">'13px'</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<h1>For loops</h1>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token operator\">&lt;</span>template<span class=\"token operator\">></span>\n  <span class=\"token operator\">&lt;</span>div<span class=\"token operator\">></span>\n    <span class=\"token operator\">&lt;</span>li v<span class=\"token operator\">-</span><span class=\"token keyword\">for</span><span class=\"token operator\">=</span><span class=\"token string\">\"(letter, index) in msgArr\"</span> v<span class=\"token operator\">-</span>bind<span class=\"token operator\">:</span>key<span class=\"token operator\">=</span><span class=\"token string\">\"`letter-${index}`\"</span><span class=\"token operator\">></span>\n      <span class=\"token punctuation\">{</span><span class=\"token punctuation\">{</span> letter <span class=\"token punctuation\">}</span><span class=\"token punctuation\">}</span>\n    <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>li<span class=\"token operator\">></span>\n    <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>div<span class=\"token operator\">></span>\n<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>template<span class=\"token operator\">></span>\n\n<span class=\"token operator\">&lt;</span>script<span class=\"token operator\">></span>\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> <span class=\"token punctuation\">{</span>\n  name<span class=\"token operator\">:</span> <span class=\"token string\">\"HelloWorld\"</span><span class=\"token punctuation\">,</span>\n  props<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    msg<span class=\"token operator\">:</span> String\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  computed<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token function-variable function\">msgArr</span><span class=\"token operator\">:</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">return</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>msg<span class=\"token punctuation\">.</span><span class=\"token function\">split</span><span class=\"token punctuation\">(</span><span class=\"token string\">\" \"</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>script<span class=\"token operator\">></span></code></pre></div>\n<p>With the <code class=\"language-text\">msg</code> prop being “Welcome to Your Vue.js App”, this is going to show something like:</p>\n<ul>\n<li>Welcome</li>\n<li>to</li>\n<li>Your</li>\n<li>Vue.js</li>\n<li>App</li>\n</ul>\n<h1>Event modifiers</h1>\n<p>You attach it with modifiers that start with a period.\nIf you want to <code class=\"language-text\">preventDefault()</code>, you can simply:</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token operator\">&lt;</span>form v<span class=\"token operator\">-</span>on<span class=\"token operator\">:</span>submit<span class=\"token punctuation\">.</span>prevent<span class=\"token operator\">=</span><span class=\"token string\">\"onSubmit\"</span><span class=\"token operator\">></span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>form<span class=\"token operator\">></span></code></pre></div>\n<h1><code class=\"language-text\">v-model</code></h1>\n<p>It’s for two-way data bindings. </p>\n<h1>Add <code class=\"language-text\">element</code></h1>\n<p>It is supported for <code class=\"language-text\">vue-cli@3</code>.</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">vue add element</code></pre></div>\n<h1>Importing</h1>\n<p>If you do not want to import components separately, just do:</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">import</span> ElementUI <span class=\"token keyword\">from</span> <span class=\"token string\">'element-ui'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token string\">'element-ui/lib/theme-chalk/index.css'</span><span class=\"token punctuation\">;</span>\n\nVue<span class=\"token punctuation\">.</span><span class=\"token function\">use</span><span class=\"token punctuation\">(</span>ElementUI<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token operator\">...</span></code></pre></div>\n<p>in your <code class=\"language-text\">index.js</code> file.</p>\n<h1><code class=\"language-text\">i18n</code></h1>\n<p>Add these lines</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">import</span> locale <span class=\"token keyword\">from</span> <span class=\"token string\">'element-ui/lib/locale/lang/ko'</span>\n\nVue<span class=\"token punctuation\">.</span><span class=\"token function\">use</span><span class=\"token punctuation\">(</span>ElementUI<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span> locale <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>And in fact, running <code class=\"language-text\">vue add element</code> would guide you through all this and automate this process.</p>\n<h1>Let’s try this out</h1>\n<h2><code class=\"language-text\">&lt;slot&gt;</code> is like <code class=\"language-text\">{children}</code> in <code class=\"language-text\">react</code></h2>\n<p>So we use <code class=\"language-text\">&lt;slot&gt;</code> in layouts to mean that something will go into there.</p>\n<p><code class=\"language-text\">@/layout/Default.vue</code></p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token operator\">&lt;</span>template<span class=\"token operator\">></span>\n    <span class=\"token operator\">&lt;</span>el<span class=\"token operator\">-</span>row<span class=\"token operator\">></span>\n        <span class=\"token operator\">&lt;</span>el<span class=\"token operator\">-</span>col <span class=\"token operator\">:</span>span<span class=\"token operator\">=</span><span class=\"token string\">\"24\"</span><span class=\"token operator\">></span><span class=\"token operator\">&lt;</span>slot<span class=\"token operator\">/</span><span class=\"token operator\">></span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>el<span class=\"token operator\">-</span>col<span class=\"token operator\">></span>\n    <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>el<span class=\"token operator\">-</span>row<span class=\"token operator\">></span>\n<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>template<span class=\"token operator\">></span>\n<span class=\"token operator\">&lt;</span>script<span class=\"token operator\">></span>\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> <span class=\"token punctuation\">{</span>\n    name<span class=\"token operator\">:</span> <span class=\"token string\">\"DefaultLayout\"</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>script<span class=\"token operator\">></span></code></pre></div>\n<p><code class=\"language-text\">@/views/Home.vue</code></p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token operator\">&lt;</span>template<span class=\"token operator\">></span>\n  <span class=\"token operator\">&lt;</span>DefaultLayout<span class=\"token operator\">></span>\n  <span class=\"token operator\">&lt;</span>el<span class=\"token operator\">-</span>card<span class=\"token operator\">></span>\n    <span class=\"token operator\">&lt;</span>div slot<span class=\"token operator\">=</span><span class=\"token string\">\"header\"</span> <span class=\"token keyword\">class</span><span class=\"token operator\">=</span><span class=\"token string\">\"clearfix\"</span><span class=\"token operator\">></span>\n    <span class=\"token operator\">&lt;</span>span<span class=\"token operator\">></span>Card name<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>span<span class=\"token operator\">></span>\n  <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>div<span class=\"token operator\">></span>\n  <span class=\"token operator\">&lt;</span>div v<span class=\"token operator\">-</span><span class=\"token keyword\">for</span><span class=\"token operator\">=</span><span class=\"token string\">\"o in 4\"</span> <span class=\"token operator\">:</span>key<span class=\"token operator\">=</span><span class=\"token string\">\"o\"</span> <span class=\"token keyword\">class</span><span class=\"token operator\">=</span><span class=\"token string\">\"text item\"</span><span class=\"token operator\">></span>\n    <span class=\"token punctuation\">{</span><span class=\"token punctuation\">{</span><span class=\"token string\">'List item '</span> <span class=\"token operator\">+</span> o <span class=\"token punctuation\">}</span><span class=\"token punctuation\">}</span>\n  <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>div<span class=\"token operator\">></span>\n  <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>el<span class=\"token operator\">-</span>card<span class=\"token operator\">></span>\n  <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>DefaultLayout<span class=\"token operator\">></span>\n<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>template<span class=\"token operator\">></span>\n\n<span class=\"token operator\">&lt;</span>script<span class=\"token operator\">></span>\n<span class=\"token keyword\">import</span> DefaultLayout <span class=\"token keyword\">from</span> <span class=\"token string\">\"@/layouts/Default.vue\"</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> <span class=\"token punctuation\">{</span>\n  name<span class=\"token operator\">:</span> <span class=\"token string\">\"Home\"</span><span class=\"token punctuation\">,</span>\n  components<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    DefaultLayout<span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>script<span class=\"token operator\">></span></code></pre></div>\n<p><code class=\"language-text\">@/App.vue</code></p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token operator\">&lt;</span>template<span class=\"token operator\">></span>\n  <span class=\"token operator\">&lt;</span>div<span class=\"token operator\">></span><span class=\"token operator\">&lt;</span>router<span class=\"token operator\">-</span>view<span class=\"token operator\">></span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>router<span class=\"token operator\">-</span>view<span class=\"token operator\">></span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>div<span class=\"token operator\">></span>\n<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>template<span class=\"token operator\">></span>\n\n<span class=\"token operator\">&lt;</span>script<span class=\"token operator\">></span>\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span><span class=\"token punctuation\">{</span>\n  name<span class=\"token operator\">:</span> <span class=\"token string\">\"App\"</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>script<span class=\"token operator\">></span>\n\n<span class=\"token operator\">&lt;</span>style<span class=\"token operator\">></span>\n<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>style<span class=\"token operator\">></span></code></pre></div>\n<p><code class=\"language-text\">router-view</code> just renders what is there in the route.\nRouting configs are done here inside <code class=\"language-text\">router.js</code>:</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">import</span> Vue <span class=\"token keyword\">from</span> <span class=\"token string\">\"vue\"</span>\n<span class=\"token keyword\">import</span> Router <span class=\"token keyword\">from</span> <span class=\"token string\">\"vue-router\"</span>\n<span class=\"token keyword\">import</span> Home <span class=\"token keyword\">from</span> <span class=\"token string\">\"./views/Home.vue\"</span>\n\nVue<span class=\"token punctuation\">.</span><span class=\"token function\">use</span><span class=\"token punctuation\">(</span>Router<span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Router</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n  routes<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>\n    <span class=\"token punctuation\">{</span>\n      path<span class=\"token operator\">:</span> <span class=\"token string\">\"/\"</span><span class=\"token punctuation\">,</span>\n      name<span class=\"token operator\">:</span> <span class=\"token string\">\"home\"</span><span class=\"token punctuation\">,</span>\n      component<span class=\"token operator\">:</span> Home\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">{</span>\n      path<span class=\"token operator\">:</span> <span class=\"token string\">\"/about\"</span><span class=\"token punctuation\">,</span>\n      name<span class=\"token operator\">:</span> <span class=\"token string\">\"about\"</span><span class=\"token punctuation\">,</span>\n      <span class=\"token comment\">// route level code-splitting</span>\n      <span class=\"token comment\">// this generates a separate chunk (about.[hash].js) for this route</span>\n      <span class=\"token comment\">// which is lazy-loaded when the route is visited.</span>\n      <span class=\"token function-variable function\">component</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span>\n        <span class=\"token keyword\">import</span><span class=\"token punctuation\">(</span><span class=\"token comment\">/* webpackChunkName: \"about\" */</span> <span class=\"token string\">\"./views/About.vue\"</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">]</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\">// You are going to use this in `main.js`</span></code></pre></div>\n<h1>How to Vue.js + Typescript</h1>\n<h1>1. Install typescript configs and Vue.js environments using <code class=\"language-text\">@vue.cli</code></h1>\n<h1>2. Typescript basics</h1>\n<h2>Declaring a variable</h2>\n<p>Every variable has a type. </p>\n<div class=\"gatsby-highlight\" data-language=\"ts\"><pre class=\"language-ts\"><code class=\"language-ts\"><span class=\"token keyword\">var</span> data3<span class=\"token operator\">:</span><span class=\"token builtin\">number</span><span class=\"token operator\">=</span><span class=\"token number\">10</span><span class=\"token punctuation\">;</span>\ndata3<span class=\"token operator\">=</span><span class=\"token string\">\"ddd\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token builtin\">console</span><span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>data3<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>As you see, you attach the type after the name of the variable, withy the colon ”<code class=\"language-text\">:</code>“.</p>\n<div class=\"gatsby-highlight\" data-language=\"ts\"><pre class=\"language-ts\"><code class=\"language-ts\"><span class=\"token keyword\">function</span> <span class=\"token function\">test1</span><span class=\"token punctuation\">(</span>value<span class=\"token operator\">:</span><span class=\"token builtin\">number</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n    <span class=\"token builtin\">console</span><span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"value=\"</span><span class=\"token operator\">+</span>value<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token function\">test1</span><span class=\"token punctuation\">(</span><span class=\"token number\">10</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">test2</span><span class=\"token punctuation\">(</span>value1<span class=\"token operator\">:</span><span class=\"token builtin\">number</span><span class=\"token punctuation\">,</span>value2<span class=\"token operator\">:</span><span class=\"token builtin\">number</span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span><span class=\"token builtin\">number</span><span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> value1<span class=\"token operator\">+</span>value2<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">var</span> result<span class=\"token operator\">:</span><span class=\"token builtin\">string</span><span class=\"token operator\">=</span><span class=\"token function\">test2</span><span class=\"token punctuation\">(</span><span class=\"token number\">10</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"20\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>this one above also. You just attach the type of what’s right just in front. </p>\n<h3>Function arguments</h3>\n<div class=\"gatsby-highlight\" data-language=\"ts\"><pre class=\"language-ts\"><code class=\"language-ts\"><span class=\"token keyword\">function</span> <span class=\"token function\">test1</span><span class=\"token punctuation\">(</span>value<span class=\"token operator\">:</span><span class=\"token builtin\">number</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n    <span class=\"token builtin\">console</span><span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"value=\"</span><span class=\"token operator\">+</span>value<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<h3>Function return value</h3>\n<div class=\"gatsby-highlight\" data-language=\"ts\"><pre class=\"language-ts\"><code class=\"language-ts\"><span class=\"token keyword\">function</span> <span class=\"token function\">test2</span><span class=\"token punctuation\">(</span>value1<span class=\"token operator\">:</span><span class=\"token builtin\">number</span><span class=\"token punctuation\">,</span>value2<span class=\"token operator\">:</span><span class=\"token builtin\">number</span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span><span class=\"token builtin\">number</span><span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> value1<span class=\"token operator\">+</span>value2<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<h3>Again, just to review, variable type</h3>\n<div class=\"gatsby-highlight\" data-language=\"ts\"><pre class=\"language-ts\"><code class=\"language-ts\"><span class=\"token keyword\">var</span> result<span class=\"token operator\">:</span><span class=\"token builtin\">string</span><span class=\"token operator\">=</span><span class=\"token function\">test2</span><span class=\"token punctuation\">(</span><span class=\"token number\">10</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"20\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<h1>3. Starting off</h1>\n<p>A part of <code class=\"language-text\">Helloworld.vue</code>:</p>\n<div class=\"gatsby-highlight\" data-language=\"ts\"><pre class=\"language-ts\"><code class=\"language-ts\"><span class=\"token operator\">&lt;</span>script lang<span class=\"token operator\">=</span><span class=\"token string\">\"ts\"</span><span class=\"token operator\">></span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> Component<span class=\"token punctuation\">,</span> Prop<span class=\"token punctuation\">,</span> Vue <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"vue-property-decorator\"</span><span class=\"token punctuation\">;</span>\n\n@Component\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">HelloWorld</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">Vue</span> <span class=\"token punctuation\">{</span>\n  @<span class=\"token function\">Prop</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n  <span class=\"token keyword\">private</span> msg<span class=\"token operator\">!</span><span class=\"token operator\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>script<span class=\"token operator\">></span></code></pre></div>\n<p>You declare things in Vue + Typescript with <code class=\"language-text\">@</code> annotation. It’s called a <strong>decorator</strong>.</p>\n<h2>Define your template class</h2>\n<p>You inherit <code class=\"language-text\">Vue</code> class:</p>\n<div class=\"gatsby-highlight\" data-language=\"ts\"><pre class=\"language-ts\"><code class=\"language-ts\"><span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">HelloWorld</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">Vue</span></code></pre></div>\n<p>and it’s even simpler to declare class members:</p>\n<div class=\"gatsby-highlight\" data-language=\"ts\"><pre class=\"language-ts\"><code class=\"language-ts\"><span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">MyComponent</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">Vue</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">//data</span>\n    <span class=\"token keyword\">public</span> list<span class=\"token operator\">:</span><span class=\"token builtin\">string</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token string\">\"a\"</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"b\"</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"c\"</span><span class=\"token punctuation\">]</span>\n    <span class=\"token keyword\">private</span> sth<span class=\"token operator\">:</span><span class=\"token builtin\">string</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token string\">\"a\"</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"b\"</span><span class=\"token punctuation\">]</span>\n    <span class=\"token comment\">//props</span>\n\t@Prop\n    <span class=\"token keyword\">private</span> msg<span class=\"token operator\">!</span><span class=\"token operator\">:</span><span class=\"token builtin\">string</span><span class=\"token punctuation\">;</span>\n    \n    <span class=\"token comment\">//computed</span>\n    <span class=\"token keyword\">get</span> <span class=\"token function\">sampleData</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n            \n    <span class=\"token punctuation\">}</span>\n    <span class=\"token comment\">//methods</span>\n    <span class=\"token function\">iAmMethod</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<h2>What exactly is a <a href=\"https://www.typescriptlang.org/docs/handbook/decorators.html\">decorator</a></h2>\n<p>Decorators are a stage 2 proposal for JavaScript and are available as an <strong>experimental</strong> feature of TypeScript.</p>\n<p>A Decorator is a special kind of declaration that <strong>can be attached to a class declaration, method, accessor, property, or parameter.</strong></p>\n<h3>Class decorator</h3>\n<p>The one we see above is <strong>a class decorator.</strong></p>\n<p>A Class Decorator is declared just before a class declaration. The class decorator is applied to the constructor of the class and can be used to observe, modify, or replace a class definition. </p>\n<p>That’s it for now. So this part:</p>\n<div class=\"gatsby-highlight\" data-language=\"ts\"><pre class=\"language-ts\"><code class=\"language-ts\">@Component\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">HelloWorld</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">Vue</span> </code></pre></div>\n<p>would mean that <code class=\"language-text\">Component</code> decorator would do necessary operations on the class <code class=\"language-text\">HelloWorld</code> to make it a proper Vue component.</p>\n<h2>Difference between <code class=\"language-text\">public</code> and <code class=\"language-text\">private</code> in this Vue project</h2>","frontmatter":{"title":"Vue","date":"October 19, 2018"}}},"pageContext":{"slug":"/2018-10-19--Vue/","previous":{"fields":{"slug":"/2018-09-05--Async-and-await/"},"frontmatter":{"title":"Async, await, promise"}},"next":{"fields":{"slug":"/2018-11-02--random-hacking-notes/"},"frontmatter":{"title":"random hacking notes"}}}},"staticQueryHashes":["3128451518","426816048"]}