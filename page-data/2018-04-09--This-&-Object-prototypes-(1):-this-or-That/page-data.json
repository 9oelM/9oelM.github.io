{"componentChunkName":"component---src-templates-blog-post-js","path":"/2018-04-09--This-&-Object-prototypes-(1):-this-or-That/","result":{"data":{"site":{"siteMetadata":{"title":"Joel's dev blog","author":"Joel Mun","siteUrl":"https://9oelm.github.io"}},"markdownRemark":{"id":"3fd3f987-4b6c-5c76-b49f-b6bc263cd0d2","excerpt":"Using  is confusing The first confusion Avoiding using  Or, using  The  method allows you to point to the object in the first argument. Additional arguments…","html":"<h2>Using <code class=\"language-text\">this</code> is confusing</h2>\n<h3>The first confusion</h3>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">function</span> <span class=\"token function\">test</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>count<span class=\"token operator\">++</span><span class=\"token punctuation\">;</span> \n    <span class=\"token comment\">// this is actually a global variable here..</span>\n<span class=\"token punctuation\">}</span>\n\ntest<span class=\"token punctuation\">.</span>count <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> \n<span class=\"token comment\">// you are adding count property to the test function.</span>\n<span class=\"token comment\">// this.count and test.count are *different*.</span>\n\n<span class=\"token function\">test</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token function\">test</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token function\">test</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>test<span class=\"token punctuation\">.</span>count<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> \n<span class=\"token comment\">// 0</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>window<span class=\"token punctuation\">.</span>count<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> \n<span class=\"token comment\">// NaN because it was not initialized</span></code></pre></div>\n<h3>Avoiding using <code class=\"language-text\">this</code></h3>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">function</span> <span class=\"token function\">test</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n    test<span class=\"token punctuation\">.</span>count<span class=\"token operator\">++</span><span class=\"token punctuation\">;</span> \n    <span class=\"token comment\">// you are incrementing count property that belongs to test function.</span>\n<span class=\"token punctuation\">}</span>\n\ntest<span class=\"token punctuation\">.</span>count <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> \n<span class=\"token comment\">// you are initializing the count property. </span>\n\n<span class=\"token function\">test</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token function\">test</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token function\">test</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>test<span class=\"token punctuation\">.</span>count<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> \n<span class=\"token comment\">// 3</span></code></pre></div>\n<h3>Or, using <code class=\"language-text\">Function.prototype.call()</code></h3>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token function\">call</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span>thisObj<span class=\"token punctuation\">[</span><span class=\"token punctuation\">,</span> arg1<span class=\"token punctuation\">[</span><span class=\"token punctuation\">,</span> arg2<span class=\"token punctuation\">[</span><span class=\"token punctuation\">,</span>  <span class=\"token punctuation\">[</span><span class=\"token punctuation\">,</span> argN<span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>  </code></pre></div>\n<p>The <code class=\"language-text\">call()</code> method allows you to point to the object in the first argument. Additional arguments serve as arguments for the object (function) in the first argument. </p>\n<p>Simply said, it <a href=\"https://docs.microsoft.com/en-us/scripting/javascript/reference/call-method-function-javascript\">calls a method of an object, substituting another object for the current object.</a> It allows you to change the <code class=\"language-text\">this</code> object of a function from the original context to the new object specified by thisObj. </p>\n<p>If you omit the first argument, <code class=\"language-text\">thisObj</code> would be the <code class=\"language-text\">global</code> object. </p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">function</span> <span class=\"token function\">test</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">num</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>count <span class=\"token operator\">+=</span> num<span class=\"token punctuation\">;</span>\n    <span class=\"token comment\">// you are incrementing count property that belongs to test function.</span>\n<span class=\"token punctuation\">}</span>\n\ntest<span class=\"token punctuation\">.</span>count <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> \n<span class=\"token comment\">// you are initializing the count property. </span>\n\n<span class=\"token function\">test</span><span class=\"token punctuation\">.</span><span class=\"token function\">call</span><span class=\"token punctuation\">(</span>test<span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token function\">test</span><span class=\"token punctuation\">.</span><span class=\"token function\">call</span><span class=\"token punctuation\">(</span>test<span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token function\">test</span><span class=\"token punctuation\">.</span><span class=\"token function\">call</span><span class=\"token punctuation\">(</span>test<span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> \n<span class=\"token comment\">// the test function serves as thisObj. </span>\n<span class=\"token comment\">// Now, this inside test function points to the function itself.</span>\n\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>test<span class=\"token punctuation\">.</span>count<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  \n<span class=\"token comment\">// 1</span></code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\">window<span class=\"token punctuation\">.</span>count <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">test</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">num</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>count <span class=\"token operator\">+=</span> num<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\ntest<span class=\"token punctuation\">.</span>count <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> \n\n<span class=\"token function\">test</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token function\">test</span><span class=\"token punctuation\">(</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token function\">test</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> \n<span class=\"token comment\">// this inside test function points to the global object, window. </span>\n<span class=\"token comment\">// this is not what we want.</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>test<span class=\"token punctuation\">.</span>count<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  \n<span class=\"token comment\">// 0</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>window<span class=\"token punctuation\">.</span>count<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">// 1</span></code></pre></div>\n<h3>Warning on <code class=\"language-text\">this</code> and scopes</h3>\n<p><code class=\"language-text\">this</code> does not refer to a function’s lexical scope. </p>\n<p>Consider the code copied from YDKJS:</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">function</span> <span class=\"token function\">foo</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">var</span> a <span class=\"token operator\">=</span> <span class=\"token number\">2</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">bar</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">bar</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>a <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token function\">foo</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// logs undefined</span></code></pre></div>\n<blockquote>\n<p>“the developer who writes such code is <strong>attempting to use this to create a bridge between the lexical scopes of foo() and bar()</strong>, so that bar() has access to the variable a in the inner scope of foo(). No such bridge is possible. You cannot use a this reference to look something up in a lexical scope. It is not possible.”</p>\n</blockquote>\n<h2><code class=\"language-text\">this</code></h2>\n<ul>\n<li><code class=\"language-text\">this</code> is NOT author-time binding. It’s a runtime binding. It depends on contexts. It’s not about WHERE the function is called from, but <strong>HOW</strong> the function is called. </li>\n</ul>","frontmatter":{"title":"This & Object prototypes (1): this or That?","date":"April 09, 2018"}}},"pageContext":{"slug":"/2018-04-09--This-&-Object-prototypes-(1):-this-or-That/","previous":{"fields":{"slug":"/2018-04-08--Scope-and-closure-(6):-Dynamic-scope,-Polyfilling-Block-Scope,-and-Lexical-this/"},"frontmatter":{"title":"Scope and closure (6): Dynamic scope, Polyfilling Block Scope, and Lexical-this"}},"next":{"fields":{"slug":"/2018-04-20--My-story-(1):-changes-that-occurred-from-high-school-to-the-Navy/"},"frontmatter":{"title":"My story (1): changes that occurred from high school to the Navy"}}}},"staticQueryHashes":["3128451518","426816048"]}