{"version":3,"sources":["webpack:///./src/components/Navigation.js","webpack:///./src/templates/tags.js"],"names":["Navigation","location","useLocation","console","log","map","tabName","tabPath","key","className","style","display","cursor","href","pathname","Tags","pageContext","data","tag","allMarkdownRemark","edges","totalCount","tagHeader","title","keywords","border","color","marginBottom","src","height","node","slug","fields","frontmatter","tab","to"],"mappings":"8FAAA,mFAKaA,GALb,UAK0B,WACtB,IAAMC,EAAWC,wBAGjB,OAFAC,QAAQC,MAED,CAAC,CAAC,QAAD,KAAgB,CAAC,WAAD,cAA4B,CAAC,OAAD,UAAoB,CAAC,SAAD,aAAwBC,KAAI,YAAyB,IAAvBC,EAAsB,KAAbC,EAAa,KACxH,OAAO,kBAAC,OAAD,CACPC,IAAKF,EACLG,UAAU,kBACVC,MAAO,CACLC,QAAS,QACTC,OAAO,WAETC,KAAMN,GACNN,EAASa,WAAaP,EAAtB,OAAuCD,EAAYA,S,kCClB3D,wGAqEeS,UA7DF,SAAC,GAAqC,IAAnCC,EAAkC,EAAlCA,YAAaC,EAAqB,EAArBA,KAAMhB,EAAe,EAAfA,SACzBiB,EAAQF,EAARE,IADwC,EAElBD,EAAKE,kBAA3BC,EAFwC,EAExCA,MAAOC,EAFiC,EAEjCA,WACTC,EAAeD,EAAN,SACE,IAAfA,EAAmB,GAAK,KADX,iBAEEH,EAFF,IAGf,OACE,kBAAC,IAAD,CAAQjB,SAAUA,EAAUsB,MAAK,yBAC/B,kBAAC,IAAD,CACIA,MAAK,+BAAiCL,EACtCM,SAAU,CAAC,OAAD,6CAA0DN,KAEtE,uBAAGL,KAAK,8BAA8BH,MAAO,CAAEe,OAAO,OAASC,MAAO,gBAAiB,yBAAKhB,MAAO,CAAEiB,aAAc,GAAKC,IAAI,mMAC5H,yBAAKlB,MAAO,CAAEmB,OAAO,UACvB,kBAAC,IAAD,MACA,kBAAC,IAAD,MACA,4BACEP,GACF,4BAEGF,EAAMf,KAAI,YAAe,IAAZyB,EAAW,EAAXA,KACJC,EAASD,EAAKE,OAAdD,KADe,EAEAD,EAAKG,YAApBV,EAFe,EAEfA,MAAOW,EAFQ,EAERA,IACf,OACE,wBAAI1B,IAAKuB,GACP,kBAAC,OAAD,CAAMI,GAAO,YAAHD,EAAA,YAAgCH,EAASA,GAAOR,QASlE,kBAAC,OAAD,CAAMY,GAAG,SAAT,e","file":"component---src-templates-tags-js-883cc23c56697920456c.js","sourcesContent":["import React from 'react'\nimport { Link } from 'gatsby'\nimport { useLocation }  from '@reach/router'\nimport './navigation.css'\n\nexport const Navigation = () => {\n    const location = useLocation()\n    console.log()\n\n    return [[`Posts`, `/`], [`Journals`, `/journals/`], [`Tags`, `/tags/`], [`rÃ©sumÃ©`, `/resume/`]].map(([tabName, tabPath]) => {\n        return <Link\n        key={tabName}\n        className=\"navigation-link\"\n        style={{\n          display: 'block',\n          cursor: `pointer`,\n        }}\n        href={tabPath}\n      >{location.pathname === tabPath ? `ðŸ‘‰  ${tabName}` : tabName}</Link>\n      })\n}","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Layout from \"../components/layout\"\nimport { Link, graphql } from \"gatsby\"\nimport { rhythm } from \"../utils/typography\"\nimport SEO from \"../components/seo\"\nimport Bio from \"../components/bio\"\nimport { Navigation } from \"../components/Navigation\"\nconst Tags = ({ pageContext, data, location }) => {\n  const { tag } = pageContext\n  const { edges, totalCount } = data.allMarkdownRemark\n  const tagHeader = `${totalCount} post${\n    totalCount === 1 ? \"\" : \"s\"\n  } tagged with \"${tag}\"`\n  return (\n    <Layout location={location} title={`Joel's dev blog: tags`}>\n      <SEO\n          title={`Joel's dev blog - tagged as ${tag}`}\n          keywords={[`blog`, `javascript`, `typescript`, `react`, `security`, tag]}\n        />\n        <a href=\"https://hits.seeyoufarm.com\" style={{ border: `none`, color: 'transparent' }}><img style={{ marginBottom: 0 }} src=\"https://hits.seeyoufarm.com/api/count/incr/badge.svg?url=https%3A%2F%2F9oelm.github.io&count_bg=%23848683&title_bg=%23555555&icon=&icon_color=%23E7E7E7&title=hits+since+2022&edge_flat=false\"/></a>\n        <div style={{ height: `10px`}} />\n      <Bio />\n      <Navigation />\n      <h1\n      >{tagHeader}</h1>\n      <ul\n      >\n        {edges.map(({ node }) => {\n          const { slug } = node.fields\n          const { title, tab } = node.frontmatter\n          return (\n            <li key={slug}>\n              <Link to={tab === `journal` ? `/journals${slug}` : slug}>{title}</Link>\n            </li>\n          )\n        })}\n      </ul>\n      {/*\n              This links to a page that does not yet exist.\n              You'll come back to it!\n            */}\n      <Link to=\"/tags\"\n      >All tags</Link>\n    </Layout>\n  )\n}\nTags.propTypes = {\n  pageContext: PropTypes.shape({\n    tag: PropTypes.string.isRequired,\n  }),\n  data: PropTypes.shape({\n    allMarkdownRemark: PropTypes.shape({\n      totalCount: PropTypes.number.isRequired,\n      edges: PropTypes.arrayOf(\n        PropTypes.shape({\n          node: PropTypes.shape({\n            frontmatter: PropTypes.shape({\n              title: PropTypes.string.isRequired,\n            }),\n            fields: PropTypes.shape({\n              slug: PropTypes.string.isRequired,\n            }),\n          }),\n        }).isRequired\n      ),\n    }),\n  }),\n}\nexport default Tags\nexport const pageQuery = graphql`\n  query($tag: String) {\n    allMarkdownRemark(\n      limit: 2000\n      sort: { fields: [frontmatter___date], order: DESC }\n      filter: { frontmatter: { tags: { in: [$tag] } } }\n    ) {\n      totalCount\n      edges {\n        node {\n          fields {\n            slug\n          }\n          frontmatter {\n            title\n            tab\n          }\n        }\n      }\n    }\n  }\n`"],"sourceRoot":""}