{"version":3,"sources":["webpack:///./src/components/layout.js","webpack:///./src/components/seo.js","webpack:///./src/pages/404.js"],"names":["Layout","render","header","this","props","location","title","children","pathname","style","scale","marginBottom","rhythm","marginTop","SF","darkText","boxShadow","textDecoration","to","fontFamily","marginLeft","marginRight","maxWidth","padding","darkBackground","Date","getFullYear","href","React","Component","SEO","description","lang","meta","keywords","query","detailsQuery","data","metaDescription","site","siteMetadata","htmlAttributes","titleTemplate","name","content","property","author","concat","length","join","http-equiv","defaultProps","NotFoundPage","siteTitle"],"mappings":"oKAMMA,E,kGACJC,OAAA,WAAU,IAGJC,EAHG,EAC+BC,KAAKC,MAAnCC,EADD,EACCA,SAAUC,EADX,EACWA,MAAOC,EADlB,EACkBA,SAgDzB,OA3CEL,EAJY,MAGVG,EAASG,SAET,wBACEC,MAAK,iBACAC,YAAM,KADN,CAEHC,aAAcC,YAAO,KACrBC,UAAW,GACRC,IAAGC,WAGR,kBAAC,OAAD,CACEN,MAAK,eACHO,UAAU,OACVC,eAAe,QACZH,IAAGC,UAERG,GAAE,KAEDZ,IAML,wBACEG,MAAK,eACHU,WAAW,yBACXN,UAAW,GACRC,IAAGC,WAGR,kBAAC,OAAD,CACEN,MAAK,eACHO,UAAU,OACVC,eAAe,QACZH,IAAGC,UAERG,GAAE,KAEDZ,IAMP,yBACEG,MAAK,eACHW,WAAW,OACXC,YAAY,OACZC,SAAUV,YAAO,IACjBW,QAAYX,YAAO,KAAZ,IAAoBA,YAAO,EAAI,IACnCE,IAAGU,iBAGR,gCACEtB,GACF,8BACEK,GACF,4BACEE,MAAK,iBACAK,IAAGU,eACHV,IAAGC,WAHV,eAMc,IAAIU,MAAOC,cANzB,mBAQE,uBAAGC,KAAK,4BAAR,a,GAxEWC,IAAMC,WA+EZ7B,O,kCCrFf,iDASA,SAAS8B,EAAT,GAA4D,IAA7CC,EAA4C,EAA5CA,YAAaC,EAA+B,EAA/BA,KAAMC,EAAyB,EAAzBA,KAAMC,EAAmB,EAAnBA,SAAU5B,EAAS,EAATA,MAChD,OACE,kBAAC,cAAD,CACE6B,MAAOC,EACPnC,OAAQ,SAAAoC,GACN,IAAMC,EACJP,GAAeM,EAAKE,KAAKC,aAAaT,YACxC,OACE,kBAAC,IAAD,CACEU,eAAgB,CACdT,QAEF1B,MAAOA,EACPoC,cAAa,QAAUL,EAAKE,KAAKC,aAAalC,MAC9C2B,KAAM,CACJ,CACEU,KAAK,cACLC,QAASN,GAEX,CACEO,SAAS,WACTD,QAAStC,GAEX,CACEuC,SAAS,iBACTD,QAASN,GAEX,CACEO,SAAS,UACTD,QAAQ,WAEV,CACED,KAAK,eACLC,QAAQ,WAEV,CACED,KAAK,kBACLC,QAASP,EAAKE,KAAKC,aAAaM,QAElC,CACEH,KAAK,gBACLC,QAAStC,GAEX,CACEqC,KAAK,sBACLC,QAASN,IAGVS,OACCb,EAASc,OAAS,EACd,CACEL,KAAK,WACLC,QAASV,EAASe,KAAT,OAEX,IAELF,OAAOd,IAEV,0BAAMiB,aAAW,gBAAgBN,QAAQ,cACzC,0BAAMM,aAAW,gBAAgBN,QAAQ,aACzC,0BAAMM,aAAW,UAAUN,QAAQ,MACnC,0BAAMM,aAAW,UAAUN,QAAQ,iCACnC,0BAAMM,aAAW,SAASN,QAAQ,iBAQ9Cd,EAAIqB,aAAe,CACjBnB,KAAK,KACLC,KAAM,GACNC,SAAU,IAWGJ,MAEf,IAAMM,EAAY,c,kHCxFZgB,E,kGACJnD,OAAA,WAAU,IAEFoD,EADWlD,KAAKC,MAAdiC,KACeE,KAAKC,aAAalC,MAEzC,OACE,kBAAC,IAAD,CAAQD,SAAUF,KAAKC,MAAMC,SAAUC,MAAO+C,GAC5C,kBAAC,IAAD,CAAK/C,MAAM,mBACX,wBACEG,MAAOK,IAAGC,UADZ,aAGA,uBACEN,MAAOK,IAAGC,UADZ,6D,GAXmBa,IAAMC,WAmBlBuB","file":"component---src-pages-404-js-54b52f87980ca2f2f15d.js","sourcesContent":["import React from \"react\"\nimport { Link } from \"gatsby\"\n\nimport { rhythm, scale } from \"../utils/typography\"\nimport { SF } from \"../styles/theme\"\n\nclass Layout extends React.Component {\n  render() {\n    const { location, title, children } = this.props\n    const rootPath = `${__PATH_PREFIX__}/`\n    let header\n\n    if (location.pathname === rootPath) {\n      header = (\n        <h1\n          style={{\n            ...scale(1.5),\n            marginBottom: rhythm(1.5),\n            marginTop: 0,\n            ...SF.darkText\n          }}\n        >\n          <Link\n            style={{\n              boxShadow: `none`,\n              textDecoration: `none`,\n              ...SF.darkText\n            }}\n            to={`/`}\n          >\n            {title}\n          </Link>\n        </h1>\n      )\n    } else {\n      header = (\n        <h3\n          style={{\n            fontFamily: `Montserrat, sans-serif`,\n            marginTop: 0,\n            ...SF.darkText\n          }}\n        >\n          <Link\n            style={{\n              boxShadow: `none`,\n              textDecoration: `none`,\n              ...SF.darkText\n            }}\n            to={`/`}\n          >\n            {title}\n          </Link>\n        </h3>\n      )\n    }\n    return (\n      <div\n        style={{\n          marginLeft: `auto`,\n          marginRight: `auto`,\n          maxWidth: rhythm(40),\n          padding: `${rhythm(1.5)} ${rhythm(3 / 4)}`,\n          ...SF.darkBackground,\n        }}\n      >\n        <header\n        >{header}</header>\n        <main\n        >{children}</main>\n        <footer\n          style={{\n            ...SF.darkBackground,\n            ...SF.darkText\n          }}\n        >\n          Â© Joel Mun {new Date().getFullYear()}, Built with\n          {` `}\n          <a href=\"https://www.gatsbyjs.org\">Gatsby</a>\n        </footer>\n      </div>\n    )\n  }\n}\n\nexport default Layout\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Helmet from \"react-helmet\"\nimport { StaticQuery, graphql } from \"gatsby\"\n{/* <meta http-equiv=\"cache-control\" content=\"max-age=0\" />\n<meta http-equiv=\"cache-control\" content=\"no-cache\" />\n<meta http-equiv=\"expires\" content=\"0\" />\n<meta http-equiv=\"expires\" content=\"Tue, 01 Jan 1980 1:00:00 GMT\" />\n<meta http-equiv=\"pragma\" content=\"no-cache\" /> */}\nfunction SEO({ description, lang, meta, keywords, title }) {\n  return (\n    <StaticQuery\n      query={detailsQuery}\n      render={data => {\n        const metaDescription =\n          description || data.site.siteMetadata.description\n        return (\n          <Helmet\n            htmlAttributes={{\n              lang,\n            }}\n            title={title}\n            titleTemplate={`%s | ${data.site.siteMetadata.title}`}\n            meta={[\n              {\n                name: `description`,\n                content: metaDescription,\n              },\n              {\n                property: `og:title`,\n                content: title,\n              },\n              {\n                property: `og:description`,\n                content: metaDescription,\n              },\n              {\n                property: `og:type`,\n                content: `website`,\n              },\n              {\n                name: `twitter:card`,\n                content: `summary`,\n              },\n              {\n                name: `twitter:creator`,\n                content: data.site.siteMetadata.author,\n              },\n              {\n                name: `twitter:title`,\n                content: title,\n              },\n              {\n                name: `twitter:description`,\n                content: metaDescription,\n              },\n            ]\n              .concat(\n                keywords.length > 0\n                  ? {\n                      name: `keywords`,\n                      content: keywords.join(`, `),\n                    }\n                  : []\n              )\n              .concat(meta)}\n          >\n            <meta http-equiv=\"cache-control\" content=\"max-age=0\" />\n            <meta http-equiv=\"cache-control\" content=\"no-cache\" />\n            <meta http-equiv=\"expires\" content=\"0\" />\n            <meta http-equiv=\"expires\" content=\"Tue, 01 Jan 1980 1:00:00 GMT\" />\n            <meta http-equiv=\"pragma\" content=\"no-cache\" />\n          </Helmet>\n        )\n      }}\n    />\n  )\n}\n\nSEO.defaultProps = {\n  lang: `en`,\n  meta: [],\n  keywords: [],\n}\n\nSEO.propTypes = {\n  description: PropTypes.string,\n  lang: PropTypes.string,\n  meta: PropTypes.array,\n  keywords: PropTypes.arrayOf(PropTypes.string),\n  title: PropTypes.string.isRequired,\n}\n\nexport default SEO\n\nconst detailsQuery = graphql`\n  query DefaultSEOQuery {\n    site {\n      siteMetadata {\n        title\n        description\n        author\n      }\n    }\n  }\n`\n","import React from \"react\"\nimport { graphql } from \"gatsby\"\n\nimport Layout from \"../components/layout\"\nimport SEO from \"../components/seo\"\nimport { SF } from \"../styles/theme\"\n\nclass NotFoundPage extends React.Component {\n  render() {\n    const { data } = this.props\n    const siteTitle = data.site.siteMetadata.title\n\n    return (\n      <Layout location={this.props.location} title={siteTitle}>\n        <SEO title=\"404: Not Found\" />\n        <h1\n          style={SF.darkText}\n        >Not Found</h1>\n        <p\n          style={SF.darkText}\n        >You just hit a route that doesn&#39;t exist... the sadness.</p>\n      </Layout>\n    )\n  }\n}\n\nexport default NotFoundPage\n\nexport const pageQuery = graphql`\n  query {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n  }\n`\n"],"sourceRoot":""}