{"data":{"site":{"siteMetadata":{"title":null,"author":null}},"markdownRemark":{"id":"a8db650b-f47d-5f88-8ed4-d618f86d0b7b","excerpt":"Starting off Last time , we looked into how redux in a web development project could be installed and set up. Now we are going to find out how to actually…","html":"<h2>Starting off</h2>\n<p><a href=\"https://9oelm.github.io/works/2018/06/13/Creating-music-player-(2)-Specifics.html\">Last time</a>, we looked into how redux in a web development project could be installed and set up. Now we are going to find out how to actually connect the source with redux configruations (for example, editing state in the <code class=\"language-text\">store</code> when a button is clicked)</p>\n<h2>Redux and React are not… a family</h2>\n<p>They are just separate, unrelated libraries. They are just good to be used together. </p>\n<h2>Subscribing</h2>\n<p>Passing a function as an argument to <code class=\"language-text\">store.subscribe</code> function would append that function to it:</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\">store<span class=\"token punctuation\">.</span><span class=\"token function\">subscribe</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"something happened - perhaps write something more like store.getState().data\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></code></pre></div>\n<p>When you wanna unsubscribe it, just call that function returned from <code class=\"language-text\">subscribe</code> function:</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">const</span> unsubscribe <span class=\"token operator\">=</span> store<span class=\"token punctuation\">.</span><span class=\"token function\">subscribe</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"something happened - perhaps write something more like store.getState().data\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token function\">unsubscribe</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// stop logging</span></code></pre></div>\n<h2>Container components</h2>\n<p>For now, I will just need one container component, which is <code class=\"language-text\">UpperAppBarContainer</code>. </p>\n<p>First you need to pass <code class=\"language-text\">this.props.onClick</code> to <code class=\"language-text\">UpperAppBar</code>’s prop:\n<code class=\"language-text\">components/UpperAppBar.js</code></p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">class</span> <span class=\"token class-name\">UpperAppBar</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">React<span class=\"token punctuation\">.</span>Component</span> <span class=\"token punctuation\">{</span>\n    \n    <span class=\"token function\">render</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span> classes<span class=\"token punctuation\">,</span> onClick <span class=\"token punctuation\">}</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>props<span class=\"token punctuation\">;</span> <span class=\"token punctuation\">{</span><span class=\"token comment\">/* &lt;-- Here */</span><span class=\"token punctuation\">}</span>\n        <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n            <span class=\"token operator\">&lt;</span>div className<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span>classes<span class=\"token punctuation\">.</span>root<span class=\"token punctuation\">}</span><span class=\"token operator\">></span>\n      <span class=\"token operator\">&lt;</span>AppBar position<span class=\"token operator\">=</span><span class=\"token string\">\"static\"</span><span class=\"token operator\">></span>\n        <span class=\"token operator\">&lt;</span>Toolbar<span class=\"token operator\">></span>\n          <span class=\"token operator\">&lt;</span>IconButton className<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span>classes<span class=\"token punctuation\">.</span>menuButton<span class=\"token punctuation\">}</span> color<span class=\"token operator\">=</span><span class=\"token string\">\"inherit\"</span> aria<span class=\"token operator\">-</span>label<span class=\"token operator\">=</span><span class=\"token string\">\"Menu\"</span><span class=\"token operator\">></span>\n            <span class=\"token operator\">&lt;</span>MenuIcon <span class=\"token operator\">/</span><span class=\"token operator\">></span>\n          <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>IconButton<span class=\"token operator\">></span>\n          \n          <span class=\"token operator\">&lt;</span>Typography variant<span class=\"token operator\">=</span><span class=\"token string\">\"title\"</span> color<span class=\"token operator\">=</span><span class=\"token string\">\"inherit\"</span> className<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span>classes<span class=\"token punctuation\">.</span>flex<span class=\"token punctuation\">}</span><span class=\"token operator\">></span>\n            <span class=\"token number\">7</span>o Music Player\n          <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>Typography<span class=\"token operator\">></span>\n          <span class=\"token operator\">&lt;</span>IconButton color <span class=\"token operator\">=</span> <span class=\"token string\">\"inherit\"</span> aria<span class=\"token operator\">-</span>label<span class=\"token operator\">=</span><span class=\"token string\">\"Search\"</span> onClick <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>onClick<span class=\"token punctuation\">}</span> <span class=\"token operator\">></span> <span class=\"token punctuation\">{</span><span class=\"token comment\">/* &lt;-- And Here */</span><span class=\"token punctuation\">}</span>\n            <span class=\"token operator\">&lt;</span>SearchIcon <span class=\"token operator\">/</span><span class=\"token operator\">></span>\n          <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>IconButton<span class=\"token operator\">></span>\n        <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>Toolbar<span class=\"token operator\">></span>\n      <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>AppBar<span class=\"token operator\">></span>\n    <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>div<span class=\"token operator\">></span>\n        <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>And then you need to make a container component with <code class=\"language-text\">react-redux</code>.\n<code class=\"language-text\">components/containers/containers.js</code></p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">import</span> React <span class=\"token keyword\">from</span> <span class=\"token string\">'react'</span>\n<span class=\"token keyword\">import</span> UpperAppBar <span class=\"token keyword\">from</span> <span class=\"token string\">'../UpperAppBar'</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> connect <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'react-redux'</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> toggleSearchButton <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'../../actions/index'</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">const</span> UpperAppBarContainer <span class=\"token operator\">=</span> <span class=\"token function\">connect</span><span class=\"token punctuation\">(</span>\n    <span class=\"token keyword\">null</span><span class=\"token punctuation\">,</span> <span class=\"token comment\">// no new states needed to be told</span>\n    dispatch <span class=\"token operator\">=></span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n        <span class=\"token function\">onClick</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n            <span class=\"token function\">dispatch</span><span class=\"token punctuation\">(</span><span class=\"token function\">toggleSearchButton</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n            console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"clicked\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// just for testing purpose</span>\n        <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span>UpperAppBar<span class=\"token punctuation\">)</span></code></pre></div>\n<p>I don’t know well, but inside that <code class=\"language-text\">connect</code> function, you are passing the <code class=\"language-text\">onClick</code> function as a prop to the <code class=\"language-text\">UpperAppBar</code>. And the </p>\n<p><a href=\"https://www.sohamkamani.com/blog/2017/03/31/react-redux-connect-explained/\">sohamkamani.com</a></p>\n<blockquote>\n<p>mapStateToProps and mapDispatchToProps are both pure functions that are provided the stores “state” and “dispatch” respectively. <strong>Furthermore, both functions have to return an object, whose keys will then be passed on as the props of the component they are connected to.</strong></p>\n</blockquote>","frontmatter":{"title":"Creating music player (3): Digging redux + react","date":"June 16, 2018","description":null}}},"pageContext":{"slug":"/2018-06-16--Creating-music-player-(3):-Digging-redux-+-react/","previous":{"fields":{"slug":"/2018-06-13--Creating-music-player-(2):-Specifics/"},"frontmatter":{"title":"Creating music player (2): Specifics"}},"next":{"fields":{"slug":"/2018-06-19--Review-on-DEF-CON@COMROKFLT-2018/"},"frontmatter":{"title":"Review on DEF CON@COMROKFLT 2018"}}}}