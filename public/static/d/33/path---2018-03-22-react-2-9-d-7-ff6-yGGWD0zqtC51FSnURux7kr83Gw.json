{"data":{"site":{"siteMetadata":{"title":"Joel's dev blog","author":"Kyle Mathews"}},"markdownRemark":{"id":"580bdf2c-4680-5b39-b603-e51af90970b0","excerpt":"FYI My notes are overwritten on the content copied from  https://reactjs.org/docs . JSX It is a “syntax extension to JavaScript”. React embraces the fact that…","html":"<h2>FYI</h2>\n<p>My notes are overwritten on the content copied from <a href=\"https://reactjs.org/docs\">https://reactjs.org/docs</a>.</p>\n<h2>JSX</h2>\n<ul>\n<li>It is a “syntax extension to JavaScript”.</li>\n<li>React embraces the fact that <strong>rendering logic is inherently coupled with other UI logic:</strong> how events are handled, how the state changes over time, and how the data is prepared for display.</li>\n<li>You can <strong>embed</strong> any JavaScript expression in JSX by wrapping it in curly braces: <code class=\"language-text\">&lt;p&gt;4+4 is {4+4}&lt;/p&gt;</code>.</li>\n<li>\n<p>We split JSX over multiple lines for <strong>readability</strong>. While it isn’t required, when doing this, we also recommend wrapping it in parentheses to <strong>avoid the pitfalls of automatic semicolon insertion</strong>:</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">const</span> element <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span> <span class=\"token comment\">// ( &lt;- here if you don't understand</span>\n<span class=\"token operator\">&lt;</span>div<span class=\"token operator\">></span>\n<span class=\"token operator\">&lt;</span>h1<span class=\"token operator\">></span>Hello<span class=\"token operator\">!</span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>h1<span class=\"token operator\">></span>\n<span class=\"token operator\">&lt;</span>h2<span class=\"token operator\">></span>Good to see you here<span class=\"token punctuation\">.</span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>h2<span class=\"token operator\">></span>\n<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>div<span class=\"token operator\">></span>\n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// &lt;- ) here</span></code></pre></div>\n</li>\n<li>\n<p>you can use JSX inside of if statements and for loops, assign it to variables, accept it as arguments, and return it from functions: </p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">function</span> <span class=\"token function\">getGreeting</span><span class=\"token punctuation\">(</span>user<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>user<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">return</span> <span class=\"token operator\">&lt;</span>h1<span class=\"token operator\">></span>Hello<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span><span class=\"token function\">formatName</span><span class=\"token punctuation\">(</span>user<span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span><span class=\"token operator\">!</span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>h1<span class=\"token operator\">></span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token keyword\">return</span> <span class=\"token operator\">&lt;</span>h1<span class=\"token operator\">></span>Hello<span class=\"token punctuation\">,</span> Stranger<span class=\"token punctuation\">.</span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>h1<span class=\"token operator\">></span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n</li>\n<li>\n<p>JSX Prevents Injection Attacks because it converts the values embedded in JSX to string before rendering them. I think it means this: </p>\n<div class=\"gatsby-highlight\" data-language=\"html\"><pre class=\"language-html\"><code class=\"language-html\">const title = <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>h1</span><span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>script</span><span class=\"token punctuation\">></span></span>window.alert('this is malicious');<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>script</span><span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>h1</span><span class=\"token punctuation\">></span></span>\n// This is safe:\nconst element = <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>h1</span><span class=\"token punctuation\">></span></span>{title}<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>h1</span><span class=\"token punctuation\">></span></span>;</code></pre></div>\n</li>\n</ul>","frontmatter":{"title":"React (2)","date":"March 22, 2018","description":null}}},"pageContext":{"slug":"/2018-03-22--React-(2)/","previous":{"fields":{"slug":"/2018-03-22--React-(3)/"},"frontmatter":{"title":"React (3)"}},"next":{"fields":{"slug":"/2018-03-22--React-(1)/"},"frontmatter":{"title":"React (1)"}}}}