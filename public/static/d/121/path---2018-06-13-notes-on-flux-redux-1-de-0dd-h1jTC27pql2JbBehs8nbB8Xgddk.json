{"data":{"site":{"siteMetadata":{"title":"Gatsby Starter Blog","author":"Kyle Mathews"}},"markdownRemark":{"id":"f76764a1-9f72-5278-94b3-dc552944c41e","excerpt":"Inside Flux Store Flux stores the data on application states inside  , which is outside of react. Store is the only place where the view could be updated from…","html":"<h2>Inside Flux</h2>\n<h3>Store</h3>\n<ul>\n<li>Flux stores the data on application states inside <code class=\"language-text\">store</code>, which is outside of react.</li>\n<li>Store is the only place where the view could be updated from and data could be modified. </li>\n</ul>\n<h3>Action</h3>\n<ul>\n<li>Action is produced from the interaction between an user and the application.</li>\n</ul>\n<h3>Dispatcher</h3>\n<ul>\n<li>It puts actions into a queue and puts actions out into appropriate stores. </li>\n</ul>\n<h2>Immutable</h2>\n<p>Flux’s actions and state data are immutable. </p>\n<h2>Using flux means…</h2>\n<p>View components are not managing the application states.</p>\n<h2>Source</h2>\n<p><a href=\"https://d2.naver.com/helloworld/1848131\">Naver</a> did a great job at explaining redux and project structure.</p>","frontmatter":{"title":"Notes on flux & redux","date":"Invalid date","description":null}}},"pageContext":{"slug":"/2018-06-13--Notes-on-flux-&-redux/","previous":{"fields":{"slug":"/2018-06-10--Next.js-(2):-Deeper-dive/"},"frontmatter":{"title":"Next.js (2): Deeper dive"}},"next":{"fields":{"slug":"/2018-06-13--Creating-music-player-(2):-Specifics/"},"frontmatter":{"title":"Creating music player (2): Specifics"}}}}